"""
Django settings for test_app project.
Generated by 'django-admin startproject' using Django 3.1.7.
For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


env = environ.Env()

environ.Env.read_env(
    BASE_DIR / "test_app" / ".env"
)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "uhtgm(e2y3@5%0x!wy#re#fn+51h*ck88^ocm7d1=hx^@(&7$7"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    #
    "widget_tweaks",
    "django_twilio_2fa.apps.Twilio2faConfig",
    #
    "users.apps.UsersConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "test_app.middleware.Require2faMiddleware",
]

ROOT_URLCONF = "test_app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "test_app.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": "test",
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": True,
        },
        "django_twilio_2fa": {
            "handlers": ["console"],
            "level": "DEBUG",
            "propagate": True,
        }
    },
}


# DJANGO-TWILIO-2FA

TWILIO_2FA_ACCOUNT_SID = env("TWILIO_2FA_ACCOUNT_SID")
TWILIO_2FA_AUTH_TOKEN = env("TWILIO_2FA_AUTH_TOKEN")
TWILIO_2FA_SERVICE_ID = env("TWILIO_2FA_SERVICE_ID")

TWILIO_2FA_PHONE_NUMBER_ALLOWED_COUNTRIES = "US,CA,IN".split(",")

TWILIO_2FA_ALLOW_USER_ERROR_MESSAGE = "nope"
TWILIO_2FA_ALLOW_UNVERIFIED_SMS = True
TWILIO_2FA_ALLOW_CHANGE = False
TWILIO_2FA_MAX_ATTEMPTS = 5
TWILIO_2FA_ALLOW_UNAUTHENTICATED_USERS = True

def twilio_2fa_register_cb(user, phone_number, phone_carrier_type):
    from users.models import UserProfile

    if not hasattr(user, "profile"):
        user.profile = UserProfile.objects.create(
            user=user
        )

    user.profile.phone_number = phone_number
    user.profile.phone_carrier_type = phone_carrier_type
    user.profile.save()

    return True


TWILIO_2FA_REGISTER_CB = twilio_2fa_register_cb


def twilio_2fa_phone_number(user=None):
    from django_twilio_2fa.options import PhoneNumber

    if user and hasattr(user, "profile"):
        if not user.profile.phone_number:
            return

        return PhoneNumber(
            phone_number=user.profile.phone_number,
            carrier_type=user.profile.phone_carrier_type,
            country_code="US"
        )

    return None


TWILIO_2FA_USER_PHONE_NUMBER_CB = twilio_2fa_phone_number


def twilio_2fa_email(user=None):
    from django_twilio_2fa.options import Email

    if user:
        if not user.email:
            return

        return Email(
            email=user.email
        )

    return


TWILIO_2FA_USER_EMAIL_CB = twilio_2fa_email


def twilio_2fa_timeout(user):
    return user.profile.timeout_for_2fa


TWILIO_2FA_TIMEOUT_CB = twilio_2fa_timeout


def twilio_allowed_methods(user):
    # what methods are allowed is based on whatever logic is needed.
    # this  is just an example.
    methods = []
    if user and hasattr(user, "profile"):
        if user.profile.phone_number:
            methods.append("call")
            if TWILIO_2FA_ALLOW_UNVERIFIED_SMS or user.profile.phone_carrier_type == "mobile":
                methods.append("sms")
    if user and user.email:
        methods.append("email")

    return methods


TWILIO_2FA_ALLOWED_METHODS = ["sms", "call"]

TWILIO_2FA_USER_METHODS_CB = twilio_allowed_methods

TWILIO_2FA_ALLOW_USERLESS = True

TWILIO_2FA_CANCEL_ON_MAX_RETRIES = False

TWILIO_2FA_USER_MUST_HAVE_PHONE = True
