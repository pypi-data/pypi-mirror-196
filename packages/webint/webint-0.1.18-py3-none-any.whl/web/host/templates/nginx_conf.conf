$def with (ip_address, onion)
$ run_dir = "/home/gaea/app/run"
$ streaming_dir = f"{run_dir}/media/streaming"
user  gaea  gaea;
load_module "modules/ngx_rtmp_module.so";

worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    types_hash_max_size            2048;
    sendfile                       on;
    tcp_nopush                     on;
    tcp_nodelay                    on;
    keepalive_timeout              65;
    server_tokens                  off;
    server_names_hash_bucket_size  128;

    gzip          on;
    gzip_disable  "msie6";

    # access_log  /root/nginx/logs/access.log;
    # error_log   /root/nginx/logs/error.log;

    # log_format  gaeafmt  '$$remote_addr [$$time_local] "$$request" $$status '
    #                      '$$request_time $$bytes_sent "$$http_referer" '
    #                      '"$$http_user_agent" "$$sent_http_set_cookie"';

    # include /root/nginx/conf/conf.d/*.conf;

    server {
        listen       80  default_server;
        listen       [::]:80  default_server;
        listen       443  ssl  http2;
        listen       [::]:443  ssl  http2;
        server_name  $ip_address  $onion;
        charset      utf-8;

        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/nginx/dhparam.pem; 
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
        ssl_ecdh_curve secp384r1;
        ssl_session_timeout 10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        ssl_certificate  /etc/ssl/certs/ip-selfsigned.crt;
        ssl_certificate_key  /etc/ssl/private/ip-selfsigned.key;

        add_header  Strict-Transport-Security  "max-age=63072000; includeSubDomains; preload"  always;
        add_header  X-Frame-Options  DENY;
        add_header  X-Content-Type-Options  nosniff;
        add_header  X-XSS-Protection  "1; mode=block";
        add_header  Onion-Location  http://$onion;

        client_max_body_size  0;

        location  /hls  {
            root  /home/gaea/app/run/media/streaming;
            add_header  Cache-Control  no-cache;
            add_header  Access-Control-Allow-Origin  *;
            types {
                application/vnd.apple.mpegurl  m3u8;
            }
        }
        location  ~  /code/projects/([\w.-]+)\.git(/git-receive-pack)$$ {
            auth_basic            "Restricted";
            auth_basic_user_file  /home/gaea/app/run/code/meta/gitpasswd;
            # TODO auth_request      /auth/introspection;

            fastcgi_pass   unix:/var/run/fcgiwrap.socket;
            include        fastcgi_params;
            fastcgi_param  SCRIPT_FILENAME      /usr/lib/git-core/git-http-backend;
            fastcgi_param  GIT_HTTP_EXPORT_ALL  "";
            fastcgi_param  GIT_PROJECT_ROOT     /home/gaea/app/run/code/meta/$$1/source.git;
            fastcgi_param  PATH_INFO            $$2;
        }
        location  ~  /code/projects/([\w.-]+)\.git(.+) {
            fastcgi_pass   unix:/var/run/fcgiwrap.socket;
            include        fastcgi_params;
            fastcgi_param  SCRIPT_FILENAME      /usr/lib/git-core/git-http-backend;
            fastcgi_param  GIT_HTTP_EXPORT_ALL  "";
            fastcgi_param  GIT_PROJECT_ROOT     /home/gaea/app/run/code/meta/$$1/source.git;
            fastcgi_param  PATH_INFO            $$2;
        }
        location ~ /code/projects/([\w\.-]+)/releases/([a-z0-9\._]+\-.+) {
            alias  /home/gaea/app/run/code/meta/$$1/releases/$$2;
        }
        location  /  {
            proxy_set_header  X-Forwarded-Proto  $$scheme;
            proxy_set_header  Host  $$http_host;
            proxy_set_header  X-Forwarded-For  $$proxy_add_x_forwarded_for;
            proxy_redirect  off;
            proxy_pass  http://unix:$run_dir/gunicorn.sock;
        }

        # location  ~  ^/(.*)$$  {
        #     alias      /var/www/;
        #     try_files  $$1.html  =404;
        # }
        # error_page   403 404          /error/40x.html;
        # error_page   500 502 503 504  /error/50x.html;
        # access_log   /root/trunk/access.log  gaeafmt;
        # error_log    /root/trunk/error.log   info;
    }
}

rtmp {
    # Define where the HLS files will be written. Viewers will be fetching
    # these files from the browser, so the `location /hls` above points to
    # this folder as well
    hls on;
    hls_path $streaming_dir/hls;
    hls_fragment 5s;

    # Enable recording archived files of each stream
    # Does not need to be publicly accessible, will convert and publish later
    record all;
    record_path $streaming_dir/rec;
    record_suffix _%Y-%m-%d_%H-%M-%S.flv;
    record_lock on;

    # Define the two scripts that will run when recording starts and when
    # it finishes
    exec_publish $streaming_dir/publish.sh;
    exec_record_done $streaming_dir/finished.sh $$path $$basename.mp4;

    access_log /var/log/nginx/rtmp_access.log combined;
    access_log on;

    server {
        listen 1935;
        chunk_size 4096;

        application live {
            live on;
            record all;
            # push rtmp://localhost/twitch;
            # push rtmp://localhost/youtube;
        }
        application twitch {
            live on;
            record off;
            allow publish 127.0.0.1;
            deny publish all;
            push rtmp://lax.contribute.live-video.net/app/live_784014614_hwNuA2Gl5fz3SxETlrFcMmk0H2qynG;
        }
        application youtube {
            live on;
            record off;
            allow publish 127.0.0.1;
            deny publish all;
            push rtmp://a.rtmp.youtube.com/live2/4505-6umr-xemj-tm3g-959h;
        }
    }
}

# leave this here for cat'ing over SSH...
