[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bigtree"
description = "Tree Implementation for Python, integrated with Python list, dictionary, and pandas DataFrame."
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = [
  "tree",
  "bigtree",
]
authors = [
  { name = "Kay Jan", email = "kayjanw@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pandas",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://bigtree.readthedocs.io"
Issues = "https://github.com/kayjan/bigtree/issues"
Source = "https://github.com/kayjan/bigtree"

[project.optional-dependencies]
image = [
  "pydot",
  "Pillow",
]

[tool.hatch.version]
path = "bigtree/__init__.py"

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-cov",
  "black",
  "mypy",
  "pydot",
  "Pillow",
]
[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=bigtree --cov=tests {args}"
no-cov = "cov --no-cov {args}"
lint = "black -l 88 ."
sort = "isort --profile black ."
mypy-type = "mypy bigtree --ignore-missing-imports --install-types"

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs"
]
[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict"
serve = "mkdocs serve --dev-addr localhost:8000"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "bigtree/__init__.py",
  "*/tests*",
  "*/workflows*",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"

[tool.mypy]
strict = true
