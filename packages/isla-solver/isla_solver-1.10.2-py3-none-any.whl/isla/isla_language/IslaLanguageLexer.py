# Generated from IslaLanguage.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,44,596,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,
        1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,
        1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
        1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,
        1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,
        1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
        1,20,3,20,193,8,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,3,21,482,8,21,1,22,1,22,3,22,486,8,22,1,
        22,4,22,489,8,22,11,22,12,22,490,1,23,1,23,1,23,1,23,1,23,1,23,1,
        23,1,23,1,23,1,23,1,23,1,23,3,23,505,8,23,1,24,1,24,1,24,1,24,1,
        25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,28,1,
        28,1,28,5,28,526,8,28,10,28,12,28,529,9,28,1,28,1,28,1,29,1,29,1,
        29,5,29,536,8,29,10,29,12,29,539,9,29,1,30,4,30,542,8,30,11,30,12,
        30,543,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,35,1,
        35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,
        41,1,41,1,42,1,42,1,43,4,43,575,8,43,11,43,12,43,576,1,43,1,43,1,
        44,1,44,5,44,583,8,44,10,44,12,44,586,9,44,1,44,1,44,1,44,1,44,1,
        45,3,45,593,8,45,1,46,1,46,2,527,584,0,47,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,0,49,24,51,25,53,26,55,27,
        57,28,59,29,61,30,63,31,65,32,67,33,69,34,71,35,73,36,75,37,77,38,
        79,39,81,40,83,41,85,42,87,43,89,44,91,0,93,0,1,0,3,6,0,34,34,92,
        92,98,98,110,110,114,114,116,116,3,0,9,10,13,13,32,32,4,0,45,46,
        65,90,94,95,97,122,635,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,
        0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
        0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
        0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
        0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
        0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,
        0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,
        0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,
        0,0,0,1,95,1,0,0,0,3,101,1,0,0,0,5,103,1,0,0,0,7,105,1,0,0,0,9,112,
        1,0,0,0,11,115,1,0,0,0,13,122,1,0,0,0,15,124,1,0,0,0,17,128,1,0,
        0,0,19,132,1,0,0,0,21,134,1,0,0,0,23,136,1,0,0,0,25,138,1,0,0,0,
        27,143,1,0,0,0,29,149,1,0,0,0,31,153,1,0,0,0,33,156,1,0,0,0,35,160,
        1,0,0,0,37,164,1,0,0,0,39,167,1,0,0,0,41,192,1,0,0,0,43,481,1,0,
        0,0,45,485,1,0,0,0,47,504,1,0,0,0,49,506,1,0,0,0,51,510,1,0,0,0,
        53,514,1,0,0,0,55,518,1,0,0,0,57,522,1,0,0,0,59,532,1,0,0,0,61,541,
        1,0,0,0,63,545,1,0,0,0,65,548,1,0,0,0,67,550,1,0,0,0,69,553,1,0,
        0,0,71,555,1,0,0,0,73,557,1,0,0,0,75,559,1,0,0,0,77,561,1,0,0,0,
        79,563,1,0,0,0,81,566,1,0,0,0,83,569,1,0,0,0,85,571,1,0,0,0,87,574,
        1,0,0,0,89,580,1,0,0,0,91,592,1,0,0,0,93,594,1,0,0,0,95,96,5,99,
        0,0,96,97,5,111,0,0,97,98,5,110,0,0,98,99,5,115,0,0,99,100,5,116,
        0,0,100,2,1,0,0,0,101,102,5,58,0,0,102,4,1,0,0,0,103,104,5,59,0,
        0,104,6,1,0,0,0,105,106,5,102,0,0,106,107,5,111,0,0,107,108,5,114,
        0,0,108,109,5,97,0,0,109,110,5,108,0,0,110,111,5,108,0,0,111,8,1,
        0,0,0,112,113,5,105,0,0,113,114,5,110,0,0,114,10,1,0,0,0,115,116,
        5,101,0,0,116,117,5,120,0,0,117,118,5,105,0,0,118,119,5,115,0,0,
        119,120,5,116,0,0,120,121,5,115,0,0,121,12,1,0,0,0,122,123,5,61,
        0,0,123,14,1,0,0,0,124,125,5,105,0,0,125,126,5,110,0,0,126,127,5,
        116,0,0,127,16,1,0,0,0,128,129,5,105,0,0,129,130,5,102,0,0,130,131,
        5,102,0,0,131,18,1,0,0,0,132,133,5,40,0,0,133,20,1,0,0,0,134,135,
        5,44,0,0,135,22,1,0,0,0,136,137,5,41,0,0,137,24,1,0,0,0,138,139,
        5,116,0,0,139,140,5,114,0,0,140,141,5,117,0,0,141,142,5,101,0,0,
        142,26,1,0,0,0,143,144,5,102,0,0,144,145,5,97,0,0,145,146,5,108,
        0,0,146,147,5,115,0,0,147,148,5,101,0,0,148,28,1,0,0,0,149,150,5,
        97,0,0,150,151,5,110,0,0,151,152,5,100,0,0,152,30,1,0,0,0,153,154,
        5,111,0,0,154,155,5,114,0,0,155,32,1,0,0,0,156,157,5,110,0,0,157,
        158,5,111,0,0,158,159,5,116,0,0,159,34,1,0,0,0,160,161,5,120,0,0,
        161,162,5,111,0,0,162,163,5,114,0,0,163,36,1,0,0,0,164,165,5,61,
        0,0,165,166,5,62,0,0,166,38,1,0,0,0,167,168,5,105,0,0,168,169,5,
        109,0,0,169,170,5,112,0,0,170,171,5,108,0,0,171,172,5,105,0,0,172,
        173,5,101,0,0,173,174,5,115,0,0,174,40,1,0,0,0,175,176,5,114,0,0,
        176,177,5,101,0,0,177,178,5,46,0,0,178,179,5,43,0,0,179,193,5,43,
        0,0,180,181,5,115,0,0,181,182,5,116,0,0,182,183,5,114,0,0,183,184,
        5,46,0,0,184,185,5,43,0,0,185,193,5,43,0,0,186,187,5,115,0,0,187,
        188,5,116,0,0,188,189,5,114,0,0,189,190,5,46,0,0,190,191,5,60,0,
        0,191,193,5,61,0,0,192,175,1,0,0,0,192,180,1,0,0,0,192,186,1,0,0,
        0,193,42,1,0,0,0,194,482,3,55,27,0,195,196,5,114,0,0,196,197,5,101,
        0,0,197,198,5,46,0,0,198,482,5,43,0,0,199,200,5,114,0,0,200,201,
        5,101,0,0,201,202,5,46,0,0,202,482,5,42,0,0,203,204,5,115,0,0,204,
        205,5,116,0,0,205,206,5,114,0,0,206,207,5,46,0,0,207,208,5,108,0,
        0,208,209,5,101,0,0,209,482,5,110,0,0,210,211,5,115,0,0,211,212,
        5,116,0,0,212,213,5,114,0,0,213,214,5,46,0,0,214,215,5,105,0,0,215,
        216,5,110,0,0,216,217,5,95,0,0,217,218,5,114,0,0,218,482,5,101,0,
        0,219,220,5,115,0,0,220,221,5,116,0,0,221,222,5,114,0,0,222,223,
        5,46,0,0,223,224,5,116,0,0,224,225,5,111,0,0,225,226,5,95,0,0,226,
        227,5,114,0,0,227,482,5,101,0,0,228,229,5,114,0,0,229,230,5,101,
        0,0,230,231,5,46,0,0,231,232,5,110,0,0,232,233,5,111,0,0,233,234,
        5,110,0,0,234,482,5,101,0,0,235,236,5,114,0,0,236,237,5,101,0,0,
        237,238,5,46,0,0,238,239,5,97,0,0,239,240,5,108,0,0,240,482,5,108,
        0,0,241,242,5,114,0,0,242,243,5,101,0,0,243,244,5,46,0,0,244,245,
        5,97,0,0,245,246,5,108,0,0,246,247,5,108,0,0,247,248,5,99,0,0,248,
        249,5,104,0,0,249,250,5,97,0,0,250,482,5,114,0,0,251,252,5,115,0,
        0,252,253,5,116,0,0,253,254,5,114,0,0,254,255,5,46,0,0,255,256,5,
        97,0,0,256,482,5,116,0,0,257,258,5,115,0,0,258,259,5,116,0,0,259,
        260,5,114,0,0,260,261,5,46,0,0,261,262,5,115,0,0,262,263,5,117,0,
        0,263,264,5,98,0,0,264,265,5,115,0,0,265,266,5,116,0,0,266,482,5,
        114,0,0,267,268,5,115,0,0,268,269,5,116,0,0,269,270,5,114,0,0,270,
        271,5,46,0,0,271,272,5,112,0,0,272,273,5,114,0,0,273,274,5,101,0,
        0,274,275,5,102,0,0,275,276,5,105,0,0,276,277,5,120,0,0,277,278,
        5,111,0,0,278,482,5,102,0,0,279,280,5,115,0,0,280,281,5,116,0,0,
        281,282,5,114,0,0,282,283,5,46,0,0,283,284,5,115,0,0,284,285,5,117,
        0,0,285,286,5,102,0,0,286,287,5,102,0,0,287,288,5,105,0,0,288,289,
        5,120,0,0,289,290,5,111,0,0,290,482,5,102,0,0,291,292,5,115,0,0,
        292,293,5,116,0,0,293,294,5,114,0,0,294,295,5,46,0,0,295,296,5,99,
        0,0,296,297,5,111,0,0,297,298,5,110,0,0,298,299,5,116,0,0,299,300,
        5,97,0,0,300,301,5,105,0,0,301,302,5,110,0,0,302,482,5,115,0,0,303,
        304,5,115,0,0,304,305,5,116,0,0,305,306,5,114,0,0,306,307,5,46,0,
        0,307,308,5,105,0,0,308,309,5,110,0,0,309,310,5,100,0,0,310,311,
        5,101,0,0,311,312,5,120,0,0,312,313,5,111,0,0,313,482,5,102,0,0,
        314,315,5,115,0,0,315,316,5,116,0,0,316,317,5,114,0,0,317,318,5,
        46,0,0,318,319,5,114,0,0,319,320,5,101,0,0,320,321,5,112,0,0,321,
        322,5,108,0,0,322,323,5,97,0,0,323,324,5,99,0,0,324,482,5,101,0,
        0,325,326,5,115,0,0,326,327,5,116,0,0,327,328,5,114,0,0,328,329,
        5,46,0,0,329,330,5,114,0,0,330,331,5,101,0,0,331,332,5,112,0,0,332,
        333,5,108,0,0,333,334,5,97,0,0,334,335,5,99,0,0,335,336,5,101,0,
        0,336,337,5,95,0,0,337,338,5,97,0,0,338,339,5,108,0,0,339,482,5,
        108,0,0,340,341,5,115,0,0,341,342,5,116,0,0,342,343,5,114,0,0,343,
        344,5,46,0,0,344,345,5,114,0,0,345,346,5,101,0,0,346,347,5,112,0,
        0,347,348,5,108,0,0,348,349,5,97,0,0,349,350,5,99,0,0,350,351,5,
        101,0,0,351,352,5,95,0,0,352,353,5,114,0,0,353,482,5,101,0,0,354,
        355,5,115,0,0,355,356,5,116,0,0,356,357,5,114,0,0,357,358,5,46,0,
        0,358,359,5,114,0,0,359,360,5,101,0,0,360,361,5,112,0,0,361,362,
        5,108,0,0,362,363,5,97,0,0,363,364,5,99,0,0,364,365,5,101,0,0,365,
        366,5,95,0,0,366,367,5,114,0,0,367,368,5,101,0,0,368,369,5,95,0,
        0,369,370,5,97,0,0,370,371,5,108,0,0,371,482,5,108,0,0,372,373,5,
        114,0,0,373,374,5,101,0,0,374,375,5,46,0,0,375,376,5,117,0,0,376,
        377,5,110,0,0,377,378,5,105,0,0,378,379,5,111,0,0,379,482,5,110,
        0,0,380,381,5,114,0,0,381,382,5,101,0,0,382,383,5,46,0,0,383,384,
        5,105,0,0,384,385,5,110,0,0,385,386,5,116,0,0,386,387,5,101,0,0,
        387,482,5,114,0,0,388,389,5,114,0,0,389,390,5,101,0,0,390,391,5,
        46,0,0,391,392,5,99,0,0,392,393,5,111,0,0,393,394,5,109,0,0,394,
        482,5,112,0,0,395,396,5,114,0,0,396,397,5,101,0,0,397,398,5,46,0,
        0,398,399,5,100,0,0,399,400,5,105,0,0,400,401,5,102,0,0,401,482,
        5,102,0,0,402,403,5,114,0,0,403,404,5,101,0,0,404,405,5,46,0,0,405,
        406,5,111,0,0,406,407,5,112,0,0,407,482,5,116,0,0,408,409,5,114,
        0,0,409,410,5,101,0,0,410,411,5,46,0,0,411,412,5,114,0,0,412,413,
        5,97,0,0,413,414,5,110,0,0,414,415,5,103,0,0,415,482,5,101,0,0,416,
        417,5,114,0,0,417,418,5,101,0,0,418,419,5,46,0,0,419,420,5,108,0,
        0,420,421,5,111,0,0,421,422,5,111,0,0,422,482,5,112,0,0,423,424,
        5,115,0,0,424,425,5,116,0,0,425,426,5,114,0,0,426,427,5,46,0,0,427,
        428,5,105,0,0,428,429,5,115,0,0,429,430,5,95,0,0,430,431,5,100,0,
        0,431,432,5,105,0,0,432,433,5,103,0,0,433,434,5,105,0,0,434,482,
        5,116,0,0,435,436,5,115,0,0,436,437,5,116,0,0,437,438,5,114,0,0,
        438,439,5,46,0,0,439,440,5,116,0,0,440,441,5,111,0,0,441,442,5,95,
        0,0,442,443,5,99,0,0,443,444,5,111,0,0,444,445,5,100,0,0,445,482,
        5,101,0,0,446,447,5,115,0,0,447,448,5,116,0,0,448,449,5,114,0,0,
        449,450,5,46,0,0,450,451,5,102,0,0,451,452,5,114,0,0,452,453,5,111,
        0,0,453,454,5,109,0,0,454,455,5,95,0,0,455,456,5,99,0,0,456,457,
        5,111,0,0,457,458,5,100,0,0,458,482,5,101,0,0,459,460,5,115,0,0,
        460,461,5,116,0,0,461,462,5,114,0,0,462,463,5,46,0,0,463,464,5,116,
        0,0,464,465,5,111,0,0,465,466,5,46,0,0,466,467,5,105,0,0,467,468,
        5,110,0,0,468,482,5,116,0,0,469,470,5,115,0,0,470,471,5,116,0,0,
        471,472,5,114,0,0,472,473,5,46,0,0,473,474,5,102,0,0,474,475,5,114,
        0,0,475,476,5,111,0,0,476,477,5,109,0,0,477,478,5,95,0,0,478,479,
        5,105,0,0,479,480,5,110,0,0,480,482,5,116,0,0,481,194,1,0,0,0,481,
        195,1,0,0,0,481,199,1,0,0,0,481,203,1,0,0,0,481,210,1,0,0,0,481,
        219,1,0,0,0,481,228,1,0,0,0,481,235,1,0,0,0,481,241,1,0,0,0,481,
        251,1,0,0,0,481,257,1,0,0,0,481,267,1,0,0,0,481,279,1,0,0,0,481,
        291,1,0,0,0,481,303,1,0,0,0,481,314,1,0,0,0,481,325,1,0,0,0,481,
        340,1,0,0,0,481,354,1,0,0,0,481,372,1,0,0,0,481,380,1,0,0,0,481,
        388,1,0,0,0,481,395,1,0,0,0,481,402,1,0,0,0,481,408,1,0,0,0,481,
        416,1,0,0,0,481,423,1,0,0,0,481,435,1,0,0,0,481,446,1,0,0,0,481,
        459,1,0,0,0,481,469,1,0,0,0,482,44,1,0,0,0,483,486,3,59,29,0,484,
        486,3,49,24,0,485,483,1,0,0,0,485,484,1,0,0,0,486,488,1,0,0,0,487,
        489,3,47,23,0,488,487,1,0,0,0,489,490,1,0,0,0,490,488,1,0,0,0,490,
        491,1,0,0,0,491,46,1,0,0,0,492,493,3,65,32,0,493,494,3,49,24,0,494,
        505,1,0,0,0,495,496,3,65,32,0,496,497,3,49,24,0,497,498,3,69,34,
        0,498,499,3,61,30,0,499,500,3,71,35,0,500,505,1,0,0,0,501,502,3,
        67,33,0,502,503,3,49,24,0,503,505,1,0,0,0,504,492,1,0,0,0,504,495,
        1,0,0,0,504,501,1,0,0,0,505,48,1,0,0,0,506,507,3,85,42,0,507,508,
        3,59,29,0,508,509,3,83,41,0,509,50,1,0,0,0,510,511,5,100,0,0,511,
        512,5,105,0,0,512,513,5,118,0,0,513,52,1,0,0,0,514,515,5,109,0,0,
        515,516,5,111,0,0,516,517,5,100,0,0,517,54,1,0,0,0,518,519,5,97,
        0,0,519,520,5,98,0,0,520,521,5,115,0,0,521,56,1,0,0,0,522,527,5,
        34,0,0,523,526,3,63,31,0,524,526,9,0,0,0,525,523,1,0,0,0,525,524,
        1,0,0,0,526,529,1,0,0,0,527,528,1,0,0,0,527,525,1,0,0,0,528,530,
        1,0,0,0,529,527,1,0,0,0,530,531,5,34,0,0,531,58,1,0,0,0,532,537,
        3,91,45,0,533,536,3,91,45,0,534,536,3,93,46,0,535,533,1,0,0,0,535,
        534,1,0,0,0,536,539,1,0,0,0,537,535,1,0,0,0,537,538,1,0,0,0,538,
        60,1,0,0,0,539,537,1,0,0,0,540,542,3,93,46,0,541,540,1,0,0,0,542,
        543,1,0,0,0,543,541,1,0,0,0,543,544,1,0,0,0,544,62,1,0,0,0,545,546,
        5,92,0,0,546,547,7,0,0,0,547,64,1,0,0,0,548,549,5,46,0,0,549,66,
        1,0,0,0,550,551,5,46,0,0,551,552,5,46,0,0,552,68,1,0,0,0,553,554,
        5,91,0,0,554,70,1,0,0,0,555,556,5,93,0,0,556,72,1,0,0,0,557,558,
        5,42,0,0,558,74,1,0,0,0,559,560,5,43,0,0,560,76,1,0,0,0,561,562,
        5,45,0,0,562,78,1,0,0,0,563,564,5,62,0,0,564,565,5,61,0,0,565,80,
        1,0,0,0,566,567,5,60,0,0,567,568,5,61,0,0,568,82,1,0,0,0,569,570,
        5,62,0,0,570,84,1,0,0,0,571,572,5,60,0,0,572,86,1,0,0,0,573,575,
        7,1,0,0,574,573,1,0,0,0,575,576,1,0,0,0,576,574,1,0,0,0,576,577,
        1,0,0,0,577,578,1,0,0,0,578,579,6,43,0,0,579,88,1,0,0,0,580,584,
        5,35,0,0,581,583,9,0,0,0,582,581,1,0,0,0,583,586,1,0,0,0,584,585,
        1,0,0,0,584,582,1,0,0,0,585,587,1,0,0,0,586,584,1,0,0,0,587,588,
        5,10,0,0,588,589,1,0,0,0,589,590,6,44,0,0,590,90,1,0,0,0,591,593,
        7,2,0,0,592,591,1,0,0,0,593,92,1,0,0,0,594,595,2,48,57,0,595,94,
        1,0,0,0,14,0,192,481,485,490,504,525,527,535,537,543,576,584,592,
        1,6,0,0
    ]

class IslaLanguageLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    AND = 15
    OR = 16
    NOT = 17
    XOR = 18
    IMPLIES_SMT = 19
    IMPLIES_ISLA = 20
    SMT_INFIX_RE_STR = 21
    SMT_NONBINARY_OP = 22
    XPATHEXPR = 23
    VAR_TYPE = 24
    DIV = 25
    MOD = 26
    ABS = 27
    STRING = 28
    ID = 29
    INT = 30
    ESC = 31
    DOT = 32
    TWODOTS = 33
    BROP = 34
    BRCL = 35
    MUL = 36
    PLUS = 37
    MINUS = 38
    GEQ = 39
    LEQ = 40
    GT = 41
    LT = 42
    WS = 43
    LINE_COMMENT = 44

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'const'", "':'", "';'", "'forall'", "'in'", "'exists'", "'='", 
            "'int'", "'iff'", "'('", "','", "')'", "'true'", "'false'", 
            "'and'", "'or'", "'not'", "'xor'", "'=>'", "'implies'", "'div'", 
            "'mod'", "'abs'", "'.'", "'..'", "'['", "']'", "'*'", "'+'", 
            "'-'", "'>='", "'<='", "'>'", "'<'" ]

    symbolicNames = [ "<INVALID>",
            "AND", "OR", "NOT", "XOR", "IMPLIES_SMT", "IMPLIES_ISLA", "SMT_INFIX_RE_STR", 
            "SMT_NONBINARY_OP", "XPATHEXPR", "VAR_TYPE", "DIV", "MOD", "ABS", 
            "STRING", "ID", "INT", "ESC", "DOT", "TWODOTS", "BROP", "BRCL", 
            "MUL", "PLUS", "MINUS", "GEQ", "LEQ", "GT", "LT", "WS", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "AND", "OR", "NOT", "XOR", "IMPLIES_SMT", "IMPLIES_ISLA", 
                  "SMT_INFIX_RE_STR", "SMT_NONBINARY_OP", "XPATHEXPR", "XPATHSEGMENT", 
                  "VAR_TYPE", "DIV", "MOD", "ABS", "STRING", "ID", "INT", 
                  "ESC", "DOT", "TWODOTS", "BROP", "BRCL", "MUL", "PLUS", 
                  "MINUS", "GEQ", "LEQ", "GT", "LT", "WS", "LINE_COMMENT", 
                  "ID_LETTER", "DIGIT" ]

    grammarFileName = "IslaLanguage.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


