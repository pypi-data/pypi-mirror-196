Metadata-Version: 2.1
Name: rostspace
Version: 0.1.1
Summary: Protein Embedding Visualization Tool.
Home-page: https://github.com/Rostlab/RostSpace
License: AGPL-3.0-or-later
Keywords: Embeddings,Protein-Sequences,Visualisation
Author: Anton Spannagl
Maintainer: Rostlab
Maintainer-email: admin@rostlab.org
Requires-Python: >=3.9,<4.0
Classifier: License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: dash (>=2.6.1,<3.0.0)
Requires-Dist: dash-bio (>=1.0.2,<2.0.0)
Requires-Dist: dash-bootstrap-components (>=1.3.0,<2.0.0)
Requires-Dist: h5py (>=3.7.0,<4.0.0)
Requires-Dist: kaleido (==0.2.1)
Requires-Dist: llvmlite (>=0.39.1,<0.40.0)
Requires-Dist: matplotlib (>=3.5.3,<4.0.0)
Requires-Dist: numpy (>=1.23.3,<2.0.0)
Requires-Dist: pandas (>=1.4.4,<2.0.0)
Requires-Dist: plotly (>=5.10.0,<6.0.0)
Requires-Dist: pyfaidx (>=0.7.1,<0.8.0)
Requires-Dist: pyyaml (>=6.0,<7.0)
Requires-Dist: seaborn (>=0.12.0,<0.13.0)
Requires-Dist: umap-learn (>=0.5.3,<0.6.0)
Project-URL: Repository, https://github.com/Rostlab/RostSpace
Description-Content-Type: text/markdown

# RostSpace

RostSpace visualizes embeddings in 3D and 2D space and colors them by groups, provided throug a CSV file. Dimensionality reduction can be performed with UMAP, PCA or t-SNE. Additional features for biologists are implemented, to display molecule structures by providing PDB files.

## Installation
RostSpace can be installed with `pip`:
```shell
# install it with pip
pip install rostspace
```

## Getting started
After installation, RostSpace can be run using the `rostspace` command.

The required arguments are:

    -o      Path to the output directory where generated files are stored
    --hdf   Path to HDF5-file containing the per protein embeddings as key-value pair
    --csv   Path to the .csv-file containing the metadata

Optional arguments are:

    --pdb   Path to the directory that holds the .pdb files
    --fasta Path to the .fasta-file
    -v      Verbose -- prints internal process to the terminal

### Download example data
Example data can be downloaded from [here](https://nextcloud.in.tum.de/index.php/s/BPWWA9tiXTawjjW).

### Run RostSpace
RostSpace can be run by providing arguments on the command line, by giving it a YAML file, or a combination of both.

1. Giving arguments on the command line:
    ```shell
    rostspace -o data/KLK --hdf data/KLK/KLK_esm2.h5 --csv data/KLK/KLK.csv
    ```

2. Creating a YAML file:

    Pla2g2.yaml
    ```yaml
    o: data/Pla2g2
    hdf: data/Pla2g2/emb_esm2.h5
    csv: data/Pla2g2/Pla2g2.csv
    ```

    ```bash
    rostspace -conf conf/Pla2g2.yaml
    ```

3. Using a YAML file and giving extra arguments:
    ```bash
    rostspace -conf conf/Pla2g2.yaml --pdb data/Pla2g2/colabfold/pdb
    ```


For more information to the arguments run
```shell
rostspace --help
```

