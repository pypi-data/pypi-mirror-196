"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import avikom_types.avikom.assistance.issue_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class IssueQuery(google.protobuf.message.Message):
    """*
    Query an issue from the storage or the session manager. Fields can be combined and intersections will be returned.
    @author Alexander Neumann <alneuman@techfak.uni-bielefeld.de>
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """/ when set, the IssueList will only contain one element or an error is raised"""
    status: avikom_types.avikom.assistance.issue_pb2.IssueStatus.ValueType
    """/ when set, only issues with this status will be returned"""
    user_id: builtins.int
    """/ when set, only issues assigned to the user will be returned"""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        status: avikom_types.avikom.assistance.issue_pb2.IssueStatus.ValueType = ...,
        user_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "status", b"status", "user_id", b"user_id"]) -> None: ...

global___IssueQuery = IssueQuery
