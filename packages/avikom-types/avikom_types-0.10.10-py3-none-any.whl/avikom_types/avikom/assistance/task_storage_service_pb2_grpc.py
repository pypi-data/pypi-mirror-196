# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from avikom_types.avikom.assistance import scene_pb2 as avikom_dot_assistance_dot_scene__pb2
from avikom_types.avikom.assistance import task_pb2 as avikom_dot_assistance_dot_task__pb2
from avikom_types.avikom.assistance import task_step_pb2 as avikom_dot_assistance_dot_task__step__pb2
from avikom_types.avikom.assistance import task_storage_service_pb2 as avikom_dot_assistance_dot_task__storage__service__pb2
from avikom_types.avikom.generic import result_pb2 as avikom_dot_generic_dot_result__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class TaskStorageServiceStub(object):
    """*
    This services stores scene, task and task step definitions.
    It should not actively alter any of the provided data though.
    @author: Alexander Neumann <alneuman@techfak.uni-bielefeld.de>
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddScene = channel.unary_unary(
                '/avikom.assistance.TaskStorageService/AddScene',
                request_serializer=avikom_dot_assistance_dot_scene__pb2.Scene.SerializeToString,
                response_deserializer=avikom_dot_generic_dot_result__pb2.Result.FromString,
                )
        self.UpdateScene = channel.unary_unary(
                '/avikom.assistance.TaskStorageService/UpdateScene',
                request_serializer=avikom_dot_assistance_dot_scene__pb2.Scene.SerializeToString,
                response_deserializer=avikom_dot_generic_dot_result__pb2.Result.FromString,
                )
        self.GetScene = channel.unary_unary(
                '/avikom.assistance.TaskStorageService/GetScene',
                request_serializer=avikom_dot_assistance_dot_task__storage__service__pb2.TaskStorageQuery.SerializeToString,
                response_deserializer=avikom_dot_assistance_dot_scene__pb2.Scene.FromString,
                )
        self.GetAllScenes = channel.unary_unary(
                '/avikom.assistance.TaskStorageService/GetAllScenes',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=avikom_dot_assistance_dot_task__storage__service__pb2.SceneList.FromString,
                )
        self.AddTask = channel.unary_unary(
                '/avikom.assistance.TaskStorageService/AddTask',
                request_serializer=avikom_dot_assistance_dot_task__pb2.Task.SerializeToString,
                response_deserializer=avikom_dot_generic_dot_result__pb2.Result.FromString,
                )
        self.UpdateTask = channel.unary_unary(
                '/avikom.assistance.TaskStorageService/UpdateTask',
                request_serializer=avikom_dot_assistance_dot_task__pb2.Task.SerializeToString,
                response_deserializer=avikom_dot_generic_dot_result__pb2.Result.FromString,
                )
        self.GetTask = channel.unary_unary(
                '/avikom.assistance.TaskStorageService/GetTask',
                request_serializer=avikom_dot_assistance_dot_task__storage__service__pb2.TaskStorageQuery.SerializeToString,
                response_deserializer=avikom_dot_assistance_dot_task__pb2.Task.FromString,
                )
        self.GetAllTasks = channel.unary_unary(
                '/avikom.assistance.TaskStorageService/GetAllTasks',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=avikom_dot_assistance_dot_task__storage__service__pb2.TaskList.FromString,
                )
        self.AddTaskStep = channel.unary_unary(
                '/avikom.assistance.TaskStorageService/AddTaskStep',
                request_serializer=avikom_dot_assistance_dot_task__step__pb2.TaskStep.SerializeToString,
                response_deserializer=avikom_dot_generic_dot_result__pb2.Result.FromString,
                )
        self.UpdateTaskStep = channel.unary_unary(
                '/avikom.assistance.TaskStorageService/UpdateTaskStep',
                request_serializer=avikom_dot_assistance_dot_task__step__pb2.TaskStep.SerializeToString,
                response_deserializer=avikom_dot_generic_dot_result__pb2.Result.FromString,
                )
        self.GetTaskStep = channel.unary_unary(
                '/avikom.assistance.TaskStorageService/GetTaskStep',
                request_serializer=avikom_dot_assistance_dot_task__storage__service__pb2.TaskStorageQuery.SerializeToString,
                response_deserializer=avikom_dot_assistance_dot_task__step__pb2.TaskStep.FromString,
                )
        self.GetAllTaskSteps = channel.unary_unary(
                '/avikom.assistance.TaskStorageService/GetAllTaskSteps',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=avikom_dot_assistance_dot_task__storage__service__pb2.TaskStepList.FromString,
                )


class TaskStorageServiceServicer(object):
    """*
    This services stores scene, task and task step definitions.
    It should not actively alter any of the provided data though.
    @author: Alexander Neumann <alneuman@techfak.uni-bielefeld.de>
    """

    def AddScene(self, request, context):
        """/ adds a scene to the storage; raises an error if the scene already exists
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateScene(self, request, context):
        """/ updates an existing scene; will raise an error when the scene does not exist
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScene(self, request, context):
        """/ returns a scene with name equals to `name`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllScenes(self, request, context):
        """/ returns a list of all currently available scenes; fields such as task will be completely resolved
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTask(self, request, context):
        """/ adds a task to the storage; raises an error if the task already exists
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTask(self, request, context):
        """/ updates an existing task; will raise an error when the task does not exist
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTask(self, request, context):
        """/ returns a task with name equals to `name`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllTasks(self, request, context):
        """/ returns a list of all currently available tasks; fields such as steps will be completely resolved
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTaskStep(self, request, context):
        """/ adds a task step to the storage; raises an error if the step already exists
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTaskStep(self, request, context):
        """/ updates an existing task step; will raise an error when the step does not exist
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskStep(self, request, context):
        """/ returns a task step with name equals to `name`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllTaskSteps(self, request, context):
        """/ returns a list of task steps
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TaskStorageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddScene': grpc.unary_unary_rpc_method_handler(
                    servicer.AddScene,
                    request_deserializer=avikom_dot_assistance_dot_scene__pb2.Scene.FromString,
                    response_serializer=avikom_dot_generic_dot_result__pb2.Result.SerializeToString,
            ),
            'UpdateScene': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateScene,
                    request_deserializer=avikom_dot_assistance_dot_scene__pb2.Scene.FromString,
                    response_serializer=avikom_dot_generic_dot_result__pb2.Result.SerializeToString,
            ),
            'GetScene': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScene,
                    request_deserializer=avikom_dot_assistance_dot_task__storage__service__pb2.TaskStorageQuery.FromString,
                    response_serializer=avikom_dot_assistance_dot_scene__pb2.Scene.SerializeToString,
            ),
            'GetAllScenes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllScenes,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=avikom_dot_assistance_dot_task__storage__service__pb2.SceneList.SerializeToString,
            ),
            'AddTask': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTask,
                    request_deserializer=avikom_dot_assistance_dot_task__pb2.Task.FromString,
                    response_serializer=avikom_dot_generic_dot_result__pb2.Result.SerializeToString,
            ),
            'UpdateTask': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTask,
                    request_deserializer=avikom_dot_assistance_dot_task__pb2.Task.FromString,
                    response_serializer=avikom_dot_generic_dot_result__pb2.Result.SerializeToString,
            ),
            'GetTask': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTask,
                    request_deserializer=avikom_dot_assistance_dot_task__storage__service__pb2.TaskStorageQuery.FromString,
                    response_serializer=avikom_dot_assistance_dot_task__pb2.Task.SerializeToString,
            ),
            'GetAllTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllTasks,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=avikom_dot_assistance_dot_task__storage__service__pb2.TaskList.SerializeToString,
            ),
            'AddTaskStep': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTaskStep,
                    request_deserializer=avikom_dot_assistance_dot_task__step__pb2.TaskStep.FromString,
                    response_serializer=avikom_dot_generic_dot_result__pb2.Result.SerializeToString,
            ),
            'UpdateTaskStep': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTaskStep,
                    request_deserializer=avikom_dot_assistance_dot_task__step__pb2.TaskStep.FromString,
                    response_serializer=avikom_dot_generic_dot_result__pb2.Result.SerializeToString,
            ),
            'GetTaskStep': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskStep,
                    request_deserializer=avikom_dot_assistance_dot_task__storage__service__pb2.TaskStorageQuery.FromString,
                    response_serializer=avikom_dot_assistance_dot_task__step__pb2.TaskStep.SerializeToString,
            ),
            'GetAllTaskSteps': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllTaskSteps,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=avikom_dot_assistance_dot_task__storage__service__pb2.TaskStepList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'avikom.assistance.TaskStorageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TaskStorageService(object):
    """*
    This services stores scene, task and task step definitions.
    It should not actively alter any of the provided data though.
    @author: Alexander Neumann <alneuman@techfak.uni-bielefeld.de>
    """

    @staticmethod
    def AddScene(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avikom.assistance.TaskStorageService/AddScene',
            avikom_dot_assistance_dot_scene__pb2.Scene.SerializeToString,
            avikom_dot_generic_dot_result__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateScene(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avikom.assistance.TaskStorageService/UpdateScene',
            avikom_dot_assistance_dot_scene__pb2.Scene.SerializeToString,
            avikom_dot_generic_dot_result__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScene(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avikom.assistance.TaskStorageService/GetScene',
            avikom_dot_assistance_dot_task__storage__service__pb2.TaskStorageQuery.SerializeToString,
            avikom_dot_assistance_dot_scene__pb2.Scene.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllScenes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avikom.assistance.TaskStorageService/GetAllScenes',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            avikom_dot_assistance_dot_task__storage__service__pb2.SceneList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avikom.assistance.TaskStorageService/AddTask',
            avikom_dot_assistance_dot_task__pb2.Task.SerializeToString,
            avikom_dot_generic_dot_result__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avikom.assistance.TaskStorageService/UpdateTask',
            avikom_dot_assistance_dot_task__pb2.Task.SerializeToString,
            avikom_dot_generic_dot_result__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avikom.assistance.TaskStorageService/GetTask',
            avikom_dot_assistance_dot_task__storage__service__pb2.TaskStorageQuery.SerializeToString,
            avikom_dot_assistance_dot_task__pb2.Task.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avikom.assistance.TaskStorageService/GetAllTasks',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            avikom_dot_assistance_dot_task__storage__service__pb2.TaskList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddTaskStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avikom.assistance.TaskStorageService/AddTaskStep',
            avikom_dot_assistance_dot_task__step__pb2.TaskStep.SerializeToString,
            avikom_dot_generic_dot_result__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTaskStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avikom.assistance.TaskStorageService/UpdateTaskStep',
            avikom_dot_assistance_dot_task__step__pb2.TaskStep.SerializeToString,
            avikom_dot_generic_dot_result__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaskStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avikom.assistance.TaskStorageService/GetTaskStep',
            avikom_dot_assistance_dot_task__storage__service__pb2.TaskStorageQuery.SerializeToString,
            avikom_dot_assistance_dot_task__step__pb2.TaskStep.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllTaskSteps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avikom.assistance.TaskStorageService/GetAllTaskSteps',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            avikom_dot_assistance_dot_task__storage__service__pb2.TaskStepList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
