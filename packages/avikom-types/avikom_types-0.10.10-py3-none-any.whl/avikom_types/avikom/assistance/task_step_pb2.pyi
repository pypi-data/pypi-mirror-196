"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import avikom_types.avikom.assistance.instruction_media_pb2
import avikom_types.avikom.assistance.instruction_text_pb2
import avikom_types.avikom.assistance.task_stereotype_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class TaskStep(google.protobuf.message.Message):
    """*
    This message describes a task step. A step describes an individual operation of a certain stereotype that 
    should be compatible with the 'Basic Action Concept' (BAC) of SDA-M.
    @author: Lars Schalkwijk <lars.schalkwijk@fh-bielefeld.de>
    @author: Alexander Neumann <alneuman@techfak.uni-bielefeld.de>
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    INSTRUCTIONS_FIELD_NUMBER: builtins.int
    MEDIA_FIELD_NUMBER: builtins.int
    name: builtins.str
    """/ globally unique step name"""
    @property
    def type(self) -> avikom_types.avikom.assistance.task_stereotype_pb2.TaskStereotype:
        """/ defines the kind of action to be conducted; defines the possible actions a user may conduct to process this step"""
    @property
    def instructions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[avikom_types.avikom.assistance.instruction_text_pb2.InstructionText]:
        """/ textual instructions for this task step"""
    @property
    def media(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[avikom_types.avikom.assistance.instruction_media_pb2.InstructionMedia]:
        """/ media content for this task step, includes prefabs and such a like"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        type: avikom_types.avikom.assistance.task_stereotype_pb2.TaskStereotype | None = ...,
        instructions: collections.abc.Iterable[avikom_types.avikom.assistance.instruction_text_pb2.InstructionText] | None = ...,
        media: collections.abc.Iterable[avikom_types.avikom.assistance.instruction_media_pb2.InstructionMedia] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["instructions", b"instructions", "media", b"media", "name", b"name", "type", b"type"]) -> None: ...

global___TaskStep = TaskStep
