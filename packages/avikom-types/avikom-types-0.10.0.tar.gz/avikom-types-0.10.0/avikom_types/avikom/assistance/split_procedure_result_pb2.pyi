"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import avikom.assistance.task_pb2
import avikom.generic.user_pb2
import avikom.math.float_matrix_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class SplitProcedureResult(google.protobuf.message.Message):
    """
    Results of a previously conducted split procedure, analyzed by CASPA (https://doi.org/10.3389/fpsyg.2020.597913).
    @author Alexander Neumann <alneuman@techfak.uni-bielefeld.de>
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_FIELD_NUMBER: builtins.int
    TASK_FIELD_NUMBER: builtins.int
    MATRIX_FIELD_NUMBER: builtins.int
    @property
    def user(self) -> avikom.generic.user_pb2.User:
        """/ investigated user"""
    @property
    def task(self) -> avikom.assistance.task_pb2.Task:
        """/ investigated task"""
    @property
    def matrix(self) -> avikom.math.float_matrix_pb2.FloatMatrix:
        """/ CASPA probability matrix"""
    def __init__(
        self,
        *,
        user: avikom.generic.user_pb2.User | None = ...,
        task: avikom.assistance.task_pb2.Task | None = ...,
        matrix: avikom.math.float_matrix_pb2.FloatMatrix | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["matrix", b"matrix", "task", b"task", "user", b"user"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["matrix", b"matrix", "task", b"task", "user", b"user"]) -> None: ...

global___SplitProcedureResult = SplitProcedureResult
