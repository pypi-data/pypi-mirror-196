"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import avikom.assistance.choice_item_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ChoicesConfig(google.protobuf.message.Message):
    """*
    This message describes a choice a peer/user can make.
    It contains state information for each individual choice that can be made
    to enable multiple selections in a looped interaction.
    @author: Alexander Neumann <alneuman@techfak.uni-bielefeld.de>
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ITEMS_FIELD_NUMBER: builtins.int
    DEFAULT_VALUE_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[avikom.assistance.choice_item_pb2.ChoiceItem]:
        """a list of choices to choose from"""
    default_value: builtins.str
    """If set, this value may be returned when no choice has been made. If not, a valid item value must be returned."""
    def __init__(
        self,
        *,
        items: collections.abc.Iterable[avikom.assistance.choice_item_pb2.ChoiceItem] | None = ...,
        default_value: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["default_value", b"default_value", "items", b"items"]) -> None: ...

global___ChoicesConfig = ChoicesConfig
