"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class AnswerQuestionQuery(google.protobuf.message.Message):
    """*
    This message is used to ask a question to be answered on the basis of the context.
    @author: Lars Schalkwijk <lars.schalkwijk@fh-bielefeld.de>
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONTEXT_FIELD_NUMBER: builtins.int
    QUESTION_FIELD_NUMBER: builtins.int
    context: builtins.str
    """/ this text string should contain the answer to the question"""
    question: builtins.str
    """/ the question you would like to find an answer to in the context"""
    def __init__(
        self,
        *,
        context: builtins.str = ...,
        question: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["context", b"context", "question", b"question"]) -> None: ...

global___AnswerQuestionQuery = AnswerQuestionQuery

@typing_extensions.final
class AnswerQuestionResponse(google.protobuf.message.Message):
    """*
    This message is includes the response to the posed question and where in the context the answer was found.
    @author: Lars Schalkwijk <lars.schalkwijk@fh-bielefeld.de>
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCORE_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    ANSWER_FIELD_NUMBER: builtins.int
    score: builtins.float
    """/ confidence between 0-1 that the correct answer was found"""
    start: builtins.int
    """/ start position of answer in charactercount"""
    end: builtins.int
    """/ end position of answer in charactercount"""
    answer: builtins.str
    """/ the answer to the posed question is a text excerpt from the context"""
    def __init__(
        self,
        *,
        score: builtins.float = ...,
        start: builtins.int = ...,
        end: builtins.int = ...,
        answer: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer", b"answer", "end", b"end", "score", b"score", "start", b"start"]) -> None: ...

global___AnswerQuestionResponse = AnswerQuestionResponse
