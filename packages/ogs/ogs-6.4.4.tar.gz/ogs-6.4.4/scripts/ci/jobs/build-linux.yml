build linux:
  image: $CONTAINER_GCC_IMAGE
  extends:
    - .template-build-linux
    - .test-artifacts
  tags: [docker]
  needs: [meta, ci_images]
  rules:
    - if: "$USE_PYTHON =~ /ON$/"
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: $CI_COMMIT_BRANCH =~ /^v[0-9]\.[0-9]\.[0-9]/
    - when: manual
      allow_failure: true
  timeout: 3h
  variables:
    CMAKE_PRESET: release-all
    CMAKE_ARGS: >-
      -DOGS_$USE_PYTHON
  parallel:
    matrix:
      - USE_PYTHON: ["USE_PYTHON=ON", "USE_PYTHON=OFF"]

linux ctest large:
  image: $CONTAINER_GCC_IMAGE
  extends:
    - .template-build-linux
  tags: [docker, envinf2]
  needs: [meta, ci_images]
  rules:
    - when: manual
      allow_failure: true
  timeout: 3h
  variables:
    BUILD_TESTS: "false"
    BUILD_CTEST_LARGE: "true"
    CMAKE_PRESET: release-all
    CMAKE_ARGS: >-
      -DOGS_USE_PYTHON=ON

build linux (no unity):
  image: $CONTAINER_GCC_IMAGE
  extends:
    - .template-build-linux
  tags: [docker]
  needs: [meta, ci_images]
  timeout: 3h
  variables:
    BUILD_TESTS: "false"
    BUILD_CTEST: "false"
    CHECK_WARNINGS: "true"
    CMAKE_PRESET: ci-no-unity

build linux (no deps, no procs):
  image: $CONTAINER_GCC_IMAGE
  extends: .template-build-linux
  tags: [docker]
  needs: [meta, ci_images]
  timeout: 2h
  variables:
    BUILD_TESTS: "false"
    BUILD_CTEST: "false"
    CMAKE_ARGS: -DOGS_BUILD_PROCESSES=SteadyStateDiffusion
    CMAKE_PRESET: ci-simplest

build linux debug with sanitizers:
  extends:
    - .template-build-linux
    - .test-artifacts
    - .rules-master-manual
  tags: [envinf23, shell]
  needs: [meta]
  variables:
    BUILD_PACKAGE: "false"
    CMAKE_PRESET: debug
    CMAKE_ARGS: >-
      -DCMAKE_C_COMPILER=/usr/bin/clang
      -DCMAKE_CXX_COMPILER=/usr/bin/clang++
      -DBUILD_SHARED_LIBS=ON
      -DOGS_COMPILE_FLAGS=-O3;-fno-var-tracking
      -DOGS_EIGEN_DYNAMIC_SHAPE_MATRICES=OFF
      -DOGS_ADDRESS_SANITIZER=ON
      -DOGS_UNDEFINED_BEHAVIOR_SANITIZER=ON
      -DOGS_CTEST_MAX_RUNTIME=5
      -DOGS_BUILD_PYTHON_MODULE=OFF
      -DOGS_USE_PIP=ON
    UBSAN_OPTIONS: "print_stacktrace=1"
    LSAN_OPTIONS: "suppressions=$CI_PROJECT_DIR/scripts/test/leak_sanitizer.suppressions"
    CTEST_TIMEOUT: 120

build linux ubuntu perf:
  extends:
    - .template-build-linux
    - .test-artifacts
    - .rules-master-manual
  tags: [shell, ubuntu]
  needs: [meta]
  variables:
    CMAKE_PRESET: release-all
    CTEST_PARALLEL_LEVEL: 1 # Run ctests serially
    CTEST_TIMEOUT: 480
