[tool.poetry]
name = "pydantic-dict-encoders"
version = "0.1"
description = "Pydantic mixins for support custom encoding dict"
authors = ["Ivan Galin <i.galin@devartsteam.ru>"]
license = "MIT"
readme = "README.md"
packages = [
    {include = "pydantic_dict"}
]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "~1"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-xdist = "*"
pytest-asyncio = "*"
pytest-cov = "*"
coverage = { version="*", extras = ["toml"]}
flake8 = "*"
black = "*"
isort = "*"
mypy = "*"
devtools = "*"
ruff = "^0.0.254"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Configure utils

[tool.ruff]
line-length = 79
extend-select = ['Q', 'RUF100', 'C90']
mccabe = { max-complexity = 10 }
exclude = [
    ".venv",
    ".git,",
    "__pycache__,",
    "tests/*,",
]

[tool.ruff.flake8-quotes]
docstring-quotes = 'double'
inline-quotes = 'double'
multiline-quotes = 'double'

[tool.ruff.per-file-ignores]
'*/**/__init__.py' = ['F401', 'F405', 'F403']
'tests/*' = ['E731']

[tool.isort]
py_version=39
line_length = 79
known_first_party = 'pydantic_dict'
profile='black'
multi_line_output = 3

[tool.black]
color = true
line-length = 79
target-version = ['py310']
skip-string-normalization = true

[tool.coverage.report]
fail_under=75
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload'
]

[tool.pytest.ini_options]
junit_family = "xunit1"
norecursedirs = [
    "*.egg",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__",
    ".venv",
]
testpaths = "tests/*"
python_files = "*.py"
python_classes = "*TestCase"
python_functions = "test_*"
asyncio_mode = "auto"
xfail_strict = true
filterwarnings = [
    'error',
    'ignore:path is deprecated.*:DeprecationWarning:',
]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--doctest-modules",
    "--color=yes",
    "--cov=pydantic_dict",
    "--cov-branch",
]

[tool.mypy]
# temporarily ignore some files
python_version = '3.10'
show_error_codes = true
follow_imports = 'silent'
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
disallow_untyped_defs = true
implicit_optional = true

# Ignore tests typing
[[tool.mypy.overrides]]
module = [
    'tests.*',
]
ignore_errors = true

[tool.pyright]
include = ['pydantic']