from _typeshed import Incomplete

class BaseVisualizer:
    model: Incomplete
    collision_model: Incomplete
    visual_model: Incomplete
    data: Incomplete
    collision_data: Incomplete
    visual_data: Incomplete
    def __init__(self, model=..., collision_model: Incomplete | None = ..., visual_model: Incomplete | None = ..., copy_models: bool = ..., data: Incomplete | None = ..., collision_data: Incomplete | None = ..., visual_data: Incomplete | None = ...) -> None: ...
    def rebuildData(self) -> None: ...
    def getViewerNodeName(self, geometry_object, geometry_type) -> None: ...
    def initViewer(self, *args, **kwargs) -> None: ...
    def loadViewerModel(self, *args, **kwargs) -> None: ...
    def reload(self, new_geometry_object, geometry_type: Incomplete | None = ...) -> None: ...
    def clean(self) -> None: ...
    def display(self, q: Incomplete | None = ...) -> None: ...
    def displayCollisions(self, visibility) -> None: ...
    def displayVisuals(self, visibility) -> None: ...
    def captureImage(self) -> None: ...
    def sleep(self, dt) -> None: ...
    def play(self, q_trajectory, dt, capture: bool = ...): ...
