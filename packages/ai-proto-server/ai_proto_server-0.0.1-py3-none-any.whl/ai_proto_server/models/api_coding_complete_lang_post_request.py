# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ai_proto_server.models.base_model_ import Model
from ai_proto_server import util


class ApiCodingCompleteLangPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, before_content=None, after_content=None):  # noqa: E501
        """ApiCodingCompleteLangPostRequest - a model defined in OpenAPI

        :param before_content: The before_content of this ApiCodingCompleteLangPostRequest.  # noqa: E501
        :type before_content: str
        :param after_content: The after_content of this ApiCodingCompleteLangPostRequest.  # noqa: E501
        :type after_content: str
        """
        self.openapi_types = {
            'before_content': str,
            'after_content': str
        }

        self.attribute_map = {
            'before_content': 'beforeContent',
            'after_content': 'afterContent'
        }

        self._before_content = before_content
        self._after_content = after_content

    @classmethod
    def from_dict(cls, dikt) -> 'ApiCodingCompleteLangPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _api_coding_complete__lang__post_request of this ApiCodingCompleteLangPostRequest.  # noqa: E501
        :rtype: ApiCodingCompleteLangPostRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def before_content(self):
        """Gets the before_content of this ApiCodingCompleteLangPostRequest.

        编辑器光标前面的代码  # noqa: E501

        :return: The before_content of this ApiCodingCompleteLangPostRequest.
        :rtype: str
        """
        return self._before_content

    @before_content.setter
    def before_content(self, before_content):
        """Sets the before_content of this ApiCodingCompleteLangPostRequest.

        编辑器光标前面的代码  # noqa: E501

        :param before_content: The before_content of this ApiCodingCompleteLangPostRequest.
        :type before_content: str
        """
        if before_content is None:
            raise ValueError("Invalid value for `before_content`, must not be `None`")  # noqa: E501

        self._before_content = before_content

    @property
    def after_content(self):
        """Gets the after_content of this ApiCodingCompleteLangPostRequest.

        编辑器光标后面的代码  # noqa: E501

        :return: The after_content of this ApiCodingCompleteLangPostRequest.
        :rtype: str
        """
        return self._after_content

    @after_content.setter
    def after_content(self, after_content):
        """Sets the after_content of this ApiCodingCompleteLangPostRequest.

        编辑器光标后面的代码  # noqa: E501

        :param after_content: The after_content of this ApiCodingCompleteLangPostRequest.
        :type after_content: str
        """
        if after_content is None:
            raise ValueError("Invalid value for `after_content`, must not be `None`")  # noqa: E501

        self._after_content = after_content
