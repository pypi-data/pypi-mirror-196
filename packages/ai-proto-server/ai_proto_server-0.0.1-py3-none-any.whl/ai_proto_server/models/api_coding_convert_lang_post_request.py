# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ai_proto_server.models.base_model_ import Model
from ai_proto_server.models.lang import Lang
from ai_proto_server import util

from ai_proto_server.models.lang import Lang  # noqa: E501

class ApiCodingConvertLangPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content=None, dest_lang=None):  # noqa: E501
        """ApiCodingConvertLangPostRequest - a model defined in OpenAPI

        :param content: The content of this ApiCodingConvertLangPostRequest.  # noqa: E501
        :type content: str
        :param dest_lang: The dest_lang of this ApiCodingConvertLangPostRequest.  # noqa: E501
        :type dest_lang: Lang
        """
        self.openapi_types = {
            'content': str,
            'dest_lang': Lang
        }

        self.attribute_map = {
            'content': 'content',
            'dest_lang': 'destLang'
        }

        self._content = content
        self._dest_lang = dest_lang

    @classmethod
    def from_dict(cls, dikt) -> 'ApiCodingConvertLangPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _api_coding_convert__lang__post_request of this ApiCodingConvertLangPostRequest.  # noqa: E501
        :rtype: ApiCodingConvertLangPostRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this ApiCodingConvertLangPostRequest.

        代码内容  # noqa: E501

        :return: The content of this ApiCodingConvertLangPostRequest.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this ApiCodingConvertLangPostRequest.

        代码内容  # noqa: E501

        :param content: The content of this ApiCodingConvertLangPostRequest.
        :type content: str
        """
        if content is None:
            raise ValueError("Invalid value for `content`, must not be `None`")  # noqa: E501

        self._content = content

    @property
    def dest_lang(self):
        """Gets the dest_lang of this ApiCodingConvertLangPostRequest.


        :return: The dest_lang of this ApiCodingConvertLangPostRequest.
        :rtype: Lang
        """
        return self._dest_lang

    @dest_lang.setter
    def dest_lang(self, dest_lang):
        """Sets the dest_lang of this ApiCodingConvertLangPostRequest.


        :param dest_lang: The dest_lang of this ApiCodingConvertLangPostRequest.
        :type dest_lang: Lang
        """
        if dest_lang is None:
            raise ValueError("Invalid value for `dest_lang`, must not be `None`")  # noqa: E501

        self._dest_lang = dest_lang
