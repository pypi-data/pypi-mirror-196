"use strict";(self.webpackChunk_ninerealmlabs_jupyterlab_material_night_eighties=self.webpackChunk_ninerealmlabs_jupyterlab_material_night_eighties||[]).push([[549],{760:(e,o,n)=>{n.d(o,{Z:()=>s});var r=n(645),a=n.n(r),t=n(875),l=a()((function(e){return e[1]}));l.i(t.Z),l.push([e.id,"/* Set the default typography for monospace elements */\ntt,\ncode,\nkbd,\nsamp,\npre {\n  font-family: var(--jp-code-font-family);\n  font-size: var(--jp-code-font-size);\n  line-height: var(--jp-code-line-height);\n}\n",""]);const s=l},875:(e,o,n)=>{n.d(o,{Z:()=>t});var r=n(645),a=n.n(r)()((function(e){return e[1]}));a.push([e.id,"/* ----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|--------------------------------------------------------------------------- */\n\n/*\n * The following CSS variables define the main, public API for styling JupyterLab.\n * These variables should be used by all plugins wherever possible. In other\n * words, plugins should not define custom colors, sizes, etc unless absolutely\n * necessary. This enables users to change the visual theme of JupyterLab\n * by changing these variables.\n *\n * Many variables appear in an ordered sequence (0,1,2,3). These sequences\n * are designed to work well together, so for example, `--jp-border-color1` should\n * be used with `--jp-layout-color1`. The numbers have the following meanings:\n *\n * 0: super-primary, reserved for special emphasis\n * 1: primary, most important under normal situations\n * 2: secondary, next most important under normal situations\n * 3: tertiary, next most important under normal situations\n *\n * Throughout JupyterLab, we are mostly following principles from Google's\n * Material Design when selecting colors. We are not, however, following\n * all of MD as it is not optimized for dense, information rich UIs.\n */\n\n:root {\n  /* light to dark for light theme\n   * dark to light for dark theme;\n   * dark to light for light theme\n   * light to dark for dark theme */\n  --base16-red0: #e82732;\n  --base16-red1: #ec4c55;\n  --base16-red2: #f07178;\n  --base16-red-extra: #f4969b;\n  --base16-orange0: #f34f1f;\n  --base16-orange1: #f56e45;\n  --base16-orange2: #f78c6c;\n  --base16-orange-extra: #f9aa93;\n  --base16-yellow0: #ffae19;\n  --base16-yellow1: #ffbd42;\n  --base16-yellow2: #ffcb6b;\n  --base16-yellow-extra: #ffd994;\n  --base16-green0: #66da49;\n  --base16-green1: #82e16b;\n  --base16-green2: #9fe88d;\n  --base16-green-extra: #bcefaf;\n  --base16-teal0: #12ffc7;\n  --base16-teal1: #3bffd0;\n  --base16-teal2: #64ffda;\n  --base16-teal-extra: #8dffe4;\n  --base16-cyan0: #18f7ff;\n  --base16-cyan1: #41f9ff;\n  --base16-cyan2: #6afaff;\n  --base16-cyan-extra: #93fbff;\n  --base16-blue0: #3073ff;\n  --base16-blue1: #598eff;\n  --base16-blue2: #82aaff;\n  --base16-blue-extra: #abc6ff;\n  --base16-magenta0: #ff012c;\n  --base16-magenta1: #ff2a4e;\n  --base16-magenta2: #ff5370;\n  --base16-magenta-extra: #ff7c92;\n  --base16-purple0: #a44edd;\n  --base16-purple1: #b570e3;\n  --base16-purple2: #c792ea;\n  --base16-purple-extra: #d9b4f1;\n  --base16-foreground-light: #fff;\n  --base16-gray: #969696;\n  --base16-gray-dark: #6e6e6e;\n  --jp-layout-color0: #1c1c1c;\n  --jp-layout-color1: #303030;\n  --jp-layout-color2: #454545;\n  --jp-layout-color3: #595959;\n  --jp-layout-color4: #6e6e6e;\n  --jp-layout-color5: #828282;\n  --jp-layout-color6: #ababab;\n  --jp-inverse-layout-color0: #fff;\n  --jp-inverse-layout-color1: #d6d6d6;\n  --jp-inverse-layout-color2: #c2c2c2;\n  --jp-inverse-layout-color3: #adadad;\n  --jp-inverse-layout-color4: #999;\n  --jp-inverse-layout-color5: #707070;\n\n  /* Elevation\n   *\n   * We style box-shadows using Material Design's idea of elevation. These particular numbers are taken from here:\n   *\n   * https://github.com/material-components/material-components-web\n   * https://material-components-web.appspot.com/elevation.html\n   */\n\n  /* The dark theme shadows need a bit of work, but this will probably also require work on the core layout\n   * colors used in the theme as well. */\n  --jp-shadow-base-lightness: 32;\n  --jp-shadow-umbra-color: rgb(\n    var(--jp-shadow-base-lightness) var(--jp-shadow-base-lightness) var(--jp-shadow-base-lightness) /\n      20%\n  );\n  --jp-shadow-penumbra-color: rgb(\n    var(--jp-shadow-base-lightness) var(--jp-shadow-base-lightness) var(--jp-shadow-base-lightness) /\n      14%\n  );\n  --jp-shadow-ambient-color: rgb(\n    var(--jp-shadow-base-lightness) var(--jp-shadow-base-lightness) var(--jp-shadow-base-lightness) /\n      12%\n  );\n  --jp-elevation-z0: none;\n  --jp-elevation-z1: 0 2px 1px -1px var(--jp-shadow-umbra-color),\n    0 1px 1px 0 var(--jp-shadow-penumbra-color), 0 1px 3px 0 var(--jp-shadow-ambient-color);\n  --jp-elevation-z2: 0 3px 1px -2px var(--jp-shadow-umbra-color),\n    0 2px 2px 0 var(--jp-shadow-penumbra-color), 0 1px 5px 0 var(--jp-shadow-ambient-color);\n  --jp-elevation-z4: 0 2px 4px -1px var(--jp-shadow-umbra-color),\n    0 4px 5px 0 var(--jp-shadow-penumbra-color), 0 1px 10px 0 var(--jp-shadow-ambient-color);\n  --jp-elevation-z6: 0 3px 5px -1px var(--jp-shadow-umbra-color),\n    0 6px 10px 0 var(--jp-shadow-penumbra-color), 0 1px 18px 0 var(--jp-shadow-ambient-color);\n  --jp-elevation-z8: 0 5px 5px -3px var(--jp-shadow-umbra-color),\n    0 8px 10px 1px var(--jp-shadow-penumbra-color), 0 3px 14px 2px var(--jp-shadow-ambient-color);\n  --jp-elevation-z12: 0 7px 8px -4px var(--jp-shadow-umbra-color),\n    0 12px 17px 2px var(--jp-shadow-penumbra-color), 0 5px 22px 4px var(--jp-shadow-ambient-color);\n  --jp-elevation-z16: 0 8px 10px -5px var(--jp-shadow-umbra-color),\n    0 16px 24px 2px var(--jp-shadow-penumbra-color), 0 6px 30px 5px var(--jp-shadow-ambient-color);\n  --jp-elevation-z20: 0 10px 13px -6px var(--jp-shadow-umbra-color),\n    0 20px 31px 3px var(--jp-shadow-penumbra-color), 0 8px 38px 7px var(--jp-shadow-ambient-color);\n  --jp-elevation-z24: 0 11px 15px -7px var(--jp-shadow-umbra-color),\n    0 24px 38px 3px var(--jp-shadow-penumbra-color), 0 9px 46px 8px var(--jp-shadow-ambient-color);\n\n  /* Borders\n   *\n   * The following variables, specify the visual styling of borders in JupyterLab.\n   */\n  --jp-border-width: 1px;\n  --jp-border-color0: var(--jp-layout-color1);\n  --jp-border-color1: var(--jp-layout-color2);\n  --jp-border-color2: var(--jp-layout-color3);\n  --jp-border-color3: var(--jp-layout-color5);\n  --jp-border-radius: 2px;\n\n  /* UI Fonts\n   *\n   * The UI font CSS variables are used for the typography all of the JupyterLab\n   * user interface elements that are not directly user generated content.\n   *\n   * The font sizing here is done assuming that the body font size of --jp-ui-font-size1\n   * is applied to a parent element. When children elements, such as headings, are sized\n   * in em all things will be computed relative to that body size.\n   */\n  --jp-ui-font-scale-factor: 1.2;\n  --jp-ui-font-size0: 0.8333em;\n  --jp-ui-font-size1: 13px;\n\n  /* Base font size */\n  --jp-ui-font-size2: 1.2em;\n  --jp-ui-font-size3: 1.44em;\n  --jp-ui-font-family: -apple-system, blinkmacsystemfont, 'Segoe UI', helvetica, arial, sans-serif,\n    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n\n  /*\n   * Use these font colors against the corresponding main layout colors.\n   * In a light theme, these go from dark to light.\n   */\n\n  /* Darkening colors */\n  --jp-ui-font-color0: var(--jp-inverse-layout-color0);\n  --jp-ui-font-color1: var(--jp-inverse-layout-color1);\n  --jp-ui-font-color2: var(--jp-inverse-layout-color3);\n  --jp-ui-font-color3: var(--jp-inverse-layout-color5);\n\n  /*\n   * Use these against the brand/accent/warn/error colors.\n   * These will typically go from light to darker, in both a dark and light theme.\n   */\n  --jp-ui-inverse-font-color0: var(--base16-gray);\n  --jp-ui-inverse-font-color1: var(--base16-gray-dark);\n  --jp-ui-inverse-font-color2: var(--jp-layout-color6);\n  --jp-ui-inverse-font-color3: var(--jp-layout-color5);\n\n  /* Content Fonts\n   *\n   * Content font variables are used for typography of user generated content.\n   *\n   * The font sizing here is done assuming that the body font size of --jp-content-font-size1\n   * is applied to a parent element. When children elements, such as headings, are sized\n   * in em all things will be computed relative to that body size.\n   */\n  --jp-content-line-height: 1.6;\n  --jp-content-font-scale-factor: 1.2;\n  --jp-content-font-size0: 0.8333em;\n  --jp-content-font-size1: 14px;\n\n  /* Base font size */\n  --jp-content-font-size2: 1.2em;\n  --jp-content-font-size3: 1.44em;\n  --jp-content-font-size4: 1.728em;\n  --jp-content-font-size5: 2.0736em;\n\n  /* This gives a magnification of about 125% in presentation mode over normal. */\n  --jp-content-presentation-font-size1: 17px;\n  --jp-content-heading-line-height: 1;\n  --jp-content-heading-margin-top: 1.2em;\n  --jp-content-heading-margin-bottom: 0.8em;\n  --jp-content-heading-font-weight: 500;\n\n  /* Shades of the default font color */\n  --jp-content-font-color0: var(--jp-inverse-layout-color0);\n  --jp-content-font-color1: var(--jp-inverse-layout-color1);\n  --jp-content-font-color2: var(--jp-inverse-layout-color3);\n  --jp-content-font-color3: var(--jp-inverse-layout-color5);\n  --jp-content-link-color: var(--md-blue-300);\n  --jp-content-font-family: -apple-system, blinkmacsystemfont, 'Segoe UI', helvetica, arial,\n    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n\n  /*\n   * Code Fonts\n   * Code font variables are used for typography of code and other monospaces content.\n   */\n  --jp-code-font-size: 12px;\n  --jp-code-line-height: 1.3077;\n\n  /* 17px for 15px base */\n  --jp-code-padding: 0.385em;\n\n  /* 5px for 15px base */\n  --jp-code-font-family-default: input mono, consolas, menlo, monaco, 'Lucida Console',\n    'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace,\n    serif;\n  --jp-code-font-family: var(--jp-code-font-family-default);\n\n  /* This gives a magnification of about 125% in presentation mode over normal. */\n  --jp-code-presentation-font-size: 1.25em;\n\n  /* may need to tweak cursor width if you change font size */\n  --jp-code-cursor-width0: 2px;\n\n  /* 0.107em; */\n  --jp-code-cursor-width1: 3px;\n\n  /* 0.154em; */\n  --jp-code-cursor-width2: 6px;\n\n  /* 0.308em; */\n\n  /* Layout\n   * The following are the main layout colors use in JupyterLab. In a light\n   * theme these would go from light to dark.\n   */\n\n  /* Brand - highlighting on cells and active tabs */\n  --jp-brand-color0: var(--base16-blue0);\n  --jp-brand-color1: var(--base16-blue1);\n  --jp-brand-color2: var(--base16-blue2);\n  --jp-brand-color3: var(--base16-blue-extra);\n\n  /* Accent */\n  --jp-accent-color0: var(--base16-green0);\n  --jp-accent-color1: var(--base16-green1);\n  --jp-accent-color2: var(--base16-green2);\n  --jp-accent-color3: var(--base16-green-extra);\n\n  /* State colors (warn, error, success, info) */\n  --jp-warn-color0: var(--base16-yellow0);\n  --jp-warn-color1: var(--base16-yellow1);\n  --jp-warn-color2: var(--base16-yellow2);\n  --jp-warn-color3: var(--base16-yellow-extra);\n  --jp-error-color0: var(--base16-red0);\n  --jp-error-color1: var(--base16-red1);\n  --jp-error-color2: var(--base16-red2);\n  --jp-error-color3: var(--base16-red-extra);\n  --jp-success-color0: var(--base16-green0);\n  --jp-success-color1: var(--base16-green1);\n  --jp-success-color2: var(--base16-green2);\n  --jp-success-color3: var(--base16-green-extra);\n  --jp-info-color0: var(--base16-cyan0);\n  --jp-info-color1: var(--base16-cyan1);\n  --jp-info-color2: var(--base16-cyan2);\n  --jp-info-color3: var(--base16-cyan-extra);\n\n  /* Cell specific styles */\n  --jp-cell-padding: 5px;\n  --jp-cell-collapser-width: 8px;\n  --jp-cell-collapser-min-height: 20px;\n  --jp-cell-collapser-not-active-hover-opacity: 0.6;\n  --jp-cell-editor-background: var(--jp-layout-color1);\n  --jp-cell-editor-border-color: var(--base16-gray-dark);\n  --jp-cell-editor-box-shadow: inset 0 0 1px var(--base16-gray-dark);\n  --jp-cell-editor-active-background: var(--jp-layout-color1);\n  --jp-cell-editor-active-border-color: var(--jp-layout-color4); /* var(--base16-gray); */\n  --jp-cell-prompt-width: 64px;\n  --jp-cell-prompt-font-family: 'Source Code Pro', monospace;\n  --jp-cell-prompt-letter-spacing: 0;\n  --jp-cell-prompt-opacity: 1;\n  --jp-cell-prompt-not-active-opacity: 1;\n  --jp-cell-prompt-not-active-font-color: var(--base16-gray);\n  --jp-cell-inprompt-font-color: var(--jp-brand-color2); /* var(--base16-yellow0); */\n  --jp-cell-outprompt-font-color: var(--jp-brand-color3);\n\n  /* Notebook specific styles */\n  --jp-notebook-padding: 10px;\n  --jp-notebook-select-background: var(--jp-layout-color2);\n  --jp-notebook-multiselected-color: var(--jp-layout-color3);\n\n  /* The scroll padding is calculated to fill enough space at the bottom of the\n   *notebook to show one single-line cell (with appropriate padding) at the top\n   *when the notebook is scrolled all the way to the bottom. We also subtract one\n   *pixel so that no scrollbar appears if we have just one single-line cell in the\n   *notebook. This padding is to enable a 'scroll past end' feature in a notebook.\n   */\n  --jp-notebook-scroll-padding: calc(\n    100% - var(--jp-code-font-size) * var(--jp-code-line-height) - var(--jp-code-padding) -\n      var(--jp-cell-padding) - 1px\n  );\n\n  /* Rendermime styles */\n  --jp-rendermime-error-background: var(--jp-layout-color0);\n  --jp-rendermime-table-row-background: var(--jp-layout-color1);\n  --jp-rendermime-table-row-hover-background: rgb(3 169 244 / 20%);\n\n  /* Dialog specific styles */\n  --jp-dialog-background: rgb(0 0 0 / 60%);\n\n  /* Console specific styles */\n  --jp-console-padding: 10px;\n\n  /* Toolbar specific styles */\n  --jp-toolbar-border-color: var(--jp-border-color2);\n  --jp-toolbar-micro-height: 8px;\n  --jp-toolbar-background: var(--jp-layout-color1);\n  --jp-toolbar-box-shadow: 0 0 2px 0 rgb(0 0 0 / 80%);\n  --jp-toolbar-header-margin: 4px 4px 0 4px;\n  --jp-toolbar-active-background: var(--jp-layout-color0);\n\n  /* Input field styles */\n  --jp-input-box-shadow: inset 0 0 1px var(--jp-brand-color2);\n  --jp-input-active-background: var(--jp-layout-color0);\n  --jp-input-hover-background: var(--jp-layout-color2);\n  --jp-input-background: var(--jp-layout-color2);\n  --jp-input-border-color: var(--base16-gray-dark);\n  --jp-input-active-border-color: var(--jp-layout-color4);\n\n  /* General editor styles */\n  --jp-editor-selected-background: var(--jp-layout-color1);\n  --jp-editor-selected-focused-background: var(--jp-layout-color2);\n  --jp-editor-cursor-color: var(--jp-inverse-layout-color0);\n\n  /* Code mirror specific styles\n   * https://codemirror.net/\n   * https://github.com/codemirror/CodeMirror/blob/master/mode/python/python.js\n   * https://github.com/jupyterlab/jupyterlab/tree/dbdefed9db9332381fe4104bdf53ec314451951f/packages/codemirror\n   */\n\n  --jp-mirror-editor-atom-color: var(--base16-purple2);\n\n  /* Attribute: attribute tags */\n  --jp-mirror-editor-attribute-color: var(--base16-yellow1);\n\n  /* Brackets: parens, brackets, braces */\n  --jp-mirror-editor-bracket-color: var(--base16-foreground-light);\n\n  /* Builtin: builtins (print, list, len, range, types) */\n  --jp-mirror-editor-builtin-color: var(--base16-yellow2);\n\n  /* Comments */\n  --jp-mirror-editor-comment-color: var(--jp-inverse-layout-color3);\n\n  /* Def: `class` and `def` declarations */\n  --jp-mirror-editor-def-color: var(--base16-cyan0);\n\n  /* Error: live error detection in cell */\n  --jp-mirror-editor-error-color: var(--base16-red1);\n\n  /* Headers in markdown */\n  --jp-mirror-editor-header-color: var(--base16-foreground-light); /* var(--base16-blue1); */\n  --jp-mirror-editor-hr-color: var(--base16-gray);\n\n  /* Keywords: class, def, as, from, import, return, etc */\n  --jp-mirror-editor-keyword-color: var(--base16-purple1);\n\n  /* Links in markdown [link](url) */\n  --jp-mirror-editor-link-color: var(--base16-blue0);\n\n  /* Meta: @var: decorators, properties */\n  --jp-mirror-editor-meta-color: var(--base16-magenta2);\n\n  /* Number: int, float literals */\n  --jp-mirror-editor-number-color: var(--base16-orange1);\n\n  /* Operators: +-*\\/&|= */\n  --jp-mirror-editor-operator-color: var(--base16-cyan-extra);\n\n  /* Property: method names (i.e., pd.`DataFrame`) */\n  --jp-mirror-editor-property-color: var(--base16-cyan2);\n\n  /* Punctuation: ??? */\n  --jp-mirror-editor-punctuation-color: var(--base16-teal0);\n\n  /* Qualifier: ??? */\n  --jp-mirror-editor-qualifier-color: var(--base16-magenta0); /* var(--base16-green1); */\n\n  /* Quote: ??? */\n  --jp-mirror-editor-quote-color: var(--base16-orange-extra);\n\n  /* Strings */\n  --jp-mirror-editor-string-color: var(--base16-green1);\n  --jp-mirror-editor-string-2-color: var(--base16-green1);\n\n  /* Tag: ??? */\n  --jp-mirror-editor-tag-color: var(--base16-cyan2);\n\n  /* Variable colors\n   * variable: most variables in code\n   * variable-2: `self` attributes in code; lists in markdown\n   * variable-3: ???\n   */\n  --jp-mirror-editor-variable-color: var(--base16-foreground-light);\n  --jp-mirror-editor-variable-2-color: var(--base16-magenta2);\n  --jp-mirror-editor-variable-3-color: var(--base16-gray);\n\n  /* obnoxious color for testing\n  var(--base16-magenta0); /*\n  */\n\n  /* Vega extension styles */\n  --jp-vega-background: var(--jp-layout-color6);\n\n  /* Sidebar-related styles */\n  --jp-sidebar-min-width: 180px;\n\n  /* Search-related styles */\n  --jp-search-toggle-off-opacity: 0.5;\n  --jp-search-toggle-hover-opacity: 0.75;\n  --jp-search-toggle-on-opacity: 1;\n\n  /* scrollbar related styles. Supports every browser except Edge.\n   * On Firefox, only the color settings are respected.\n   */\n  --jp-scrollbar-background-color: var(--jp-layout-color0);\n  --jp-scrollbar-endpad: 3px;\n\n  /* the minimum gap between the thumb and the ends of a scrollbar */\n  --jp-scrollbar-thumb-color: 213, 196, 161;\n\n  /* need to specify thumb color as an RGB triplet */\n  --jp-scrollbar-thumb-margin: 5px;\n\n  /* the space in between the sides of the thumb and the track */\n  --jp-scrollbar-thumb-radius: 9px;\n\n  /* set to a large-ish value for rounded endcaps on the thumb */\n}\n",""]);const t=a},645:e=>{e.exports=function(e){var o=[];return o.toString=function(){return this.map((function(o){var n=e(o);return o[2]?"@media ".concat(o[2]," {").concat(n,"}"):n})).join("")},o.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var t=0;t<this.length;t++){var l=this[t][0];null!=l&&(a[l]=!0)}for(var s=0;s<e.length;s++){var i=[].concat(e[s]);r&&a[i[0]]||(n&&(i[2]?i[2]="".concat(n," and ").concat(i[2]):i[2]=n),o.push(i))}},o}},549:(e,o,n)=>{n.r(o),n.d(o,{default:()=>l});var r=n(379),a=n.n(r),t=n(760);a()(t.Z,{insert:"head",singleton:!1});const l=t.Z.locals||{}},379:(e,o,n)=>{var r,a=function(){var e={};return function(o){if(void 0===e[o]){var n=document.querySelector(o);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[o]=n}return e[o]}}(),t=[];function l(e){for(var o=-1,n=0;n<t.length;n++)if(t[n].identifier===e){o=n;break}return o}function s(e,o){for(var n={},r=[],a=0;a<e.length;a++){var s=e[a],i=o.base?s[0]+o.base:s[0],p=n[i]||0,c="".concat(i," ").concat(p);n[i]=p+1;var d=l(c),b={css:s[1],media:s[2],sourceMap:s[3]};-1!==d?(t[d].references++,t[d].updater(b)):t.push({identifier:c,updater:f(b,o),references:1}),r.push(c)}return r}function i(e){var o=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var t=n.nc;t&&(r.nonce=t)}if(Object.keys(r).forEach((function(e){o.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(o);else{var l=a(e.insert||"head");if(!l)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");l.appendChild(o)}return o}var p,c=(p=[],function(e,o){return p[e]=o,p.filter(Boolean).join("\n")});function d(e,o,n,r){var a=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=c(o,a);else{var t=document.createTextNode(a),l=e.childNodes;l[o]&&e.removeChild(l[o]),l.length?e.insertBefore(t,l[o]):e.appendChild(t)}}function b(e,o,n){var r=n.css,a=n.media,t=n.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),t&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(t))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var u=null,h=0;function f(e,o){var n,r,a;if(o.singleton){var t=h++;n=u||(u=i(o)),r=d.bind(null,n,t,!1),a=d.bind(null,n,t,!0)}else n=i(o),r=b.bind(null,n,o),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(o){if(o){if(o.css===e.css&&o.media===e.media&&o.sourceMap===e.sourceMap)return;r(e=o)}else a()}}e.exports=function(e,o){(o=o||{}).singleton||"boolean"==typeof o.singleton||(o.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=s(e=e||[],o);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var a=l(n[r]);t[a].references--}for(var i=s(e,o),p=0;p<n.length;p++){var c=l(n[p]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}n=i}}}}}]);