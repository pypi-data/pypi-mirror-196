# automatically generated by the FlatBuffers compiler, do not modify

# namespace:

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class PointCloud(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PointCloud()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPointCloud(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    # PointCloud
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PointCloud
    def LidarSn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # PointCloud
    def AttrColumn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # PointCloud
    def ColumnCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # PointCloud
    def RowCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # PointCloud
    def PointCloud(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(
                flatbuffers.number_types.Float32Flags,
                a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4),
            )
        return 0

    # PointCloud
    def PointCloudAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Float32Flags, o)
        return 0

    # PointCloud
    def PointCloudLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # PointCloud
    def PointCloudIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0


def Start(builder):
    builder.StartObject(5)


def PointCloudStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)


def AddLidarSn(builder, lidarSn):
    builder.PrependUint64Slot(0, lidarSn, 0)


def PointCloudAddLidarSn(builder, lidarSn):
    """This method is deprecated. Please switch to AddLidarSn."""
    return AddLidarSn(builder, lidarSn)


def AddAttrColumn(builder, attrColumn):
    builder.PrependUint8Slot(1, attrColumn, 0)


def PointCloudAddAttrColumn(builder, attrColumn):
    """This method is deprecated. Please switch to AddAttrColumn."""
    return AddAttrColumn(builder, attrColumn)


def AddColumnCount(builder, columnCount):
    builder.PrependUint8Slot(2, columnCount, 0)


def PointCloudAddColumnCount(builder, columnCount):
    """This method is deprecated. Please switch to AddColumnCount."""
    return AddColumnCount(builder, columnCount)


def AddRowCount(builder, rowCount):
    builder.PrependUint32Slot(3, rowCount, 0)


def PointCloudAddRowCount(builder, rowCount):
    """This method is deprecated. Please switch to AddRowCount."""
    return AddRowCount(builder, rowCount)


def AddPointCloud(builder, pointCloud):
    builder.PrependUOffsetTRelativeSlot(
        4, flatbuffers.number_types.UOffsetTFlags.py_type(pointCloud), 0
    )


def PointCloudAddPointCloud(builder, pointCloud):
    """This method is deprecated. Please switch to AddPointCloud."""
    return AddPointCloud(builder, pointCloud)


def StartPointCloudVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)


def PointCloudStartPointCloudVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPointCloudVector(builder, numElems)


def End(builder):
    return builder.EndObject()


def PointCloudEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)
