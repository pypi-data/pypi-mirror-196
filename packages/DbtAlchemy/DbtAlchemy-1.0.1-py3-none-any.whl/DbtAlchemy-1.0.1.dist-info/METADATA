Metadata-Version: 2.1
Name: DbtAlchemy
Version: 1.0.1
Summary: SQLAlchemy support for GBase 8s Servers
Home-page: https://gbasedbt.com
Author: Development Team
Author-email: dbt@gbasebdt.com
License: Apache License 2.0
Keywords: sqlalchemy database interface for GBase 8s servers
Platform: All
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Database :: Front-Ends
Description-Content-Type: text/markdown
Requires-Dist: sqlalchemy (<2.0,>=0.7.3)
Requires-Dist: typing-extensions (<3.10)
Requires-Dist: DbtPy (>=3.0.3)

GBasedbt Alchemy Adapter
========================

The GBasedbt Alchemy adapter provides the Python/SQLAlchemy interface to GBase 8s Servers.
Fork from https://github.com/OpenInformix/InformixAlchemy

Version
--------
x.x.x

Prerequisites
--------------
1. Python 3.5.x .
2. SQLAlchemy 0.7.3 or above.
3. DbtPy driver and DbtPyDbi

Install and Configuration
=========================
The GBasedbt Alchemy Python Egg component (.egg) can be installed using the standard setuptools provided by the Python Easy Install through Python Enterprise
Application Kit community portal:
  http://peak.telecommunity.com/DevCenter/EasyInstall

Please follow the steps provided to Install "Easy Install" in the link above and follow up with these additional steps to install GBasedbt Alchemy:

  1. To install GBasedbt Alchemy from source
    Standard Python setup should be used::
        python setup.py build
        python setup.py install

Connecting
----------
A TCP/IP connection can be specified as the following::

	from sqlalchemy import create_engine

	e = create_engine("gbasedbt://user:pass@host[:port]/database")

For a local socket connection, exclude the "host" and "port" portions::

	from sqlalchemy import create_engine

	e = create_engine("gbasedbt://user:pass@/database")



Known Limitations in DbtAlchemy  adapter for GBase 8s databases
---------------------------------------------------------------
1) Non-standard SQL queries are not supported. e.g. "SELECT ? FROM TAB1"
2) For updations involving primary/foreign key references, the entries should be made in correct order. Integrity check is always on and thus the primary keys referenced by the foreign keys in the referencing tables should always exist in the parent table.
3) Unique key which contains nullable column not supported
4) UPDATE CASCADE for foreign keys not supported
5) DEFERRABLE INITIALLY deferred not supported
6) Subquery in ON clause of LEFT OUTER JOIN not supported



