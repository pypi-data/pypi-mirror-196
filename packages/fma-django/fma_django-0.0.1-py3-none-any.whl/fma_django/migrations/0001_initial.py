# Generated by Django 4.1.3 on 2023-01-25 19:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_q', '0014_schedule_cluster'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='FederatedModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('aggregator', models.CharField(blank=True, max_length=255)),
                ('requirement', models.CharField(blank=True, max_length=255)),
                ('requirement_args', models.JSONField(blank=True, null=True)),
                ('update_schema', models.JSONField(blank=True, null=True)),
                ('client_agg_results_schema', models.JSONField(blank=True, null=True)),
                ('furthest_base_agg', models.PositiveIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2147483647)])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('clients', models.ManyToManyField(blank=True, related_name='clients_of_model', to='fma_django.client')),
            ],
        ),
        migrations.CreateModel(
            name='ModelAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.FileField(upload_to='model_aggregates')),
                ('validation_score', models.FloatField(null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('federated_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aggregates', to='fma_django.federatedmodel')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='fma_django.modelaggregate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ModelUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.FileField(upload_to='model_updates')),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Running'), (2, 'Complete'), (3, 'Failed'), (4, 'Invalid')], default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('applied_aggregate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updates_used_to_agg', to='fma_django.modelaggregate')),
                ('base_aggregate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updates_using_this', to='fma_django.modelaggregate')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='model_updates', to='fma_django.client')),
                ('federated_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='model_updates', to='fma_django.federatedmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ModelArtifact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('values', models.FileField(upload_to='model_artifacts')),
                ('version', models.CharField(max_length=255)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('federated_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artifacts', to='fma_django.federatedmodel')),
            ],
        ),
        migrations.AddField(
            model_name='federatedmodel',
            name='current_artifact',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='fma_django.modelartifact'),
        ),
        migrations.AddField(
            model_name='federatedmodel',
            name='developer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='models', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='federatedmodel',
            name='scheduler',
            field=models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_q.schedule'),
        ),
        migrations.CreateModel(
            name='ClientAggregateScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validation_results', models.JSONField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('aggregate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_scores', to='fma_django.modelaggregate')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aggregate_scores', to='fma_django.client')),
            ],
        ),
        migrations.AddConstraint(
            model_name='modelartifact',
            constraint=models.UniqueConstraint(fields=('federated_model', 'version'), name='unique version to model'),
        ),
        migrations.AlterUniqueTogether(
            name='clientaggregatescore',
            unique_together={('aggregate', 'client')},
        ),
    ]
