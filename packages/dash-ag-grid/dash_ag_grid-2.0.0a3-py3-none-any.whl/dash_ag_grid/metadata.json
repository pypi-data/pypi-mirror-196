{
  "src/lib/components/AgGrid.react.js": {
    "description": "",
    "displayName": "DashAgGrid",
    "methods": [
      {
        "name": "buildArray",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "arr1",
            "type": null
          },
          {
            "name": "arr2",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that gets fired when the input changes"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The CSS style for the component",
        "defaultValue": {
          "value": "{height: '400px', width: '100%'}",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The class for the ag-grid.  Can specify the ag-grid theme here.",
        "defaultValue": {
          "value": "'ag-theme-alpine'",
          "computed": false
        }
      },
      "persistence": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "Used to allow user interactions in this component to be persisted when\nthe component - or the page - is refreshed. If `persisted` is truthy and\nhasn't changed from its previous value, a `value` that the user has\nchanged while using the app will keep that change, as long as\nthe new `value` also matches what was given originally.\nUsed in conjunction with `persistence_type`."
      },
      "persisted_props": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "Properties whose user interactions will persist after refreshing the\ncomponent or the page. Since only `value` is allowed this prop can\nnormally be ignored.",
        "defaultValue": {
          "value": "['selectedRows']",
          "computed": false
        }
      },
      "persistence_type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'local'",
              "computed": false
            },
            {
              "value": "'session'",
              "computed": false
            },
            {
              "value": "'memory'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Where persisted user changes will be stored:\nmemory: only kept in memory, reset on page refresh.\nlocal: window.localStorage, data is kept after the browser quit.\nsession: window.sessionStorage, data is cleared once the browser quit.",
        "defaultValue": {
          "value": "'local'",
          "computed": false
        }
      },
      "dangerously_allow_code": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Allow strings containing JavaScript code or HTML in certain props.\nIf your app stores Dash layouts for later retrieval this is dangerous\nbecause it can lead to cross-site-scripting attacks.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "resetColumnState": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the internal method resetColumnState() will be called",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "exportDataAsCsv": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the internal method exportDataAsCsv() will be called",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "selectAll": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the internal method selectAll() will be called",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "selectAllFiltered": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the internal method selectAllFiltered() will be called",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "deselectAll": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the internal method deselectAll() will be called",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "autoSizeAllColumns": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the internal method autoSizeAllColumns(false) will be called",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "autoSizeAllColumnsSkipHeaders": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the internal method autoSizeAllColumns(true) will be called",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "updateColumnState": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the internal method updateColumnState() will be called",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "deleteSelectedRows": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the internal method deleteSelectedRows() will be called"
      },
      "rowTransaction": {
        "type": {
          "name": "shape",
          "value": {
            "async": {
              "name": "bool",
              "required": false
            },
            "add": {
              "name": "array",
              "required": false
            },
            "update": {
              "name": "array",
              "required": false
            },
            "remove": {
              "name": "array",
              "required": false
            },
            "addIndex": {
              "name": "number",
              "required": false
            }
          }
        },
        "required": false,
        "description": "If true, the internal method rowTransaction() will be used,\nif async provided as false, applyTransaction() will be called, else applyTransactionAsync()"
      },
      "getRowId": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "This is required for change detection in rowData"
      },
      "columnState": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "Current state of the columns"
      },
      "csvExportParams": {
        "type": {
          "name": "shape",
          "value": {
            "columnSeparator": {
              "name": "string",
              "description": "Delimiter to insert between cell values.",
              "required": false
            },
            "suppressQuotes": {
              "name": "bool",
              "description": "Pass true to insert the value into the CSV file without escaping. In this case it is your responsibility to ensure that no cells contain the columnSeparator character.",
              "required": false
            },
            "prependContent": {
              "name": "string",
              "description": "Content to put at the top of the file export. A 2D array of CsvCell objects.",
              "required": false
            },
            "appendContent": {
              "name": "string",
              "description": "Content to put at the bottom of the file export.",
              "required": false
            },
            "allColumns": {
              "name": "bool",
              "description": "If true, all columns will be exported in the order they appear in the columnDefs.",
              "required": false
            },
            "columnKeys": {
              "name": "arrayOf",
              "value": {
                "name": "string"
              },
              "description": "Provide a list (an array) of column keys or Column objects if you want to export specific columns.",
              "required": false
            },
            "fileName": {
              "name": "string",
              "description": "String to use as the file name",
              "required": false
            },
            "onlySelected": {
              "name": "bool",
              "description": "Export only selected rows.",
              "required": false
            },
            "onlySelectedAllPages": {
              "name": "bool",
              "description": "Only export selected rows including other pages (only makes sense when using pagination).",
              "required": false
            },
            "skipColumnGroupHeaders": {
              "name": "bool",
              "description": "Set to true to skip include header column groups.",
              "required": false
            },
            "skipColumnHeaders": {
              "name": "bool",
              "description": "Set to true if you don't want to export column headers.",
              "required": false
            },
            "skipRowGroups": {
              "name": "bool",
              "description": "Set to true to skip row group headers if grouping rows. Only relevant when grouping rows.",
              "required": false
            },
            "skipPinnedTop": {
              "name": "bool",
              "description": "Set to true to suppress exporting rows pinned to the top of the grid.",
              "required": false
            },
            "skipPinnedBottom": {
              "name": "bool",
              "description": "Set to true to suppress exporting rows pinned to the bottom of the grid.",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object with properties to pass to the exportDataAsCsv() method"
      },
      "columnSize": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'sizeToFit'",
              "computed": false
            },
            {
              "value": "'autoSizeAll'",
              "computed": false
            },
            {
              "value": "null",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Size the columns autoSizeAll changes the column sizes to fit the column's content,\nsizeToFit changes the column sizes to fit the width of the table\nand null bypasses the altering of the column widths"
      },
      "theme": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'alpine'",
              "computed": false
            },
            {
              "value": "'balham'",
              "computed": false
            },
            {
              "value": "'material'",
              "computed": false
            },
            {
              "value": "'bootstrap'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Use this with Dash Enterprise only.  Sets the ag-grid theme.  Use ddk for dark themes."
      },
      "cellStyle": {
        "type": {
          "name": "shape",
          "value": {
            "styleConditions": {
              "name": "arrayOf",
              "value": {
                "name": "shape",
                "value": {
                  "condition": {
                    "name": "string",
                    "required": true
                  },
                  "style": {
                    "name": "object",
                    "required": true
                  }
                }
              },
              "required": false
            },
            "defaultStyle": {
              "name": "object",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object used to perform the cell styling. See AG-Grid Cell Style."
      },
      "getRowStyle": {
        "type": {
          "name": "shape",
          "value": {
            "styleConditions": {
              "name": "arrayOf",
              "value": {
                "name": "shape",
                "value": {
                  "condition": {
                    "name": "string",
                    "required": true
                  },
                  "style": {
                    "name": "object",
                    "required": true
                  }
                }
              },
              "required": false
            },
            "defaultStyle": {
              "name": "object",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object used to perform the row styling. See AG-Grid Row Style."
      },
      "getRowsRequest": {
        "type": {
          "name": "shape",
          "value": {
            "startRow": {
              "name": "number",
              "description": "The first row index to get.",
              "required": false
            },
            "endRow": {
              "name": "number",
              "description": "The first row index to NOT get.",
              "required": false
            },
            "sortModel": {
              "name": "any",
              "description": "If sorting, what the sort model is",
              "required": false
            },
            "filterModel": {
              "name": "any",
              "description": "If filtering, what the filter model is",
              "required": false
            },
            "context": {
              "name": "any",
              "description": "The grid context object",
              "required": false
            },
            "successCallback": {
              "name": "func",
              "description": "Callback to call when the request is successful.",
              "required": false
            },
            "failCallback": {
              "name": "func",
              "description": "Callback to call when the request fails.",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Infinite Scroll, Datasource interface\nSee https://www.ag-grid.com/react-grid/infinite-scrolling/#datasource-interface"
      },
      "getDetailRequest": {
        "type": {
          "name": "shape",
          "value": {
            "data": {
              "name": "any",
              "description": "Details about the row that was opened.",
              "required": false
            },
            "requestTime": {
              "name": "any",
              "description": "Datetime representing when the grid was requested.",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Request from Dash AgGrid when suppressCallback is disabled and a user opens a row with a detail grid"
      },
      "getDetailResponse": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "RowData to populate the detail grid when callbacks are used to populate"
      },
      "cellRendererData": {
        "type": {
          "name": "shape",
          "value": {
            "value": {
              "name": "any",
              "description": "Value set from the function",
              "required": false
            },
            "colId": {
              "name": "string",
              "description": "Column ID from where the event was fired",
              "required": false
            },
            "rowIndex": {
              "name": "number",
              "description": "Row Index from the grid, this is associated with the row count",
              "required": false
            },
            "rowId": {
              "name": "any",
              "description": "Row Id from the grid, this could be a number automatically, or set via getRowId",
              "required": false
            },
            "timestamp": {
              "name": "any",
              "description": "Timestamp of when the event was fired",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Special prop to allow feedback from cell renderer to the grid."
      },
      "getRowsResponse": {
        "type": {
          "name": "shape",
          "value": {
            "rowData": {
              "name": "arrayOf",
              "value": {
                "name": "object"
              },
              "description": "Data retreived from the server",
              "required": false
            },
            "rowCount": {
              "name": "number",
              "description": "Current row count, if known",
              "required": false
            },
            "storeInfo": {
              "name": "any",
              "description": "Any extra info for the grid to associate with this load",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Serverside model data response object.\nSee https://www.ag-grid.com/react-grid/server-side-model-datasource/"
      },
      "licenseKey": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "License key for ag-grid enterprise. If using Enterprise modules,\nenableEnterpriseModules must also be true."
      },
      "enableEnterpriseModules": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If True, enable ag-grid Enterprise modules. Recommended to use with licenseKey.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "virtualRowData": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The rowData in the grid after inline filters are applied."
      },
      "columnDefs": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Array of Column Definitions."
      },
      "defaultColDef": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A default column definition."
      },
      "defaultColGroupDef": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A default column group definition. All column group definitions will use these\nproperties. Items defined in the actual column group  definition get precedence."
      },
      "columnTypes": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "An object map of custom column types which contain groups of properties that column\ndefinitions can inherit."
      },
      "colResizeDefault": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Set to 'shift' to have shift-resize as the default resize operation (same as user\nholding down Shift while resizing)."
      },
      "suppressAutoSize": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Suppresses auto-sizing columns for columns. In other words, double clicking a\ncolumn's header's edge will not auto-size.\nDefault Value: false"
      },
      "autoSizePadding": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Number of pixels to add to a column width after the auto-sizing calculation. Set\nthis if you want to add extra room to accommodate (for example) sort icons, or\nsome other dynamic nature of the header.\nDefault Value: 4"
      },
      "skipHeaderOnAutoSize": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set this to true to skip the headerName when autoSize is called by default. See\nResizing Example.\nDefault Value: false"
      },
      "suppressColumnMoveAnimation": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the ag-column-moving class is not added to the grid while columns are\nmoving. In the default themes, this results in no animation when moving columns.\nDefault Value: false"
      },
      "suppressMovableColumns": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to suppress column moving, i.e. to make the columns fixed position.\nDefault Value: false"
      },
      "suppressFieldDotNotation": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, then dots in field names (e.g. address.firstline) are not treated as\ndeep references. Allows you to use dots in your field name if you prefer.\nDefault Value: false"
      },
      "unSortIcon": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to show the 'no sort' icon. See Example Custom Sorting.\nDefault Value: false"
      },
      "suppressMultiSort": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to suppress multi-sort when the user shift-clicks a column header.\nDefault Value: false"
      },
      "suppressMenuHide": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to always show the column menu button, rather than only showing when\nthe mouse is over the column header.\nDefault Value: false"
      },
      "autoGroupColumnDef": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Allows specifying the group 'auto column' if you are not happy with the default.\nIf grouping, this column def is included as the first column definition in the\ngrid. If not grouping, this column is not included."
      },
      "allowDragFromColumnsToolPanel": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Allow reordering and pinning columns by dragging columns from the columns tool\npanel to the grid.\nDefault Value: false"
      },
      "applyColumnDefOrder": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Sorts the grid columns in the order of Column Definitions after Column Definitions\nare updated. See Apply Column Order.\nDefault Value: false"
      },
      "quickFilterText": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Rows are filtered using this text as a quick filter."
      },
      "cacheQuickFilter": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to turn on the  quick filter cache, used for a performance gain when\nusing the quick filter.\nDefault Value: false"
      },
      "sortingOrder": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Array defining the order in which sorting occurs (if sorting is enabled). Values\ncan be 'asc', 'desc' or null. For example: sortingOrder: ['asc', 'desc']. See\nExample Sorting Order and Animation."
      },
      "accentedSort": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to specify that the sort should take into account accented characters.\nIf this feature is turned on the sort will perform slower. See Accented Sort.\nDefault Value: false"
      },
      "multiSortKey": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Set to 'ctrl' to have multi sorting work using the Ctrl or Command (for Apple)\nkeys. See Multi Column Sorting."
      },
      "suppressMaintainUnsortedOrder": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to suppress sorting of un-sorted data to match original row data.\nSee Big Data Small Transactions.\nDefault Value: false"
      },
      "excludeChildrenWhenTreeDataFiltering": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to override the default tree data filtering behaviour to instead exclude\nchild nodes from filter results. See Tree Data Filtering.\nDefault Value: false"
      },
      "rowSelection": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Type of Row Selection."
      },
      "rowMultiSelectWithClick": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to allow multiple rows to be selected using single click. See Multi\nSelect Single Click.\nDefault Value: false"
      },
      "suppressRowDeselection": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true then rows will not be deselected if you hold down Ctrl and click the row\nor press Space.\nDefault Value: false"
      },
      "suppressRowClickSelection": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, row selection won't happen when rows are clicked. Use when you want checkbox\nselection exclusively.\nDefault Value: false"
      },
      "suppressCellSelection": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, cells won't be selectable. This means cells will not get keyboard focus\nwhen you click on them.\nDefault Value: false"
      },
      "enableRangeSelection": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to enable Range Selection.\nDefault Value: false"
      },
      "enableRangeHandle": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to enable Range Handle\nDefault Value: false"
      },
      "enableFillHandle": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to enable Fill Handle\nDefault Value: false"
      },
      "fillHandleDirection": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Set to 'x' to force the fill handle direction to horizontal, or set it to 'y'\nto force the fill handle direction to vertical\nDefault Value: xy"
      },
      "suppressClearOnFillReduction": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set it to true to prevent cell values from being cleared when the Range Selection\nis reduced by the Fill Handle.\nDefault Value: false"
      },
      "rowDragManaged": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to enable Managed Row Dragging.\nDefault Value: false"
      },
      "suppressRowDrag": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to suppress Row Dragging.\nDefault Value: false"
      },
      "suppressMoveWhenRowDragging": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to suppress moving rows while dragging the rowDrag waffle. This option\nhighlights the position where the row will be placed and it will only move the\nrow on mouse up. See Row Dragging.\nDefault Value: false"
      },
      "singleClickEdit": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to enable Single Click Editing for cells, to start editing with a\nsingle click.\nDefault Value: false"
      },
      "suppressClickEdit": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true so that neither single nor double click starts editing. See Single\nClick, Double Click, No Click Editing.\nDefault Value: false"
      },
      "editType": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Set to 'fullRow' to enable Full Row Editing. Otherwise leave blank to edit one\ncell at a time."
      },
      "enableCellChangeFlash": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to have cells flash after data changes. See Flashing Data Changes.\nDefault Value: false"
      },
      "cellFlashDelay": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "To be used in combination with enableCellChangeFlash, this configuration will\nset delay in ms of how long a cell should remain in its \"flashed\nDefault Value: 500"
      },
      "cellFadeDelay": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "To be used in combination with enableCellChangeFlash, this configuration will\nset delay in ms of how long the \"flashed\nDefault Value: 1000"
      },
      "allowShowChangeAfterFilter": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to have cells flash after data changes even when the change is due\nto filtering. See Flashing Data Changes.\nDefault Value: false"
      },
      "stopEditingWhenGridLosesFocus": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set this to true to  stop cell editing when grid loses focus. The default is the\ngrid stays editing until focus goes onto another cell. For inline (non-popup)\neditors only.\nDefault Value: false"
      },
      "enterMovesDown": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set both properties to true to have Excel-style behaviour for the Enter key, i.e.\nenter key moves down.\nDefault Value: false"
      },
      "headerHeight": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The height in pixels for the row containing the column label header. See Header\nHeight.\nDefault Value: 25"
      },
      "groupHeaderHeight": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The height for the rows containing header column groups. If not specified, it\nuses headerHeight. See Header Height."
      },
      "floatingFiltersHeight": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The height for the row containing the floating filters. See Header Height.\nDefault Value: 20"
      },
      "pivotHeaderHeight": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The height for the row containing the columns when in pivot mode. If not specified,\nit uses headerHeight. See Header Height."
      },
      "pivotGroupHeaderHeight": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The height for the row containing header column groups when in pivot mode. If\nnot specified, it uses groupHeaderHeight. See Header Height."
      },
      "groupUseEntireRow": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Used when grouping. If true, a group row will span all columns across the entire\nwidth of the table. If false, the cells will be rendered as normal and you will\nhave the opportunity to include a grouping column (normally the first on the left)\nto show the group. See Full Width Group Rows.\nDefault Value: false"
      },
      "groupDefaultExpanded": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "If grouping, set to the number of levels to expand by default, e.g. 0 for none,\n1 for first level only, etc. Set to -1 to expand everything. See Removing Single\nChildren.\nDefault Value: 0"
      },
      "groupSuppressAutoColumn": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the grid will not swap in the grouping column when grouping is enabled.\nUse this if you want complete control on the column displayed and don't want the\ngrid's help, in other words if you already have a column in your column definitions\nthat is responsible for displaying the groups. See Configuring the Auto Group\nColumn.\nDefault Value: false"
      },
      "groupMultiAutoColumn": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If using auto column, set to true to have each group in its own separate column,\ne.g. if grouping by Country then Year, two auto columns will be created, one for\nCountry and one for Year. See Multi Auto Column Group.\nDefault Value: false"
      },
      "groupSelectsChildren": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "When true, if you select a group, the children of the group will also be selected.\nSee Group Selection.\nDefault Value: false"
      },
      "groupIncludeFooter": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If grouping, whether to show a group footer when the group is expanded. If true,\nthen by default,  the footer will contain aggregate data (if any) when shown and\nthe header will be blank. When closed, the header will contain  the aggregate\ndata regardless of this setting (as the footer is hidden anyway). This is handy\nfor 'total' rows, that are  displayed below the data when the group is open, and\nalongside the group when it is closed See Grouping Footers.\nDefault Value: false"
      },
      "groupIncludeTotalFooter": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to show a 'grand' total group footer across all groups. See Grouping\nFooters.\nDefault Value: false"
      },
      "groupSuppressBlankHeader": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, and showing footer, aggregate data will be displayed at both the header\nand footer levels always. This  stops the possibly undesirable behaviour of the\nheader details 'jumping' to the footer on expand.\nDefault Value: false"
      },
      "groupSelectsFiltered": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If using groupSelectsChildren, then only the children that pass the current filter\nwill get selected. See Group Selection.\nDefault Value: false"
      },
      "showOpenedGroup": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Shows the open group in the group column for non-group rows. See Showing Open\nGroups.\nDefault Value: false"
      },
      "groupRemoveSingleChildren": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to collapse groups that only have one child. See Remove Single Children.\nDefault Value: false"
      },
      "groupRemoveLowestSingleChildren": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to collapse lowest level groups that only have one child. See Remove\nSingle Children.\nDefault Value: false"
      },
      "groupHideOpenParents": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to hide parents that are open. When used with multiple columns for\nshowing groups, it can give a more pleasing user experience. See Group Hide Open\nParents.\nDefault Value: false"
      },
      "rowGroupPanelShow": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'never'",
              "computed": false
            },
            {
              "value": "'always'",
              "computed": false
            },
            {
              "value": "'onlyWhenGrouping'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "When to show the 'row group panel' (where you drag rows to group) at the top.\nSee Column Tool Panel Example.\nDefault Value: ['never', 'always', 'onlyWhenGrouping']"
      },
      "pivotMode": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to enable pivot mode. See Pivoting.\nDefault Value: false"
      },
      "pivotPanelShow": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'never'",
              "computed": false
            },
            {
              "value": "'always'",
              "computed": false
            },
            {
              "value": "'onlyWhenPivoting'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "When to show the 'pivot panel' (where you drag rows to pivot) at the top. Note\nthat the pivot panel will never show if pivotMode is off.\nDefault Value: ['never', 'always', 'onlyWhenPivoting']"
      },
      "suppressAggFuncInHeader": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "When true, column headers won't include the aggFunc, e.g. 'sum(Bank Balance)'\nwill just be 'Bank Balance'.\nDefault Value: false"
      },
      "suppressAggAtRootLevel": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "When true, the aggregations won't be computed for root node of the grid. See Big\nData Small Transactions.\nDefault Value: false"
      },
      "aggregateOnlyChangedColumns": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "When using change detection, only the updated column with get re-aggregated.\nDefault Value: false"
      },
      "functionsReadOnly": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, then row group, pivot and value aggregation will be read-only from the\nGUI. The grid will display what values are used for each, but will not allow the\nuser to change the selection. See Read Only Functions.\nDefault Value: false"
      },
      "aggFuncs": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A map of 'function name' to 'function' for custom aggregation functions. See Custom\nAggregation Functions."
      },
      "suppressAggFilteredOnly": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Set to true so that aggregations are not impacted by filtering. See Custom Aggregation\nFunctions."
      },
      "suppressMakeVisibleAfterUnGroup": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "By default, when a column is un-grouped it is made visible. e.g. on main demo:\n1) group by country by dragging (action of moving column out of grid means column\nis made visible=false); then 2) un-group by clicking 'x' on the country column\nin the column drop zone; the column is then made visible=true. This property stops\nthe column becoming visible again when un-grouping.\nDefault Value: false"
      },
      "pivotColumnGroupTotals": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "When set and the grid is in pivot mode, automatically calculated totals will appear\nwithin the Pivot Column Groups,in the position specified. See Pivot Column Group\nTotals."
      },
      "pivotRowTotals": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "When set and the grid is in pivot mode, automatically calculated totals will appear\nfor each value column in the position specified. See Pivot Row Totals."
      },
      "suppressExpandablePivotGroups": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "When enabled pivot column groups will appear 'fixed', without the ability to expand\nand collapse the column groups. See Fixed Pivot Column Groups.\nDefault Value: false"
      },
      "pivotSuppressAutoColumn": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the grid will not swap in the grouping column when pivoting. Useful if\npivoting using Server Side Row Model or Viewport Row Model and you want full control\nof all columns including the group column.\nDefault Value: false"
      },
      "rowModelType": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'clientSide'",
              "computed": false
            },
            {
              "value": "'infinite'",
              "computed": false
            },
            {
              "value": "'viewport'",
              "computed": false
            },
            {
              "value": "'serverSide'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Sets the Row Model type.\nDefault Value: ['clientSide', 'infinite', 'viewport', 'serverSide']",
        "defaultValue": {
          "value": "'clientSide'",
          "computed": false
        }
      },
      "rowData": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "(Client-Side Row Model only) Set the data to be displayed as rows in the grid."
      },
      "immutableData": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "(Client-Side Row Model only) Enables Immutable Data mode, for compatibility with\nimmutable stores."
      },
      "suppressModelUpdateAfterUpdateTransaction": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "( only) Prevents Transactions changing sort, filter, group or pivot state when\ntransaction only contains updates."
      },
      "pinnedTopRowData": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Data to be displayed as Pinned Top Rows in the grid."
      },
      "pinnedBottomRowData": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Data to be displayed as Pinned Bottom Rows in the grid."
      },
      "serverSideStoreType": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'full'",
              "computed": false
            },
            {
              "value": "'partial'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Whether to use Full Store or Partial Store for storing rows. See Row Stores\nDefault Value: ['full', 'partial']"
      },
      "cacheBlockSize": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Partial Store Only - How many rows for each block in the store, i.e. how many\nrows returned from the server at a time.\nDefault Value: 100"
      },
      "cacheOverflowSize": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Quantity of extra blank rows to display to the user at the end of the dataset,\nwhich sets the vertical scroll and then allows the grid to request viewing more rows of data.\ndefault is 1, ie show 1 row."
      },
      "maxBlocksInCache": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Partial Store Only - how many blocks to keep in the store. Default is no limit,\nso every requested block is kept. Use this if you have memory concerns, and blocks\nthat were least recently viewed will be purged when the limit is hit. The grid\nwill additionally make sure it has all the blocks needed to display what is currently\nvisible - in case this property is set to low."
      },
      "maxConcurrentDatasourceRequests": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "How many requests to hit the server with concurrently. If the max is reached,\nrequests are queued.\nDefault Value: 1"
      },
      "blockLoadDebounceMillis": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "How many milliseconds to wait before loading a block. Useful when scrolling over\nmany rows, spanning many Partial Store blocks, as it prevents blocks loading until\nscrolling has settled."
      },
      "purgeClosedRowNodes": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "When enabled, closing group rows will remove children of that row. Next time the\nrow is opened, child rows will be read form the datasoruce again. This property\nonly applies when there is Row Grouping."
      },
      "serverSideFilteringAlwaysResets": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "When enabled, always refreshes stores after filter has changed. Use by Full Store\nonly, to allow Server-Side Filtering."
      },
      "viewportRowModelPageSize": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "When using viewport row model, sets the pages size for the viewport."
      },
      "viewportRowModelBufferSize": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "When using viewport row model, sets the buffer size for the viewport."
      },
      "viewportDatasource": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "To use the viewport row model you provide the grid with a viewportDatasource.\nSee Viewport."
      },
      "alwaysShowHorizontalScroll": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to always show the horizontal scrollbar.\nDefault Value: false"
      },
      "alwaysShowVerticalScroll": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to always show the vertical scrollbar.\nDefault Value: false"
      },
      "debounceVerticalScrollbar": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to debounce the vertical scrollbar. Can provide smoother scrolling\non older browsers, eg IE.\nDefault Value: false"
      },
      "suppressHorizontalScroll": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to never show the horizontal scroll. This is useful if the grid is\naligned with another grid and will scroll when the other grid scrolls. (Show not\nbe used in combination with alwaysShowHorizontalScroll) See Aligned Grid as Footer.\nDefault Value: false"
      },
      "suppressColumnVirtualisation": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true so that the grid doesn't virtualise the columns. For example, if you\nhave 100 columns, but only 10 visible due to scrolling, all 100 will always be\nrendered.\nDefault Value: false"
      },
      "suppressRowVirtualisation": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "There is no such property as suppressRowVirtualisation - if you want to do this,\nthen set the rowBuffer property to be very large, e.g. 9999. Warning: lots of\nrendered rows will mean a very large amount of rendering in the DOM which will\nslow things down."
      },
      "suppressMaxRenderedRowRestriction": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "By default the grid has a limit of rendering a maximum of 500 rows at once (remember\nthe grid only renders rows you can see, so unless your display shows more than\n500 rows without vertically scrolling this will never be an issue).\nDefault Value: false"
      },
      "suppressScrollOnNewData": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "When true, the grid will not scroll to the top when new row data is provided.\nUse this if you don't want the default behaviour of scrolling to the top every\ntime you load new data.\nDefault Value: false"
      },
      "suppressAnimationFrame": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "When true, the grid will not use animation frames when drawing rows while scrolling.\nUse this if the grid is working fast enough that you don't need animation frames\nand you don't want the grid to flicker.\nDefault Value: false"
      },
      "pagination": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set whether Pagination is enabled.\nDefault Value: false"
      },
      "paginationPageSize": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "How many rows to load per page. If paginationAutoPageSize is specified, this property\nis ignored. See Customising Pagination.\nDefault Value: 100"
      },
      "paginationAutoPageSize": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true so that the number of rows to load per page is automatically adjusted\nby AG Grid so each page shows enough rows to just fill the area designated for\nthe grid. If false, paginationPageSize is used. See Auto Page Size.\nDefault Value: false"
      },
      "suppressPaginationPanel": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the default AG Grid controls for navigation are hidden. This is useful\nif pagination=true and you want to provide your own pagination controls. Otherwise,\nwhen pagination=true the grid automatically shows the necessary controls at the\nbottom so that the user can navigate through the different pages. See Custom Pagination\nControls.\nDefault Value: false"
      },
      "paginateChildRows": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Set to true to have pages split children of groups when using Row Grouping or\ndetail rows with Master Detail. See Pagination & Child Rows."
      },
      "groupRowRenderer": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Sets the Cell Renderer to use when groupUseEntireRow=true. See Row Grouping."
      },
      "groupRowInnerRenderer": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Sets the inner Cell Renderer to use when groupUseEntireRow=true. See Row Grouping."
      },
      "fullWidthCellRenderer": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Sets the Cell Renderer to use for Full Width Rows."
      },
      "masterDetail": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Used to enable Master Detail. See Enabling Master Detail.\nDefault Value: false"
      },
      "detailCellRendererParams": {
        "type": {
          "name": "shape",
          "value": {
            "detailGridOptions": {
              "name": "any",
              "description": "Grid options for detail grid in master-detail view.",
              "required": false
            },
            "detailColName": {
              "name": "string",
              "description": "Column name where detail grid data is located in main dataset, for master-detail view.",
              "required": false
            },
            "suppressCallback": {
              "name": "bool",
              "description": "Default: true. If true, suppresses the Dash callback in favor of using the data embedded in rowData at the given detailColName.",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Specifies the params to be used by the default detail Cell Renderer. See Detail\nGrids."
      },
      "keepDetailRows": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to keep detail rows for when they are displayed again.\nDefault Value: false"
      },
      "keepDetailRowsCount": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Sets the number of details rows to keep.\nDefault Value: 10"
      },
      "detailRowHeight": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Set fixed height in pixels for each detail row."
      },
      "detailRowAutoHeight": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set detail row height automatically based on contents."
      },
      "icons": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Icons to use inside the grid instead of the grid's default icons."
      },
      "rowHeight": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Default Row Height in pixels.\nDefault Value: 25"
      },
      "animateRows": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to enable Row Animation.\nDefault Value: false"
      },
      "rowStyle": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The style to give a particular row. See Row Style."
      },
      "rowClass": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The class to give a particular row. See Row Class."
      },
      "rowClassRules": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Rules which can be applied to include certain CSS classes. See Row Class Rules."
      },
      "excelStyles": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The list of Excel styles to be used when exporting to Excel"
      },
      "scrollbarWidth": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Tell the grid how wide the scrollbar is, which is used in grid width calculations.\nSet only if using non-standard browser-provided scrollbars, so the grid can use\nthe non-standard size in its calculations."
      },
      "suppressRowHoverHighlight": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to not highlight rows by adding the ag-row-hover CSS class.\nDefault Value: false"
      },
      "suppressCopyRowsToClipboard": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to only have the range selection, and not row selection, copied to\nclipboard.\nDefault Value: false"
      },
      "copyHeadersToClipboard": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to also include headers when copying to clipboard using Ctrl + C clipboard.\nDefault Value: false"
      },
      "clipboardDeliminator": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Specify the deliminator to use when copying to clipboard."
      },
      "suppressFocusAfterRefresh": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to not set focus back on the grid after a refresh. This can avoid\nissues where you want to keep the focus on another part of the browser.\nDefault Value: false"
      },
      "suppressLastEmptyLineOnPaste": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to work around a bug with Excel (Windows) that adds an extra empty\nline at the end of ranges copied to the clipboard.\nDefault Value: false"
      },
      "enableCellTextSelection": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to be able to select the text within cells.\nDefault Value: false"
      },
      "localeText": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A map of key->value pairs for localising text within the grid. See Localisation."
      },
      "suppressLoadingOverlay": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disables the 'loading' overlay.\nDefault Value: false"
      },
      "suppressNoRowsOverlay": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disables the 'no rows' overlay.\nDefault Value: false"
      },
      "overlayLoadingTemplate": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Provide a template for 'loading' overlay."
      },
      "overlayNoRowsTemplate": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Provide a template for 'no rows' overlay."
      },
      "loadingOverlayComponent": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Provide a custom loading overlay component."
      },
      "loadingOverlayComponentParams": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Customise the parameters provided to the loading overlay component."
      },
      "noRowsOverlayComponent": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Provide a custom no rows overlay component."
      },
      "noRowsOverlayComponentParams": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Customise the parameters provided to the no rows overlay component."
      },
      "enableCharts": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to Enable Charts.\nDefault Value: false"
      },
      "chartThemes": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'ag-default'",
              "computed": false
            },
            {
              "value": "'ag-material'",
              "computed": false
            },
            {
              "value": "'ag-pastel'",
              "computed": false
            },
            {
              "value": "'ag-vivid'",
              "computed": false
            },
            {
              "value": "'ag-solar'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "The list of chart themes to be used, see Chart Themes.\nDefault Value: ['ag-default', 'ag-material', 'ag-pastel', 'ag-vivid', 'ag-solar']"
      },
      "customChartThemes": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A map containing custom chart themes, see Custom Chart Themes."
      },
      "chartThemeOverrides": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Chart theme overrides applied to all themes, see Overriding Existing Themes."
      },
      "components": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A map of component names to plain JavaScript components."
      },
      "frameworkComponents": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A map of component names to framework (React, Angular etc) components."
      },
      "popupParent": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "DOM element to use as popup parent for grid popups (context menu, column menu\netc)."
      },
      "valueCache": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to turn on the value cache.\nDefault Value: false"
      },
      "valueCacheNeverExpires": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to set value cache to not expire after data updates.\nDefault Value: false"
      },
      "defaultExportParams": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A default configuration object used to export to CSV or Excel."
      },
      "suppressMiddleClickScrolls": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, then middle clicks will result in click events for cell and row. Otherwise\nthe browser will use middle click to scroll the grid.\nDefault Value: false"
      },
      "suppressPreventDefaultOnMouseWheel": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, mouse wheel events will be passed to the browser. Useful if your grid\nhas no vertical scrolls and you want the mouse to scroll the browser page.\nDefault Value: false"
      },
      "enableBrowserTooltips": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to use the browser's default tooltip instead of using AG Grid's Tooltip\nComponent.\nDefault Value: false"
      },
      "tooltipShowDelay": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The delay in milliseconds that it takes for tooltips to show up once an element\nis hovered.\nDefault Value: 2000"
      },
      "tooltipMouseTrack": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to have tooltips follow the cursor once they are displayed.\nDefault Value: false"
      },
      "enableCellExpressions": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to allow cell expressions.\nDefault Value: false"
      },
      "domLayout": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'normal'",
              "computed": false
            },
            {
              "value": "'autoHeight'",
              "computed": false
            },
            {
              "value": "'print'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Switch between layout options. See Printing and Auto Height.\nDefault Value: ['normal', 'autoHeight', 'print']"
      },
      "ensureDomOrder": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "When true, the order of rows and columns in the DOM are consistent with what is\non screen. See Accessibility - Row and Column Order.\nDefault Value: false"
      },
      "rowBuffer": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The number of rows rendered outside the scrollable viewable area the grid renders.\nHaving a buffer means the grid will have rows ready to show as the user slowly\nscrolls vertically.\nDefault Value: 20"
      },
      "alignedGrids": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A list of grids to treat as Aligned Grids. If grids are aligned then the columns\nand horizontal scrolling will be kept in sync."
      },
      "suppressParentsInRowNodes": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, rowNodes don't get their parents set. The grid doesn't use the parent\nreference, but it is included to help the client code navigate the node tree if\nit wants by providing bi-direction navigation up and down the tree. If this is\na problem (e.g. if you need to convert the tree to JSON, which does not allow\ncyclic dependencies) then set this to true.\nDefault Value: false"
      },
      "suppressDragLeaveHidesColumns": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, when you drag a column out of the grid (e.g. to the group zone) the column\nis not hidden.\nDefault Value: false",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "layoutInterval": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The interval in milliseconds that the grid uses to periodically check its size\nand lay itself out again if the size has changed, such as when your browser changes\nsize, or your application changes the size of the div element that the grid lives\ninside. To stop the periodic layout, set it to -1.\nDefault Value: 500"
      },
      "enableRtl": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to operate grid in RTL (Right to Left) mode.\nDefault Value: false"
      },
      "debug": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set this to true to enable debug information from AG Grid and related components.\nWill result in additional logging being output, but very useful when investigating\nproblems.\nDefault Value: false"
      },
      "context": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Provides a context object that is provided to different callbacks the grid uses.\nUsed for passing additional information to the callbacks by your application."
      },
      "suppressContextMenu": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true to not show context menu. Use if you don't want to use the default\n'right click' context menu.\nDefault Value: false"
      },
      "preventDefaultOnContextMenu": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "When using suppressContextMenu, you can use the onCellContextMenu function to\nprovide your own code to handle cell contextmenu events. This flag is useful to\nprevent the browser from showing its default context menu.\nDefault Value: false"
      },
      "allowContextMenuWithControlKey": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Allows context menu to show, even when Ctrl key is held down."
      },
      "statusBar": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Specifies the status bar components to use in the status bar."
      },
      "suppressTouch": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disables touch support (but does not remove the browser's efforts to simulate\nmouse events on touch).\nDefault Value: false"
      },
      "suppressAsyncEvents": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disables the async nature of the events introduced in v10, and makes them synchronous.\nThis property is only introduced for the purpose of supporting legacy code which\nhas a dependency to sync events in earlier versions (v9 or earlier) of AG Grid.\nIt is strongly recommended that you don't change this property unless you have\nlegacy issues.\nDefault Value: false"
      },
      "suppressCsvExport": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Prevents the user from exporting the grid to CSV.\nDefault Value: false"
      },
      "suppressExcelExport": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Prevents the user from exporting the grid to Excel.\nDefault Value: false"
      },
      "asyncTransactionWaitMillis": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "How many milliseconds to wait before executing a batch of async transactions."
      },
      "suppressPropertyNamesCheck": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disables showing a warning message in the console if using a gridOptions or colDef\nproperty that doesn't exist.\nDefault Value: false"
      },
      "suppressRowTransform": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Uses CSS top instead of CSS transform for positioning rows. Useful if the transform\nfunction is causing issues such as used in row spanning.\nDefault Value: false"
      },
      "serverSideSortingAlwaysResets": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "When true, a full reset will be performed when sorting using the Server-Side Row\nModel.\nDefault Value: false"
      },
      "suppressBrowserResizeObserver": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The grid will check for ResizeObserver and use it if it exists in the browser,\notherwise it will use the grid's alternative implementation. Some users reported\nissues with Chrome's ResizeObserver. Use this property to always use the grid's\nalternative implementation should such problems exist.\nDefault Value: false"
      },
      "cellClicked": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Cell is clicked."
      },
      "cellDoubleClicked": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Cell is double clicked."
      },
      "cellFocused": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Cell is focused."
      },
      "cellMouseOver": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Mouse entered cell."
      },
      "cellMouseOut": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Mouse left cell."
      },
      "cellMouseDown": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Mouse down on cell."
      },
      "rowClicked": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Row is clicked."
      },
      "rowDoubleClicked": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Row is double clicked."
      },
      "selectedRows": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "object"
          }
        },
        "required": false,
        "description": "The actively selected rows from the grid (may include filtered rows)"
      },
      "cellContextMenu": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Cell is right clicked."
      },
      "rangeSelectionChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A change to range selection has occurred."
      },
      "cellValueChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Value has changed after editing."
      },
      "rowValueChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A cell's value within a row has changed. This event corresponds to Full Row Editing\nonly."
      },
      "cellEditingStarted": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Editing a cell has started."
      },
      "cellEditingStopped": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Editing a cell has stopped."
      },
      "rowEditingStarted": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Editing a row has started (when row editing is enabled). When row editing, this\nevent will be fired once and cellEditingStarted will be fired for each individual\ncell. This event corresponds to Full Row Editing only."
      },
      "rowEditingStopped": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Editing a row has stopped (when row editing is enabled). When row editing, this\nevent will be fired once and cellEditingStopped will be fired for each individual\ncell. This event corresponds to Full Row Editing only."
      },
      "pasteStart": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Paste operation has started. See Clipboard Events."
      },
      "pasteEnd": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Paste operation has ended. See Clipboard Events."
      },
      "sortChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Sort has changed. The grid also listens for this and updates the model."
      },
      "filterChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Filter has been modified and applied."
      },
      "filterModified": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Filter was modified but not applied. Used when filters have 'Apply' buttons."
      },
      "rowDragEnter": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A drag has started, or dragging was already started and the mouse has re-entered\nthe grid having previously left the grid."
      },
      "rowDragMove": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The mouse has moved while dragging."
      },
      "rowDragLeave": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The mouse has left the grid while dragging."
      },
      "rowDragEnd": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The drag has finished over the grid."
      },
      "columnVisible": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A column, or group of columns, was hidden / shown."
      },
      "columnPinned": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A column, or group of columns, was pinned / unpinned."
      },
      "columnResized": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A column was resized."
      },
      "columnMoved": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A column was moved. To find out when the column move is finished you can use the\ndragStopped event below."
      },
      "columnRowGroupChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A row group column was added or removed."
      },
      "columnValueChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A value column was added or removed."
      },
      "columnPivotModeChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The pivot mode flag was changed."
      },
      "columnPivotChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A pivot column was added, removed or order changed."
      },
      "columnGroupOpened": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A column group was opened / closed."
      },
      "newColumnsLoaded": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "User set new columns."
      },
      "gridColumnsChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The list of grid columns changed."
      },
      "displayedColumnsChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The list of displayed columns changed. This can result from columns open / close,\ncolumn move, pivot, group, etc."
      },
      "virtualColumnsChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The list of rendered columns changed (only columns in the visible scrolled viewport\nare rendered by default)."
      },
      "columnEverythingChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Shotgun - gets called when either a) new columns are set or b) columnApi.setState()\nis used, so everything has changed."
      },
      "gridReady": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The grid has initialised. The name 'ready' was influenced by the author's time\nprogramming the Commodore 64. Use this event if, for example, you need to use\nthe grid's API to fix the columns to size."
      },
      "gridSizeChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The size of the grid div has changed. In other words, the grid was resized."
      },
      "modelUpdated": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Displayed rows have changed. Triggered after sort, filter or tree expand / collapse\nevents."
      },
      "firstDataRendered": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Fired the first time data is rendered into the grid."
      },
      "rowGroupOpened": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A row group was opened or closed."
      },
      "expandOrCollapseAll": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Fired when calling either of the API methods expandAll() or collapseAll()."
      },
      "paginationChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Triggered every time the paging state changes. Some of the most common scenarios\nfor this event to be triggered are:The page size changesThe current shown page\nis changedNew data is loaded onto the grid"
      },
      "pinnedRowDataChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The client has set new pinned row data into the grid."
      },
      "virtualRowRemoved": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "A row was removed from the DOM, for any reason. Use to clean up resources (if\nany) used by the row."
      },
      "viewportChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Which rows are rendered in the DOM has changed."
      },
      "bodyScroll": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The body was scrolled horizontally or vertically."
      },
      "dragStarted": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "When dragging starts. This could be any action that uses the grid's Drag and Drop\nservice, e.g. Column Moving, Column Resizing, Range Selection, Fill Handle, etc."
      },
      "dragStopped": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "When dragging stops. This could be any action that uses the grid's Drag and Drop\nservice, e.g. Column Moving, Column Resizing, Range Selection, Fill Handle, etc."
      },
      "rowDataChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The client has set new data into the grid using api.setRowData() or by changing\nthe rowData bound property."
      },
      "rowDataUpdated": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The client has updated data for the grid using api.applyTransaction(transaction)\nor by changing the rowData bound property with immutableData=true."
      },
      "toolPanelVisibleChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The tool panel was hidden or shown. Use api.isToolPanelShowing() to get status."
      },
      "componentStateChanged": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Only used by React, Angular and VueJS AG Grid components (not used if doing plain\nJavaScript or Angular 1.x). If the grid receives changes due to bound properties,\nthis event fires after the grid has finished processing the change."
      },
      "animationQueueEmpty": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The grid draws rows and cells using animation frames. This event gets fired when\nthe animation frame queue is empty. Normally used in conjunction with api.isAnimationFrameQueueEmpty()\nso user can check if animation frame is pending, and if so then can be notified\nwhen no animation frames are pending. Useful if your application needs to know\nwhen drawing of the grid is no longer pending, e.g. for sending to a printer."
      },
      "AsyncTransactionsFlushed": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Async transactions have been applied. Contains a list of all transaction results."
      },
      "cellKeyDown": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "DOM event keyDown happened on a cell. See Keyboard Events."
      },
      "cellKeyPress": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "DOM event keyPress happened on a cell. See Keyboard Events."
      },
      "sideBar": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "enum",
              "value": [
                {
                  "value": "'columns'",
                  "computed": false
                },
                {
                  "value": "'filters'",
                  "computed": false
                }
              ]
            },
            {
              "name": "object"
            }
          ]
        },
        "required": false,
        "description": "SideBar configures the properties of the grid sidebar."
      },
      "dashGridOptions": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Other ag-grid options"
      }
    }
  }
}