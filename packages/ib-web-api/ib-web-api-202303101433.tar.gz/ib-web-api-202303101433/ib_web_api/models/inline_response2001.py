# coding: utf-8

"""
    Client Portal Web API

    Client Poral Web API  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse2001(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'a': 'int',
        'fc': 'str',
        'h': 'int',
        'fd': 'str',
        'fn': 'str'
    }

    attribute_map = {
        'a': 'A',
        'fc': 'FC',
        'h': 'H',
        'fd': 'FD',
        'fn': 'FN'
    }

    def __init__(self, a=None, fc=None, h=None, fd=None, fn=None):  # noqa: E501
        """InlineResponse2001 - a model defined in Swagger"""  # noqa: E501
        self._a = None
        self._fc = None
        self._h = None
        self._fd = None
        self._fn = None
        self.discriminator = None
        if a is not None:
            self.a = a
        if fc is not None:
            self.fc = fc
        if h is not None:
            self.h = h
        if fd is not None:
            self.fd = fd
        if fn is not None:
            self.fn = fn

    @property
    def a(self):
        """Gets the a of this InlineResponse2001.  # noqa: E501

        optional, if A doesn't exist, it means user can't toggle this option. 0-off, 1-on.  # noqa: E501

        :return: The a of this InlineResponse2001.  # noqa: E501
        :rtype: int
        """
        return self._a

    @a.setter
    def a(self, a):
        """Sets the a of this InlineResponse2001.

        optional, if A doesn't exist, it means user can't toggle this option. 0-off, 1-on.  # noqa: E501

        :param a: The a of this InlineResponse2001.  # noqa: E501
        :type: int
        """

        self._a = a

    @property
    def fc(self):
        """Gets the fc of this InlineResponse2001.  # noqa: E501

        fyi code  # noqa: E501

        :return: The fc of this InlineResponse2001.  # noqa: E501
        :rtype: str
        """
        return self._fc

    @fc.setter
    def fc(self, fc):
        """Sets the fc of this InlineResponse2001.

        fyi code  # noqa: E501

        :param fc: The fc of this InlineResponse2001.  # noqa: E501
        :type: str
        """

        self._fc = fc

    @property
    def h(self):
        """Gets the h of this InlineResponse2001.  # noqa: E501

        disclaimer read, 1 = yes, = 0 no.  # noqa: E501

        :return: The h of this InlineResponse2001.  # noqa: E501
        :rtype: int
        """
        return self._h

    @h.setter
    def h(self, h):
        """Sets the h of this InlineResponse2001.

        disclaimer read, 1 = yes, = 0 no.  # noqa: E501

        :param h: The h of this InlineResponse2001.  # noqa: E501
        :type: int
        """

        self._h = h

    @property
    def fd(self):
        """Gets the fd of this InlineResponse2001.  # noqa: E501

        detailed description  # noqa: E501

        :return: The fd of this InlineResponse2001.  # noqa: E501
        :rtype: str
        """
        return self._fd

    @fd.setter
    def fd(self, fd):
        """Sets the fd of this InlineResponse2001.

        detailed description  # noqa: E501

        :param fd: The fd of this InlineResponse2001.  # noqa: E501
        :type: str
        """

        self._fd = fd

    @property
    def fn(self):
        """Gets the fn of this InlineResponse2001.  # noqa: E501

        title  # noqa: E501

        :return: The fn of this InlineResponse2001.  # noqa: E501
        :rtype: str
        """
        return self._fn

    @fn.setter
    def fn(self, fn):
        """Sets the fn of this InlineResponse2001.

        title  # noqa: E501

        :param fn: The fn of this InlineResponse2001.  # noqa: E501
        :type: str
        """

        self._fn = fn

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse2001, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2001):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
