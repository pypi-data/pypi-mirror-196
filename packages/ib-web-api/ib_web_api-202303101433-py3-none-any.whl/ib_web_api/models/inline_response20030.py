# coding: utf-8

"""
    Client Portal Web API

    Client Poral Web API  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20030(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'server_id': 'str',
        'conid': 'int',
        'updated': 'int',
        '_31': 'str',
        '_55': 'str',
        '_58': 'str',
        '_70': 'str',
        '_71': 'str',
        '_73': 'str',
        '_74': 'str',
        '_75': 'str',
        '_76': 'str',
        '_77': 'str',
        '_78': 'str',
        '_79': 'str',
        '_80': 'str',
        '_82': 'str',
        '_83': 'str',
        '_84': 'str',
        '_85': 'str',
        '_86': 'str',
        '_87': 'str',
        '_87_raw__deprecated': 'str',
        '_88': 'str',
        '_6004': 'str',
        '_6008': 'int',
        '_6070': 'str',
        '_6072': 'str',
        '_6073': 'str',
        '_6119': 'str',
        '_6457': 'int',
        '_6508': 'str',
        '_6509': 'str',
        '_7051': 'str',
        '_7057': 'str',
        '_7058': 'str',
        '_7059': 'str',
        '_7068': 'str',
        '_7084': 'str',
        '_7085': 'str',
        '_7086': 'str',
        '_7087': 'str',
        '_7088': 'str',
        '_7089': 'str',
        '_7094': 'str',
        '_7184': 'str',
        '_7219': 'str',
        '_7220': 'str',
        '_7221': 'str',
        '_7280': 'str',
        '_7281': 'str',
        '_7282': 'str',
        '_7283': 'str',
        '_7284': 'str',
        '_7285': 'str',
        '_7286': 'str',
        '_7287': 'str',
        '_7288': 'str',
        '_7289': 'str',
        '_7290': 'str',
        '_7291': 'str',
        '_7292': 'str',
        '_7293': 'str',
        '_7294': 'str',
        '_7295': 'str',
        '_7296': 'str',
        '_7308': 'str',
        '_7309': 'str',
        '_7310': 'str',
        '_7311': 'str',
        '_7607': 'str',
        '_7633': 'str',
        '_7635': 'str',
        '_7636': 'str',
        '_7637': 'str',
        '_7638': 'str',
        '_7639': 'str',
        '_7644': 'str',
        '_7655': 'str',
        '_7671': 'str',
        '_7672': 'str',
        '_7674': 'str',
        '_7675': 'str',
        '_7676': 'str',
        '_7677': 'str',
        '_7678': 'str',
        '_7679': 'str',
        '_7680': 'str',
        '_7681': 'str',
        '_7682': 'str',
        '_7683': 'str',
        '_7684': 'str',
        '_7685': 'str',
        '_7686': 'str',
        '_7687': 'str',
        '_7688': 'str',
        '_7689': 'str',
        '_7690': 'str',
        '_7694': 'str',
        '_7695': 'str',
        '_7696': 'str',
        '_7697': 'str',
        '_7698': 'str',
        '_7699': 'str',
        '_7700': 'str',
        '_7702': 'str',
        '_7703': 'str',
        '_7704': 'str',
        '_7705': 'str',
        '_7706': 'str',
        '_7707': 'str',
        '_7708': 'str',
        '_7714': 'str',
        '_7715': 'str',
        '_7718': 'str',
        '_7720': 'str',
        '_7741': 'str',
        '_7762': 'str',
        '_7768': 'str'
    }

    attribute_map = {
        'server_id': 'server_id',
        'conid': 'conid',
        'updated': '_updated',
        '_31': '31',
        '_55': '55',
        '_58': '58',
        '_70': '70',
        '_71': '71',
        '_73': '73',
        '_74': '74',
        '_75': '75',
        '_76': '76',
        '_77': '77',
        '_78': '78',
        '_79': '79',
        '_80': '80',
        '_82': '82',
        '_83': '83',
        '_84': '84',
        '_85': '85',
        '_86': '86',
        '_87': '87',
        '_87_raw__deprecated': '87_raw (deprecated)',
        '_88': '88',
        '_6004': '6004',
        '_6008': '6008',
        '_6070': '6070',
        '_6072': '6072',
        '_6073': '6073',
        '_6119': '6119',
        '_6457': '6457',
        '_6508': '6508',
        '_6509': '6509',
        '_7051': '7051',
        '_7057': '7057',
        '_7058': '7058',
        '_7059': '7059',
        '_7068': '7068',
        '_7084': '7084',
        '_7085': '7085',
        '_7086': '7086',
        '_7087': '7087',
        '_7088': '7088',
        '_7089': '7089',
        '_7094': '7094',
        '_7184': '7184',
        '_7219': '7219',
        '_7220': '7220',
        '_7221': '7221',
        '_7280': '7280',
        '_7281': '7281',
        '_7282': '7282',
        '_7283': '7283',
        '_7284': '7284',
        '_7285': '7285',
        '_7286': '7286',
        '_7287': '7287',
        '_7288': '7288',
        '_7289': '7289',
        '_7290': '7290',
        '_7291': '7291',
        '_7292': '7292',
        '_7293': '7293',
        '_7294': '7294',
        '_7295': '7295',
        '_7296': '7296',
        '_7308': '7308',
        '_7309': '7309',
        '_7310': '7310',
        '_7311': '7311',
        '_7607': '7607',
        '_7633': '7633',
        '_7635': '7635',
        '_7636': '7636',
        '_7637': '7637',
        '_7638': '7638',
        '_7639': '7639',
        '_7644': '7644',
        '_7655': '7655',
        '_7671': '7671',
        '_7672': '7672',
        '_7674': '7674',
        '_7675': '7675',
        '_7676': '7676',
        '_7677': '7677',
        '_7678': '7678',
        '_7679': '7679',
        '_7680': '7680',
        '_7681': '7681',
        '_7682': '7682',
        '_7683': '7683',
        '_7684': '7684',
        '_7685': '7685',
        '_7686': '7686',
        '_7687': '7687',
        '_7688': '7688',
        '_7689': '7689',
        '_7690': '7690',
        '_7694': '7694',
        '_7695': '7695',
        '_7696': '7696',
        '_7697': '7697',
        '_7698': '7698',
        '_7699': '7699',
        '_7700': '7700',
        '_7702': '7702',
        '_7703': '7703',
        '_7704': '7704',
        '_7705': '7705',
        '_7706': '7706',
        '_7707': '7707',
        '_7708': '7708',
        '_7714': '7714',
        '_7715': '7715',
        '_7718': '7718',
        '_7720': '7720',
        '_7741': '7741',
        '_7762': '7762',
        '_7768': '7768'
    }

    def __init__(self, server_id=None, conid=None, updated=None, _31=None, _55=None, _58=None, _70=None, _71=None, _73=None, _74=None, _75=None, _76=None, _77=None, _78=None, _79=None, _80=None, _82=None, _83=None, _84=None, _85=None, _86=None, _87=None, _87_raw__deprecated=None, _88=None, _6004=None, _6008=None, _6070=None, _6072=None, _6073=None, _6119=None, _6457=None, _6508=None, _6509=None, _7051=None, _7057=None, _7058=None, _7059=None, _7068=None, _7084=None, _7085=None, _7086=None, _7087=None, _7088=None, _7089=None, _7094=None, _7184=None, _7219=None, _7220=None, _7221=None, _7280=None, _7281=None, _7282=None, _7283=None, _7284=None, _7285=None, _7286=None, _7287=None, _7288=None, _7289=None, _7290=None, _7291=None, _7292=None, _7293=None, _7294=None, _7295=None, _7296=None, _7308=None, _7309=None, _7310=None, _7311=None, _7607=None, _7633=None, _7635=None, _7636=None, _7637=None, _7638=None, _7639=None, _7644=None, _7655=None, _7671=None, _7672=None, _7674=None, _7675=None, _7676=None, _7677=None, _7678=None, _7679=None, _7680=None, _7681=None, _7682=None, _7683=None, _7684=None, _7685=None, _7686=None, _7687=None, _7688=None, _7689=None, _7690=None, _7694=None, _7695=None, _7696=None, _7697=None, _7698=None, _7699=None, _7700=None, _7702=None, _7703=None, _7704=None, _7705=None, _7706=None, _7707=None, _7708=None, _7714=None, _7715=None, _7718=None, _7720=None, _7741=None, _7762=None, _7768=None):  # noqa: E501
        """InlineResponse20030 - a model defined in Swagger"""  # noqa: E501
        self._server_id = None
        self._conid = None
        self._updated = None
        self.__31 = None
        self.__55 = None
        self.__58 = None
        self.__70 = None
        self.__71 = None
        self.__73 = None
        self.__74 = None
        self.__75 = None
        self.__76 = None
        self.__77 = None
        self.__78 = None
        self.__79 = None
        self.__80 = None
        self.__82 = None
        self.__83 = None
        self.__84 = None
        self.__85 = None
        self.__86 = None
        self.__87 = None
        self.__87_raw__deprecated = None
        self.__88 = None
        self.__6004 = None
        self.__6008 = None
        self.__6070 = None
        self.__6072 = None
        self.__6073 = None
        self.__6119 = None
        self.__6457 = None
        self.__6508 = None
        self.__6509 = None
        self.__7051 = None
        self.__7057 = None
        self.__7058 = None
        self.__7059 = None
        self.__7068 = None
        self.__7084 = None
        self.__7085 = None
        self.__7086 = None
        self.__7087 = None
        self.__7088 = None
        self.__7089 = None
        self.__7094 = None
        self.__7184 = None
        self.__7219 = None
        self.__7220 = None
        self.__7221 = None
        self.__7280 = None
        self.__7281 = None
        self.__7282 = None
        self.__7283 = None
        self.__7284 = None
        self.__7285 = None
        self.__7286 = None
        self.__7287 = None
        self.__7288 = None
        self.__7289 = None
        self.__7290 = None
        self.__7291 = None
        self.__7292 = None
        self.__7293 = None
        self.__7294 = None
        self.__7295 = None
        self.__7296 = None
        self.__7308 = None
        self.__7309 = None
        self.__7310 = None
        self.__7311 = None
        self.__7607 = None
        self.__7633 = None
        self.__7635 = None
        self.__7636 = None
        self.__7637 = None
        self.__7638 = None
        self.__7639 = None
        self.__7644 = None
        self.__7655 = None
        self.__7671 = None
        self.__7672 = None
        self.__7674 = None
        self.__7675 = None
        self.__7676 = None
        self.__7677 = None
        self.__7678 = None
        self.__7679 = None
        self.__7680 = None
        self.__7681 = None
        self.__7682 = None
        self.__7683 = None
        self.__7684 = None
        self.__7685 = None
        self.__7686 = None
        self.__7687 = None
        self.__7688 = None
        self.__7689 = None
        self.__7690 = None
        self.__7694 = None
        self.__7695 = None
        self.__7696 = None
        self.__7697 = None
        self.__7698 = None
        self.__7699 = None
        self.__7700 = None
        self.__7702 = None
        self.__7703 = None
        self.__7704 = None
        self.__7705 = None
        self.__7706 = None
        self.__7707 = None
        self.__7708 = None
        self.__7714 = None
        self.__7715 = None
        self.__7718 = None
        self.__7720 = None
        self.__7741 = None
        self.__7762 = None
        self.__7768 = None
        self.discriminator = None
        if server_id is not None:
            self.server_id = server_id
        if conid is not None:
            self.conid = conid
        if updated is not None:
            self.updated = updated
        if _31 is not None:
            self._31 = _31
        if _55 is not None:
            self._55 = _55
        if _58 is not None:
            self._58 = _58
        if _70 is not None:
            self._70 = _70
        if _71 is not None:
            self._71 = _71
        if _73 is not None:
            self._73 = _73
        if _74 is not None:
            self._74 = _74
        if _75 is not None:
            self._75 = _75
        if _76 is not None:
            self._76 = _76
        if _77 is not None:
            self._77 = _77
        if _78 is not None:
            self._78 = _78
        if _79 is not None:
            self._79 = _79
        if _80 is not None:
            self._80 = _80
        if _82 is not None:
            self._82 = _82
        if _83 is not None:
            self._83 = _83
        if _84 is not None:
            self._84 = _84
        if _85 is not None:
            self._85 = _85
        if _86 is not None:
            self._86 = _86
        if _87 is not None:
            self._87 = _87
        if _87_raw__deprecated is not None:
            self._87_raw__deprecated = _87_raw__deprecated
        if _88 is not None:
            self._88 = _88
        if _6004 is not None:
            self._6004 = _6004
        if _6008 is not None:
            self._6008 = _6008
        if _6070 is not None:
            self._6070 = _6070
        if _6072 is not None:
            self._6072 = _6072
        if _6073 is not None:
            self._6073 = _6073
        if _6119 is not None:
            self._6119 = _6119
        if _6457 is not None:
            self._6457 = _6457
        if _6508 is not None:
            self._6508 = _6508
        if _6509 is not None:
            self._6509 = _6509
        if _7051 is not None:
            self._7051 = _7051
        if _7057 is not None:
            self._7057 = _7057
        if _7058 is not None:
            self._7058 = _7058
        if _7059 is not None:
            self._7059 = _7059
        if _7068 is not None:
            self._7068 = _7068
        if _7084 is not None:
            self._7084 = _7084
        if _7085 is not None:
            self._7085 = _7085
        if _7086 is not None:
            self._7086 = _7086
        if _7087 is not None:
            self._7087 = _7087
        if _7088 is not None:
            self._7088 = _7088
        if _7089 is not None:
            self._7089 = _7089
        if _7094 is not None:
            self._7094 = _7094
        if _7184 is not None:
            self._7184 = _7184
        if _7219 is not None:
            self._7219 = _7219
        if _7220 is not None:
            self._7220 = _7220
        if _7221 is not None:
            self._7221 = _7221
        if _7280 is not None:
            self._7280 = _7280
        if _7281 is not None:
            self._7281 = _7281
        if _7282 is not None:
            self._7282 = _7282
        if _7283 is not None:
            self._7283 = _7283
        if _7284 is not None:
            self._7284 = _7284
        if _7285 is not None:
            self._7285 = _7285
        if _7286 is not None:
            self._7286 = _7286
        if _7287 is not None:
            self._7287 = _7287
        if _7288 is not None:
            self._7288 = _7288
        if _7289 is not None:
            self._7289 = _7289
        if _7290 is not None:
            self._7290 = _7290
        if _7291 is not None:
            self._7291 = _7291
        if _7292 is not None:
            self._7292 = _7292
        if _7293 is not None:
            self._7293 = _7293
        if _7294 is not None:
            self._7294 = _7294
        if _7295 is not None:
            self._7295 = _7295
        if _7296 is not None:
            self._7296 = _7296
        if _7308 is not None:
            self._7308 = _7308
        if _7309 is not None:
            self._7309 = _7309
        if _7310 is not None:
            self._7310 = _7310
        if _7311 is not None:
            self._7311 = _7311
        if _7607 is not None:
            self._7607 = _7607
        if _7633 is not None:
            self._7633 = _7633
        if _7635 is not None:
            self._7635 = _7635
        if _7636 is not None:
            self._7636 = _7636
        if _7637 is not None:
            self._7637 = _7637
        if _7638 is not None:
            self._7638 = _7638
        if _7639 is not None:
            self._7639 = _7639
        if _7644 is not None:
            self._7644 = _7644
        if _7655 is not None:
            self._7655 = _7655
        if _7671 is not None:
            self._7671 = _7671
        if _7672 is not None:
            self._7672 = _7672
        if _7674 is not None:
            self._7674 = _7674
        if _7675 is not None:
            self._7675 = _7675
        if _7676 is not None:
            self._7676 = _7676
        if _7677 is not None:
            self._7677 = _7677
        if _7678 is not None:
            self._7678 = _7678
        if _7679 is not None:
            self._7679 = _7679
        if _7680 is not None:
            self._7680 = _7680
        if _7681 is not None:
            self._7681 = _7681
        if _7682 is not None:
            self._7682 = _7682
        if _7683 is not None:
            self._7683 = _7683
        if _7684 is not None:
            self._7684 = _7684
        if _7685 is not None:
            self._7685 = _7685
        if _7686 is not None:
            self._7686 = _7686
        if _7687 is not None:
            self._7687 = _7687
        if _7688 is not None:
            self._7688 = _7688
        if _7689 is not None:
            self._7689 = _7689
        if _7690 is not None:
            self._7690 = _7690
        if _7694 is not None:
            self._7694 = _7694
        if _7695 is not None:
            self._7695 = _7695
        if _7696 is not None:
            self._7696 = _7696
        if _7697 is not None:
            self._7697 = _7697
        if _7698 is not None:
            self._7698 = _7698
        if _7699 is not None:
            self._7699 = _7699
        if _7700 is not None:
            self._7700 = _7700
        if _7702 is not None:
            self._7702 = _7702
        if _7703 is not None:
            self._7703 = _7703
        if _7704 is not None:
            self._7704 = _7704
        if _7705 is not None:
            self._7705 = _7705
        if _7706 is not None:
            self._7706 = _7706
        if _7707 is not None:
            self._7707 = _7707
        if _7708 is not None:
            self._7708 = _7708
        if _7714 is not None:
            self._7714 = _7714
        if _7715 is not None:
            self._7715 = _7715
        if _7718 is not None:
            self._7718 = _7718
        if _7720 is not None:
            self._7720 = _7720
        if _7741 is not None:
            self._7741 = _7741
        if _7762 is not None:
            self._7762 = _7762
        if _7768 is not None:
            self._7768 = _7768

    @property
    def server_id(self):
        """Gets the server_id of this InlineResponse20030.  # noqa: E501


        :return: The server_id of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self._server_id

    @server_id.setter
    def server_id(self, server_id):
        """Sets the server_id of this InlineResponse20030.


        :param server_id: The server_id of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self._server_id = server_id

    @property
    def conid(self):
        """Gets the conid of this InlineResponse20030.  # noqa: E501


        :return: The conid of this InlineResponse20030.  # noqa: E501
        :rtype: int
        """
        return self._conid

    @conid.setter
    def conid(self, conid):
        """Sets the conid of this InlineResponse20030.


        :param conid: The conid of this InlineResponse20030.  # noqa: E501
        :type: int
        """

        self._conid = conid

    @property
    def updated(self):
        """Gets the updated of this InlineResponse20030.  # noqa: E501


        :return: The updated of this InlineResponse20030.  # noqa: E501
        :rtype: int
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this InlineResponse20030.


        :param updated: The updated of this InlineResponse20030.  # noqa: E501
        :type: int
        """

        self._updated = updated

    @property
    def _31(self):
        """Gets the _31 of this InlineResponse20030.  # noqa: E501

        Last Price - The last price at which the contract traded. May contain one of the following prefixes:   * C - Previous day's closing price.   * H - Trading has halted.   # noqa: E501

        :return: The _31 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__31

    @_31.setter
    def _31(self, _31):
        """Sets the _31 of this InlineResponse20030.

        Last Price - The last price at which the contract traded. May contain one of the following prefixes:   * C - Previous day's closing price.   * H - Trading has halted.   # noqa: E501

        :param _31: The _31 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__31 = _31

    @property
    def _55(self):
        """Gets the _55 of this InlineResponse20030.  # noqa: E501

        Symbol  # noqa: E501

        :return: The _55 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__55

    @_55.setter
    def _55(self, _55):
        """Sets the _55 of this InlineResponse20030.

        Symbol  # noqa: E501

        :param _55: The _55 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__55 = _55

    @property
    def _58(self):
        """Gets the _58 of this InlineResponse20030.  # noqa: E501

        Text  # noqa: E501

        :return: The _58 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__58

    @_58.setter
    def _58(self, _58):
        """Sets the _58 of this InlineResponse20030.

        Text  # noqa: E501

        :param _58: The _58 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__58 = _58

    @property
    def _70(self):
        """Gets the _70 of this InlineResponse20030.  # noqa: E501

        High - Current day high price  # noqa: E501

        :return: The _70 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__70

    @_70.setter
    def _70(self, _70):
        """Sets the _70 of this InlineResponse20030.

        High - Current day high price  # noqa: E501

        :param _70: The _70 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__70 = _70

    @property
    def _71(self):
        """Gets the _71 of this InlineResponse20030.  # noqa: E501

        Low - Current day low price  # noqa: E501

        :return: The _71 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__71

    @_71.setter
    def _71(self, _71):
        """Sets the _71 of this InlineResponse20030.

        Low - Current day low price  # noqa: E501

        :param _71: The _71 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__71 = _71

    @property
    def _73(self):
        """Gets the _73 of this InlineResponse20030.  # noqa: E501

        Market Value - The current market value of  your position in the security. Market Value is calculated with real time market data (even when not subscribed to market data).  # noqa: E501

        :return: The _73 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__73

    @_73.setter
    def _73(self, _73):
        """Sets the _73 of this InlineResponse20030.

        Market Value - The current market value of  your position in the security. Market Value is calculated with real time market data (even when not subscribed to market data).  # noqa: E501

        :param _73: The _73 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__73 = _73

    @property
    def _74(self):
        """Gets the _74 of this InlineResponse20030.  # noqa: E501

        Avg Price - The average price of the position.  # noqa: E501

        :return: The _74 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__74

    @_74.setter
    def _74(self, _74):
        """Sets the _74 of this InlineResponse20030.

        Avg Price - The average price of the position.  # noqa: E501

        :param _74: The _74 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__74 = _74

    @property
    def _75(self):
        """Gets the _75 of this InlineResponse20030.  # noqa: E501

        Unrealized PnL - Unrealized profit or loss. Unrealized PnL is calculated with real time market data (even when not subscribed to market data).  # noqa: E501

        :return: The _75 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__75

    @_75.setter
    def _75(self, _75):
        """Sets the _75 of this InlineResponse20030.

        Unrealized PnL - Unrealized profit or loss. Unrealized PnL is calculated with real time market data (even when not subscribed to market data).  # noqa: E501

        :param _75: The _75 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__75 = _75

    @property
    def _76(self):
        """Gets the _76 of this InlineResponse20030.  # noqa: E501

        Formatted position  # noqa: E501

        :return: The _76 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__76

    @_76.setter
    def _76(self, _76):
        """Sets the _76 of this InlineResponse20030.

        Formatted position  # noqa: E501

        :param _76: The _76 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__76 = _76

    @property
    def _77(self):
        """Gets the _77 of this InlineResponse20030.  # noqa: E501

        Formatted Unrealized PnL  # noqa: E501

        :return: The _77 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__77

    @_77.setter
    def _77(self, _77):
        """Sets the _77 of this InlineResponse20030.

        Formatted Unrealized PnL  # noqa: E501

        :param _77: The _77 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__77 = _77

    @property
    def _78(self):
        """Gets the _78 of this InlineResponse20030.  # noqa: E501

        Daily PnL - Your profit or loss of the day since prior close. Daily PnL is calculated with real time market data (even when not subscribed to market data).  # noqa: E501

        :return: The _78 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__78

    @_78.setter
    def _78(self, _78):
        """Sets the _78 of this InlineResponse20030.

        Daily PnL - Your profit or loss of the day since prior close. Daily PnL is calculated with real time market data (even when not subscribed to market data).  # noqa: E501

        :param _78: The _78 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__78 = _78

    @property
    def _79(self):
        """Gets the _79 of this InlineResponse20030.  # noqa: E501

        Realized PnL - Realized profit or loss. Realized PnL is calculated with real time market data (even when not subscribed to market data).  # noqa: E501

        :return: The _79 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__79

    @_79.setter
    def _79(self, _79):
        """Sets the _79 of this InlineResponse20030.

        Realized PnL - Realized profit or loss. Realized PnL is calculated with real time market data (even when not subscribed to market data).  # noqa: E501

        :param _79: The _79 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__79 = _79

    @property
    def _80(self):
        """Gets the _80 of this InlineResponse20030.  # noqa: E501

        Unrealized PnL % - Unrealized profit or loss expressed in percentage.  # noqa: E501

        :return: The _80 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__80

    @_80.setter
    def _80(self, _80):
        """Sets the _80 of this InlineResponse20030.

        Unrealized PnL % - Unrealized profit or loss expressed in percentage.  # noqa: E501

        :param _80: The _80 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__80 = _80

    @property
    def _82(self):
        """Gets the _82 of this InlineResponse20030.  # noqa: E501

        Change - The difference between the last price and the close on the previous trading day  # noqa: E501

        :return: The _82 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__82

    @_82.setter
    def _82(self, _82):
        """Sets the _82 of this InlineResponse20030.

        Change - The difference between the last price and the close on the previous trading day  # noqa: E501

        :param _82: The _82 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__82 = _82

    @property
    def _83(self):
        """Gets the _83 of this InlineResponse20030.  # noqa: E501

        Change % - The difference between the last price and the close on the previous trading day in percentage.  # noqa: E501

        :return: The _83 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__83

    @_83.setter
    def _83(self, _83):
        """Sets the _83 of this InlineResponse20030.

        Change % - The difference between the last price and the close on the previous trading day in percentage.  # noqa: E501

        :param _83: The _83 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__83 = _83

    @property
    def _84(self):
        """Gets the _84 of this InlineResponse20030.  # noqa: E501

        Bid Price - The highest-priced bid on the contract.  # noqa: E501

        :return: The _84 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__84

    @_84.setter
    def _84(self, _84):
        """Sets the _84 of this InlineResponse20030.

        Bid Price - The highest-priced bid on the contract.  # noqa: E501

        :param _84: The _84 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__84 = _84

    @property
    def _85(self):
        """Gets the _85 of this InlineResponse20030.  # noqa: E501

        Ask Size - The number of contracts or shares offered at the ask price. For US stocks, the number displayed is divided by 100.  # noqa: E501

        :return: The _85 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__85

    @_85.setter
    def _85(self, _85):
        """Sets the _85 of this InlineResponse20030.

        Ask Size - The number of contracts or shares offered at the ask price. For US stocks, the number displayed is divided by 100.  # noqa: E501

        :param _85: The _85 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__85 = _85

    @property
    def _86(self):
        """Gets the _86 of this InlineResponse20030.  # noqa: E501

        Ask Price - The lowest-priced offer on the contract.  # noqa: E501

        :return: The _86 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__86

    @_86.setter
    def _86(self, _86):
        """Sets the _86 of this InlineResponse20030.

        Ask Price - The lowest-priced offer on the contract.  # noqa: E501

        :param _86: The _86 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__86 = _86

    @property
    def _87(self):
        """Gets the _87 of this InlineResponse20030.  # noqa: E501

        Volume - Volume for the day, formatted with 'K' for thousands or 'M' for millions. For higher precision volume refer to field 7762.  # noqa: E501

        :return: The _87 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__87

    @_87.setter
    def _87(self, _87):
        """Sets the _87 of this InlineResponse20030.

        Volume - Volume for the day, formatted with 'K' for thousands or 'M' for millions. For higher precision volume refer to field 7762.  # noqa: E501

        :param _87: The _87 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__87 = _87

    @property
    def _87_raw__deprecated(self):
        """Gets the _87_raw__deprecated of this InlineResponse20030.  # noqa: E501

        Raw Volume - Volume for the day, provided in long form without formatted with K/M. This field value is deprecated, for high precision volume refer to field 7762.  # noqa: E501

        :return: The _87_raw__deprecated of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__87_raw__deprecated

    @_87_raw__deprecated.setter
    def _87_raw__deprecated(self, _87_raw__deprecated):
        """Sets the _87_raw__deprecated of this InlineResponse20030.

        Raw Volume - Volume for the day, provided in long form without formatted with K/M. This field value is deprecated, for high precision volume refer to field 7762.  # noqa: E501

        :param _87_raw__deprecated: The _87_raw__deprecated of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__87_raw__deprecated = _87_raw__deprecated

    @property
    def _88(self):
        """Gets the _88 of this InlineResponse20030.  # noqa: E501

        Bid Size - The number of contracts or shares bid for at the bid price. For US stocks, the number displayed is divided by 100.  # noqa: E501

        :return: The _88 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__88

    @_88.setter
    def _88(self, _88):
        """Sets the _88 of this InlineResponse20030.

        Bid Size - The number of contracts or shares bid for at the bid price. For US stocks, the number displayed is divided by 100.  # noqa: E501

        :param _88: The _88 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__88 = _88

    @property
    def _6004(self):
        """Gets the _6004 of this InlineResponse20030.  # noqa: E501

        Exchange  # noqa: E501

        :return: The _6004 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__6004

    @_6004.setter
    def _6004(self, _6004):
        """Sets the _6004 of this InlineResponse20030.

        Exchange  # noqa: E501

        :param _6004: The _6004 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__6004 = _6004

    @property
    def _6008(self):
        """Gets the _6008 of this InlineResponse20030.  # noqa: E501

        Conid - Contract identifier from IBKR's database.  # noqa: E501

        :return: The _6008 of this InlineResponse20030.  # noqa: E501
        :rtype: int
        """
        return self.__6008

    @_6008.setter
    def _6008(self, _6008):
        """Sets the _6008 of this InlineResponse20030.

        Conid - Contract identifier from IBKR's database.  # noqa: E501

        :param _6008: The _6008 of this InlineResponse20030.  # noqa: E501
        :type: int
        """

        self.__6008 = _6008

    @property
    def _6070(self):
        """Gets the _6070 of this InlineResponse20030.  # noqa: E501

        SecType - The asset class of the instrument.  # noqa: E501

        :return: The _6070 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__6070

    @_6070.setter
    def _6070(self, _6070):
        """Sets the _6070 of this InlineResponse20030.

        SecType - The asset class of the instrument.  # noqa: E501

        :param _6070: The _6070 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__6070 = _6070

    @property
    def _6072(self):
        """Gets the _6072 of this InlineResponse20030.  # noqa: E501

        Months  # noqa: E501

        :return: The _6072 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__6072

    @_6072.setter
    def _6072(self, _6072):
        """Sets the _6072 of this InlineResponse20030.

        Months  # noqa: E501

        :param _6072: The _6072 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__6072 = _6072

    @property
    def _6073(self):
        """Gets the _6073 of this InlineResponse20030.  # noqa: E501

        Regular Expiry  # noqa: E501

        :return: The _6073 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__6073

    @_6073.setter
    def _6073(self, _6073):
        """Sets the _6073 of this InlineResponse20030.

        Regular Expiry  # noqa: E501

        :param _6073: The _6073 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__6073 = _6073

    @property
    def _6119(self):
        """Gets the _6119 of this InlineResponse20030.  # noqa: E501

        Marker for market data delivery method (similar to request id)  # noqa: E501

        :return: The _6119 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__6119

    @_6119.setter
    def _6119(self, _6119):
        """Sets the _6119 of this InlineResponse20030.

        Marker for market data delivery method (similar to request id)  # noqa: E501

        :param _6119: The _6119 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__6119 = _6119

    @property
    def _6457(self):
        """Gets the _6457 of this InlineResponse20030.  # noqa: E501

        Underlying Conid. Use /trsrv/secdef to get more information about the security  # noqa: E501

        :return: The _6457 of this InlineResponse20030.  # noqa: E501
        :rtype: int
        """
        return self.__6457

    @_6457.setter
    def _6457(self, _6457):
        """Sets the _6457 of this InlineResponse20030.

        Underlying Conid. Use /trsrv/secdef to get more information about the security  # noqa: E501

        :param _6457: The _6457 of this InlineResponse20030.  # noqa: E501
        :type: int
        """

        self.__6457 = _6457

    @property
    def _6508(self):
        """Gets the _6508 of this InlineResponse20030.  # noqa: E501

        Service Params.  # noqa: E501

        :return: The _6508 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__6508

    @_6508.setter
    def _6508(self, _6508):
        """Sets the _6508 of this InlineResponse20030.

        Service Params.  # noqa: E501

        :param _6508: The _6508 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__6508 = _6508

    @property
    def _6509(self):
        """Gets the _6509 of this InlineResponse20030.  # noqa: E501

        Market Data Availability. The field may contain three chars. First char defines: R = RealTime, D = Delayed, Z = Frozen, Y = Frozen Delayed, N = Not Subscribed. Second char defines: P = Snapshot, p = Consolidated. Third char defines: B = Book   * RealTime - Data is relayed back in real time without delay, market data subscription(s) are required.   * Delayed - Data is relayed back 15-20 min delayed.    * Frozen - Last recorded data at market close, relayed back in real time.   * Frozen Delayed - Last recorded data at market close, relayed back delayed.   * Not Subscribed - User does not have the required market data subscription(s) to relay back either real time or delayed data.   * Snapshot - Snapshot request is available for contract.   * Consolidated - Market data is aggregated across multiple exchanges or venues.   * Book - Top of the book data is available for contract.   # noqa: E501

        :return: The _6509 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__6509

    @_6509.setter
    def _6509(self, _6509):
        """Sets the _6509 of this InlineResponse20030.

        Market Data Availability. The field may contain three chars. First char defines: R = RealTime, D = Delayed, Z = Frozen, Y = Frozen Delayed, N = Not Subscribed. Second char defines: P = Snapshot, p = Consolidated. Third char defines: B = Book   * RealTime - Data is relayed back in real time without delay, market data subscription(s) are required.   * Delayed - Data is relayed back 15-20 min delayed.    * Frozen - Last recorded data at market close, relayed back in real time.   * Frozen Delayed - Last recorded data at market close, relayed back delayed.   * Not Subscribed - User does not have the required market data subscription(s) to relay back either real time or delayed data.   * Snapshot - Snapshot request is available for contract.   * Consolidated - Market data is aggregated across multiple exchanges or venues.   * Book - Top of the book data is available for contract.   # noqa: E501

        :param _6509: The _6509 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__6509 = _6509

    @property
    def _7051(self):
        """Gets the _7051 of this InlineResponse20030.  # noqa: E501

        Company name  # noqa: E501

        :return: The _7051 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7051

    @_7051.setter
    def _7051(self, _7051):
        """Sets the _7051 of this InlineResponse20030.

        Company name  # noqa: E501

        :param _7051: The _7051 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7051 = _7051

    @property
    def _7057(self):
        """Gets the _7057 of this InlineResponse20030.  # noqa: E501

        Ask Exch - Displays the exchange(s) offering the SMART price. A=AMEX, C=CBOE, I=ISE, X=PHLX, N=PSE, B=BOX, Q=NASDAQOM, Z=BATS, W=CBOE2, T=NASDAQBX, M=MIAX, H=GEMINI, E=EDGX, J=MERCURY   # noqa: E501

        :return: The _7057 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7057

    @_7057.setter
    def _7057(self, _7057):
        """Sets the _7057 of this InlineResponse20030.

        Ask Exch - Displays the exchange(s) offering the SMART price. A=AMEX, C=CBOE, I=ISE, X=PHLX, N=PSE, B=BOX, Q=NASDAQOM, Z=BATS, W=CBOE2, T=NASDAQBX, M=MIAX, H=GEMINI, E=EDGX, J=MERCURY   # noqa: E501

        :param _7057: The _7057 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7057 = _7057

    @property
    def _7058(self):
        """Gets the _7058 of this InlineResponse20030.  # noqa: E501

        Last Exch - Displays the exchange(s) offering the SMART price. A=AMEX, C=CBOE, I=ISE, X=PHLX, N=PSE, B=BOX, Q=NASDAQOM, Z=BATS, W=CBOE2, T=NASDAQBX, M=MIAX, H=GEMINI, E=EDGX, J=MERCURY   # noqa: E501

        :return: The _7058 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7058

    @_7058.setter
    def _7058(self, _7058):
        """Sets the _7058 of this InlineResponse20030.

        Last Exch - Displays the exchange(s) offering the SMART price. A=AMEX, C=CBOE, I=ISE, X=PHLX, N=PSE, B=BOX, Q=NASDAQOM, Z=BATS, W=CBOE2, T=NASDAQBX, M=MIAX, H=GEMINI, E=EDGX, J=MERCURY   # noqa: E501

        :param _7058: The _7058 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7058 = _7058

    @property
    def _7059(self):
        """Gets the _7059 of this InlineResponse20030.  # noqa: E501

        Last Size - The number of unites traded at the last price  # noqa: E501

        :return: The _7059 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7059

    @_7059.setter
    def _7059(self, _7059):
        """Sets the _7059 of this InlineResponse20030.

        Last Size - The number of unites traded at the last price  # noqa: E501

        :param _7059: The _7059 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7059 = _7059

    @property
    def _7068(self):
        """Gets the _7068 of this InlineResponse20030.  # noqa: E501

        Bid Exch - Displays the exchange(s) offering the SMART price. A=AMEX, C=CBOE, I=ISE, X=PHLX, N=PSE, B=BOX, Q=NASDAQOM, Z=BATS, W=CBOE2, T=NASDAQBX, M=MIAX, H=GEMINI, E=EDGX, J=MERCURY   # noqa: E501

        :return: The _7068 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7068

    @_7068.setter
    def _7068(self, _7068):
        """Sets the _7068 of this InlineResponse20030.

        Bid Exch - Displays the exchange(s) offering the SMART price. A=AMEX, C=CBOE, I=ISE, X=PHLX, N=PSE, B=BOX, Q=NASDAQOM, Z=BATS, W=CBOE2, T=NASDAQBX, M=MIAX, H=GEMINI, E=EDGX, J=MERCURY   # noqa: E501

        :param _7068: The _7068 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7068 = _7068

    @property
    def _7084(self):
        """Gets the _7084 of this InlineResponse20030.  # noqa: E501

        Implied Vol./Hist. Vol % - The ratio of the implied volatility over the historical volatility, expressed as a percentage.  # noqa: E501

        :return: The _7084 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7084

    @_7084.setter
    def _7084(self, _7084):
        """Sets the _7084 of this InlineResponse20030.

        Implied Vol./Hist. Vol % - The ratio of the implied volatility over the historical volatility, expressed as a percentage.  # noqa: E501

        :param _7084: The _7084 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7084 = _7084

    @property
    def _7085(self):
        """Gets the _7085 of this InlineResponse20030.  # noqa: E501

        Put/Call Interest - Put option open interest/call option open interest for the trading day.  # noqa: E501

        :return: The _7085 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7085

    @_7085.setter
    def _7085(self, _7085):
        """Sets the _7085 of this InlineResponse20030.

        Put/Call Interest - Put option open interest/call option open interest for the trading day.  # noqa: E501

        :param _7085: The _7085 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7085 = _7085

    @property
    def _7086(self):
        """Gets the _7086 of this InlineResponse20030.  # noqa: E501

        Put/Call Volume - Put option volume/call option volume for the trading day.  # noqa: E501

        :return: The _7086 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7086

    @_7086.setter
    def _7086(self, _7086):
        """Sets the _7086 of this InlineResponse20030.

        Put/Call Volume - Put option volume/call option volume for the trading day.  # noqa: E501

        :param _7086: The _7086 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7086 = _7086

    @property
    def _7087(self):
        """Gets the _7087 of this InlineResponse20030.  # noqa: E501

        Hist. Vol. % - 30-day real-time historical volatility.  # noqa: E501

        :return: The _7087 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7087

    @_7087.setter
    def _7087(self, _7087):
        """Sets the _7087 of this InlineResponse20030.

        Hist. Vol. % - 30-day real-time historical volatility.  # noqa: E501

        :param _7087: The _7087 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7087 = _7087

    @property
    def _7088(self):
        """Gets the _7088 of this InlineResponse20030.  # noqa: E501

        Hist. Vol. Close % - Shows the historical volatility based on previous close price.  # noqa: E501

        :return: The _7088 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7088

    @_7088.setter
    def _7088(self, _7088):
        """Sets the _7088 of this InlineResponse20030.

        Hist. Vol. Close % - Shows the historical volatility based on previous close price.  # noqa: E501

        :param _7088: The _7088 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7088 = _7088

    @property
    def _7089(self):
        """Gets the _7089 of this InlineResponse20030.  # noqa: E501

        Opt. Volume - Option Volume  # noqa: E501

        :return: The _7089 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7089

    @_7089.setter
    def _7089(self, _7089):
        """Sets the _7089 of this InlineResponse20030.

        Opt. Volume - Option Volume  # noqa: E501

        :param _7089: The _7089 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7089 = _7089

    @property
    def _7094(self):
        """Gets the _7094 of this InlineResponse20030.  # noqa: E501

        Conid + Exchange  # noqa: E501

        :return: The _7094 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7094

    @_7094.setter
    def _7094(self, _7094):
        """Sets the _7094 of this InlineResponse20030.

        Conid + Exchange  # noqa: E501

        :param _7094: The _7094 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7094 = _7094

    @property
    def _7184(self):
        """Gets the _7184 of this InlineResponse20030.  # noqa: E501

        canBeTraded - If contract is a trade-able instrument. Returns 1(true) or 0(false).  # noqa: E501

        :return: The _7184 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7184

    @_7184.setter
    def _7184(self, _7184):
        """Sets the _7184 of this InlineResponse20030.

        canBeTraded - If contract is a trade-able instrument. Returns 1(true) or 0(false).  # noqa: E501

        :param _7184: The _7184 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7184 = _7184

    @property
    def _7219(self):
        """Gets the _7219 of this InlineResponse20030.  # noqa: E501

        Contract Description  # noqa: E501

        :return: The _7219 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7219

    @_7219.setter
    def _7219(self, _7219):
        """Sets the _7219 of this InlineResponse20030.

        Contract Description  # noqa: E501

        :param _7219: The _7219 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7219 = _7219

    @property
    def _7220(self):
        """Gets the _7220 of this InlineResponse20030.  # noqa: E501

        Contract Description  # noqa: E501

        :return: The _7220 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7220

    @_7220.setter
    def _7220(self, _7220):
        """Sets the _7220 of this InlineResponse20030.

        Contract Description  # noqa: E501

        :param _7220: The _7220 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7220 = _7220

    @property
    def _7221(self):
        """Gets the _7221 of this InlineResponse20030.  # noqa: E501

        Listing Exchange  # noqa: E501

        :return: The _7221 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7221

    @_7221.setter
    def _7221(self, _7221):
        """Sets the _7221 of this InlineResponse20030.

        Listing Exchange  # noqa: E501

        :param _7221: The _7221 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7221 = _7221

    @property
    def _7280(self):
        """Gets the _7280 of this InlineResponse20030.  # noqa: E501

        Industry - Displays the type of industry under which the underlying company can be categorized.  # noqa: E501

        :return: The _7280 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7280

    @_7280.setter
    def _7280(self, _7280):
        """Sets the _7280 of this InlineResponse20030.

        Industry - Displays the type of industry under which the underlying company can be categorized.  # noqa: E501

        :param _7280: The _7280 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7280 = _7280

    @property
    def _7281(self):
        """Gets the _7281 of this InlineResponse20030.  # noqa: E501

        Category - Displays a more detailed level of description within the industry under which the underlying company can be categorized.  # noqa: E501

        :return: The _7281 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7281

    @_7281.setter
    def _7281(self, _7281):
        """Sets the _7281 of this InlineResponse20030.

        Category - Displays a more detailed level of description within the industry under which the underlying company can be categorized.  # noqa: E501

        :param _7281: The _7281 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7281 = _7281

    @property
    def _7282(self):
        """Gets the _7282 of this InlineResponse20030.  # noqa: E501

        Average Volume - The average daily trading volume over 90 days.  # noqa: E501

        :return: The _7282 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7282

    @_7282.setter
    def _7282(self, _7282):
        """Sets the _7282 of this InlineResponse20030.

        Average Volume - The average daily trading volume over 90 days.  # noqa: E501

        :param _7282: The _7282 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7282 = _7282

    @property
    def _7283(self):
        """Gets the _7283 of this InlineResponse20030.  # noqa: E501

        Option Implied Vol. % - A prediction of how volatile an underlying will be in the future. At the market volatility estimated for a maturity thirty calendar days forward of the current trading day, and based on option prices from two consecutive expiration months. To query the Implied Vol. % of a specific strike refer to field 7633.   # noqa: E501

        :return: The _7283 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7283

    @_7283.setter
    def _7283(self, _7283):
        """Sets the _7283 of this InlineResponse20030.

        Option Implied Vol. % - A prediction of how volatile an underlying will be in the future. At the market volatility estimated for a maturity thirty calendar days forward of the current trading day, and based on option prices from two consecutive expiration months. To query the Implied Vol. % of a specific strike refer to field 7633.   # noqa: E501

        :param _7283: The _7283 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7283 = _7283

    @property
    def _7284(self):
        """Gets the _7284 of this InlineResponse20030.  # noqa: E501

        Historic Volume (30d)  # noqa: E501

        :return: The _7284 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7284

    @_7284.setter
    def _7284(self, _7284):
        """Sets the _7284 of this InlineResponse20030.

        Historic Volume (30d)  # noqa: E501

        :param _7284: The _7284 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7284 = _7284

    @property
    def _7285(self):
        """Gets the _7285 of this InlineResponse20030.  # noqa: E501

        Put/Call Ratio  # noqa: E501

        :return: The _7285 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7285

    @_7285.setter
    def _7285(self, _7285):
        """Sets the _7285 of this InlineResponse20030.

        Put/Call Ratio  # noqa: E501

        :param _7285: The _7285 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7285 = _7285

    @property
    def _7286(self):
        """Gets the _7286 of this InlineResponse20030.  # noqa: E501

        Dividend Amount - Displays the amount of the next dividend.  # noqa: E501

        :return: The _7286 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7286

    @_7286.setter
    def _7286(self, _7286):
        """Sets the _7286 of this InlineResponse20030.

        Dividend Amount - Displays the amount of the next dividend.  # noqa: E501

        :param _7286: The _7286 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7286 = _7286

    @property
    def _7287(self):
        """Gets the _7287 of this InlineResponse20030.  # noqa: E501

        Dividend Yield % - This value is the toal of the expected dividend payments over the next twelve months per share divided by the Current Price and is expressed as a percentage. For derivatives, this displays the total of the expected dividend payments over the expiry date.   # noqa: E501

        :return: The _7287 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7287

    @_7287.setter
    def _7287(self, _7287):
        """Sets the _7287 of this InlineResponse20030.

        Dividend Yield % - This value is the toal of the expected dividend payments over the next twelve months per share divided by the Current Price and is expressed as a percentage. For derivatives, this displays the total of the expected dividend payments over the expiry date.   # noqa: E501

        :param _7287: The _7287 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7287 = _7287

    @property
    def _7288(self):
        """Gets the _7288 of this InlineResponse20030.  # noqa: E501

        Ex-date of the dividend  # noqa: E501

        :return: The _7288 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7288

    @_7288.setter
    def _7288(self, _7288):
        """Sets the _7288 of this InlineResponse20030.

        Ex-date of the dividend  # noqa: E501

        :param _7288: The _7288 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7288 = _7288

    @property
    def _7289(self):
        """Gets the _7289 of this InlineResponse20030.  # noqa: E501

        Market Cap  # noqa: E501

        :return: The _7289 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7289

    @_7289.setter
    def _7289(self, _7289):
        """Sets the _7289 of this InlineResponse20030.

        Market Cap  # noqa: E501

        :param _7289: The _7289 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7289 = _7289

    @property
    def _7290(self):
        """Gets the _7290 of this InlineResponse20030.  # noqa: E501

        P/E  # noqa: E501

        :return: The _7290 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7290

    @_7290.setter
    def _7290(self, _7290):
        """Sets the _7290 of this InlineResponse20030.

        P/E  # noqa: E501

        :param _7290: The _7290 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7290 = _7290

    @property
    def _7291(self):
        """Gets the _7291 of this InlineResponse20030.  # noqa: E501

        EPS  # noqa: E501

        :return: The _7291 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7291

    @_7291.setter
    def _7291(self, _7291):
        """Sets the _7291 of this InlineResponse20030.

        EPS  # noqa: E501

        :param _7291: The _7291 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7291 = _7291

    @property
    def _7292(self):
        """Gets the _7292 of this InlineResponse20030.  # noqa: E501

        Cost Basis - Your current position in this security multiplied by the average price and multiplier.  # noqa: E501

        :return: The _7292 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7292

    @_7292.setter
    def _7292(self, _7292):
        """Sets the _7292 of this InlineResponse20030.

        Cost Basis - Your current position in this security multiplied by the average price and multiplier.  # noqa: E501

        :param _7292: The _7292 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7292 = _7292

    @property
    def _7293(self):
        """Gets the _7293 of this InlineResponse20030.  # noqa: E501

        52 Week High - The highest price for the past 52 weeks.  # noqa: E501

        :return: The _7293 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7293

    @_7293.setter
    def _7293(self, _7293):
        """Sets the _7293 of this InlineResponse20030.

        52 Week High - The highest price for the past 52 weeks.  # noqa: E501

        :param _7293: The _7293 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7293 = _7293

    @property
    def _7294(self):
        """Gets the _7294 of this InlineResponse20030.  # noqa: E501

        52 Week Low - The lowest price for the past 52 weeks.  # noqa: E501

        :return: The _7294 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7294

    @_7294.setter
    def _7294(self, _7294):
        """Sets the _7294 of this InlineResponse20030.

        52 Week Low - The lowest price for the past 52 weeks.  # noqa: E501

        :param _7294: The _7294 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7294 = _7294

    @property
    def _7295(self):
        """Gets the _7295 of this InlineResponse20030.  # noqa: E501

        Open - Today's opening price.  # noqa: E501

        :return: The _7295 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7295

    @_7295.setter
    def _7295(self, _7295):
        """Sets the _7295 of this InlineResponse20030.

        Open - Today's opening price.  # noqa: E501

        :param _7295: The _7295 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7295 = _7295

    @property
    def _7296(self):
        """Gets the _7296 of this InlineResponse20030.  # noqa: E501

        Close - Today's closing price.  # noqa: E501

        :return: The _7296 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7296

    @_7296.setter
    def _7296(self, _7296):
        """Sets the _7296 of this InlineResponse20030.

        Close - Today's closing price.  # noqa: E501

        :param _7296: The _7296 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7296 = _7296

    @property
    def _7308(self):
        """Gets the _7308 of this InlineResponse20030.  # noqa: E501

        Delta - The ratio of the change in the price of the option to the corresponding change in the price of the underlying.  # noqa: E501

        :return: The _7308 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7308

    @_7308.setter
    def _7308(self, _7308):
        """Sets the _7308 of this InlineResponse20030.

        Delta - The ratio of the change in the price of the option to the corresponding change in the price of the underlying.  # noqa: E501

        :param _7308: The _7308 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7308 = _7308

    @property
    def _7309(self):
        """Gets the _7309 of this InlineResponse20030.  # noqa: E501

        Gamma - The rate of change for the delta with respect to the underlying asset's price.  # noqa: E501

        :return: The _7309 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7309

    @_7309.setter
    def _7309(self, _7309):
        """Sets the _7309 of this InlineResponse20030.

        Gamma - The rate of change for the delta with respect to the underlying asset's price.  # noqa: E501

        :param _7309: The _7309 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7309 = _7309

    @property
    def _7310(self):
        """Gets the _7310 of this InlineResponse20030.  # noqa: E501

        Theta - A measure of the rate of decline the value of an option due to the passage of time.  # noqa: E501

        :return: The _7310 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7310

    @_7310.setter
    def _7310(self, _7310):
        """Sets the _7310 of this InlineResponse20030.

        Theta - A measure of the rate of decline the value of an option due to the passage of time.  # noqa: E501

        :param _7310: The _7310 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7310 = _7310

    @property
    def _7311(self):
        """Gets the _7311 of this InlineResponse20030.  # noqa: E501

        Vega - The amount that the price of an option changes compared to a 1% change in the volatility.  # noqa: E501

        :return: The _7311 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7311

    @_7311.setter
    def _7311(self, _7311):
        """Sets the _7311 of this InlineResponse20030.

        Vega - The amount that the price of an option changes compared to a 1% change in the volatility.  # noqa: E501

        :param _7311: The _7311 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7311 = _7311

    @property
    def _7607(self):
        """Gets the _7607 of this InlineResponse20030.  # noqa: E501

        Opt. Volume Change % - Today's option volume as a percentage of the average option volume.  # noqa: E501

        :return: The _7607 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7607

    @_7607.setter
    def _7607(self, _7607):
        """Sets the _7607 of this InlineResponse20030.

        Opt. Volume Change % - Today's option volume as a percentage of the average option volume.  # noqa: E501

        :param _7607: The _7607 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7607 = _7607

    @property
    def _7633(self):
        """Gets the _7633 of this InlineResponse20030.  # noqa: E501

        Implied Vol. % - The implied volatility for the specific strike of the option in percentage. To query the Option Implied Vol. % from the underlying refer to field 7283.    # noqa: E501

        :return: The _7633 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7633

    @_7633.setter
    def _7633(self, _7633):
        """Sets the _7633 of this InlineResponse20030.

        Implied Vol. % - The implied volatility for the specific strike of the option in percentage. To query the Option Implied Vol. % from the underlying refer to field 7283.    # noqa: E501

        :param _7633: The _7633 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7633 = _7633

    @property
    def _7635(self):
        """Gets the _7635 of this InlineResponse20030.  # noqa: E501

        Mark - The mark price is, the ask price if ask is less than last price, the bid price if bid is more than the last price, otherwise it's equal to last price.  # noqa: E501

        :return: The _7635 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7635

    @_7635.setter
    def _7635(self, _7635):
        """Sets the _7635 of this InlineResponse20030.

        Mark - The mark price is, the ask price if ask is less than last price, the bid price if bid is more than the last price, otherwise it's equal to last price.  # noqa: E501

        :param _7635: The _7635 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7635 = _7635

    @property
    def _7636(self):
        """Gets the _7636 of this InlineResponse20030.  # noqa: E501

        Shortable Shares - Number of shares available for shorting.  # noqa: E501

        :return: The _7636 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7636

    @_7636.setter
    def _7636(self, _7636):
        """Sets the _7636 of this InlineResponse20030.

        Shortable Shares - Number of shares available for shorting.  # noqa: E501

        :param _7636: The _7636 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7636 = _7636

    @property
    def _7637(self):
        """Gets the _7637 of this InlineResponse20030.  # noqa: E501

        Fee Rate - Interest rate charged on borrowed shares.  # noqa: E501

        :return: The _7637 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7637

    @_7637.setter
    def _7637(self, _7637):
        """Sets the _7637 of this InlineResponse20030.

        Fee Rate - Interest rate charged on borrowed shares.  # noqa: E501

        :param _7637: The _7637 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7637 = _7637

    @property
    def _7638(self):
        """Gets the _7638 of this InlineResponse20030.  # noqa: E501

        Option Open Interest  # noqa: E501

        :return: The _7638 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7638

    @_7638.setter
    def _7638(self, _7638):
        """Sets the _7638 of this InlineResponse20030.

        Option Open Interest  # noqa: E501

        :param _7638: The _7638 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7638 = _7638

    @property
    def _7639(self):
        """Gets the _7639 of this InlineResponse20030.  # noqa: E501

        % of Mark Value - Displays the market value of the contract as a percentage of the total market value of the account. Mark Value is calculated with real time market data (even when not subscribed to market data).   # noqa: E501

        :return: The _7639 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7639

    @_7639.setter
    def _7639(self, _7639):
        """Sets the _7639 of this InlineResponse20030.

        % of Mark Value - Displays the market value of the contract as a percentage of the total market value of the account. Mark Value is calculated with real time market data (even when not subscribed to market data).   # noqa: E501

        :param _7639: The _7639 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7639 = _7639

    @property
    def _7644(self):
        """Gets the _7644 of this InlineResponse20030.  # noqa: E501

        Shortable - Describes the level of difficulty with which the security can be sold short.  # noqa: E501

        :return: The _7644 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7644

    @_7644.setter
    def _7644(self, _7644):
        """Sets the _7644 of this InlineResponse20030.

        Shortable - Describes the level of difficulty with which the security can be sold short.  # noqa: E501

        :param _7644: The _7644 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7644 = _7644

    @property
    def _7655(self):
        """Gets the _7655 of this InlineResponse20030.  # noqa: E501

        Morningstar Rating - Displays Morningstar Rating provided value. Requires [Morningstar](https://www.interactivebrokers.com/en/index.php?f=14262) subscription.  # noqa: E501

        :return: The _7655 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7655

    @_7655.setter
    def _7655(self, _7655):
        """Sets the _7655 of this InlineResponse20030.

        Morningstar Rating - Displays Morningstar Rating provided value. Requires [Morningstar](https://www.interactivebrokers.com/en/index.php?f=14262) subscription.  # noqa: E501

        :param _7655: The _7655 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7655 = _7655

    @property
    def _7671(self):
        """Gets the _7671 of this InlineResponse20030.  # noqa: E501

        Dividends - This value is the total of the expected dividend payments over the next twelve months per share.  # noqa: E501

        :return: The _7671 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7671

    @_7671.setter
    def _7671(self, _7671):
        """Sets the _7671 of this InlineResponse20030.

        Dividends - This value is the total of the expected dividend payments over the next twelve months per share.  # noqa: E501

        :param _7671: The _7671 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7671 = _7671

    @property
    def _7672(self):
        """Gets the _7672 of this InlineResponse20030.  # noqa: E501

        Dividends TTM - This value is the total of the expected dividend payments over the last twelve months per share.  # noqa: E501

        :return: The _7672 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7672

    @_7672.setter
    def _7672(self, _7672):
        """Sets the _7672 of this InlineResponse20030.

        Dividends TTM - This value is the total of the expected dividend payments over the last twelve months per share.  # noqa: E501

        :param _7672: The _7672 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7672 = _7672

    @property
    def _7674(self):
        """Gets the _7674 of this InlineResponse20030.  # noqa: E501

        EMA(200) - Exponential moving average (N=200).  # noqa: E501

        :return: The _7674 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7674

    @_7674.setter
    def _7674(self, _7674):
        """Sets the _7674 of this InlineResponse20030.

        EMA(200) - Exponential moving average (N=200).  # noqa: E501

        :param _7674: The _7674 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7674 = _7674

    @property
    def _7675(self):
        """Gets the _7675 of this InlineResponse20030.  # noqa: E501

        EMA(100) - Exponential moving average (N=100).  # noqa: E501

        :return: The _7675 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7675

    @_7675.setter
    def _7675(self, _7675):
        """Sets the _7675 of this InlineResponse20030.

        EMA(100) - Exponential moving average (N=100).  # noqa: E501

        :param _7675: The _7675 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7675 = _7675

    @property
    def _7676(self):
        """Gets the _7676 of this InlineResponse20030.  # noqa: E501

        EMA(50) - Exponential moving average (N=50).  # noqa: E501

        :return: The _7676 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7676

    @_7676.setter
    def _7676(self, _7676):
        """Sets the _7676 of this InlineResponse20030.

        EMA(50) - Exponential moving average (N=50).  # noqa: E501

        :param _7676: The _7676 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7676 = _7676

    @property
    def _7677(self):
        """Gets the _7677 of this InlineResponse20030.  # noqa: E501

        EMA(20) - Exponential moving average (N=20).  # noqa: E501

        :return: The _7677 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7677

    @_7677.setter
    def _7677(self, _7677):
        """Sets the _7677 of this InlineResponse20030.

        EMA(20) - Exponential moving average (N=20).  # noqa: E501

        :param _7677: The _7677 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7677 = _7677

    @property
    def _7678(self):
        """Gets the _7678 of this InlineResponse20030.  # noqa: E501

        Price/EMA(200) - Price to Exponential moving average (N=200) ratio -1, displayed in percents.  # noqa: E501

        :return: The _7678 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7678

    @_7678.setter
    def _7678(self, _7678):
        """Sets the _7678 of this InlineResponse20030.

        Price/EMA(200) - Price to Exponential moving average (N=200) ratio -1, displayed in percents.  # noqa: E501

        :param _7678: The _7678 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7678 = _7678

    @property
    def _7679(self):
        """Gets the _7679 of this InlineResponse20030.  # noqa: E501

        Price/EMA(100) - Price to Exponential moving average (N=100) ratio -1, displayed in percents.  # noqa: E501

        :return: The _7679 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7679

    @_7679.setter
    def _7679(self, _7679):
        """Sets the _7679 of this InlineResponse20030.

        Price/EMA(100) - Price to Exponential moving average (N=100) ratio -1, displayed in percents.  # noqa: E501

        :param _7679: The _7679 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7679 = _7679

    @property
    def _7680(self):
        """Gets the _7680 of this InlineResponse20030.  # noqa: E501

        Price/EMA(50) - Price to Exponential moving average (N=50) ratio -1, displayed in percents.  # noqa: E501

        :return: The _7680 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7680

    @_7680.setter
    def _7680(self, _7680):
        """Sets the _7680 of this InlineResponse20030.

        Price/EMA(50) - Price to Exponential moving average (N=50) ratio -1, displayed in percents.  # noqa: E501

        :param _7680: The _7680 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7680 = _7680

    @property
    def _7681(self):
        """Gets the _7681 of this InlineResponse20030.  # noqa: E501

        Price/EMA(20) - Price to Exponential moving average (N=20) ratio -1, displayed in percents.  # noqa: E501

        :return: The _7681 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7681

    @_7681.setter
    def _7681(self, _7681):
        """Sets the _7681 of this InlineResponse20030.

        Price/EMA(20) - Price to Exponential moving average (N=20) ratio -1, displayed in percents.  # noqa: E501

        :param _7681: The _7681 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7681 = _7681

    @property
    def _7682(self):
        """Gets the _7682 of this InlineResponse20030.  # noqa: E501

        Change Since Open - The difference between the last price and the open price.  # noqa: E501

        :return: The _7682 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7682

    @_7682.setter
    def _7682(self, _7682):
        """Sets the _7682 of this InlineResponse20030.

        Change Since Open - The difference between the last price and the open price.  # noqa: E501

        :param _7682: The _7682 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7682 = _7682

    @property
    def _7683(self):
        """Gets the _7683 of this InlineResponse20030.  # noqa: E501

        Upcoming Event - Shows the next major company event. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :return: The _7683 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7683

    @_7683.setter
    def _7683(self, _7683):
        """Sets the _7683 of this InlineResponse20030.

        Upcoming Event - Shows the next major company event. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :param _7683: The _7683 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7683 = _7683

    @property
    def _7684(self):
        """Gets the _7684 of this InlineResponse20030.  # noqa: E501

        Upcoming Event Date - The date of the next major company event. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :return: The _7684 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7684

    @_7684.setter
    def _7684(self, _7684):
        """Sets the _7684 of this InlineResponse20030.

        Upcoming Event Date - The date of the next major company event. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :param _7684: The _7684 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7684 = _7684

    @property
    def _7685(self):
        """Gets the _7685 of this InlineResponse20030.  # noqa: E501

        Upcoming Analyst Meeting - The date and time of the next scheduled analyst meeting. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :return: The _7685 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7685

    @_7685.setter
    def _7685(self, _7685):
        """Sets the _7685 of this InlineResponse20030.

        Upcoming Analyst Meeting - The date and time of the next scheduled analyst meeting. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :param _7685: The _7685 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7685 = _7685

    @property
    def _7686(self):
        """Gets the _7686 of this InlineResponse20030.  # noqa: E501

        Upcoming Earnings - The date and time of the next scheduled earnings/earnings call event. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :return: The _7686 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7686

    @_7686.setter
    def _7686(self, _7686):
        """Sets the _7686 of this InlineResponse20030.

        Upcoming Earnings - The date and time of the next scheduled earnings/earnings call event. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :param _7686: The _7686 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7686 = _7686

    @property
    def _7687(self):
        """Gets the _7687 of this InlineResponse20030.  # noqa: E501

        Upcoming Misc Event - The date and time of the next shareholder meeting, presentation or other event. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :return: The _7687 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7687

    @_7687.setter
    def _7687(self, _7687):
        """Sets the _7687 of this InlineResponse20030.

        Upcoming Misc Event - The date and time of the next shareholder meeting, presentation or other event. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :param _7687: The _7687 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7687 = _7687

    @property
    def _7688(self):
        """Gets the _7688 of this InlineResponse20030.  # noqa: E501

        Recent Analyst Meeting - The date and time of the most recent analyst meeting. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :return: The _7688 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7688

    @_7688.setter
    def _7688(self, _7688):
        """Sets the _7688 of this InlineResponse20030.

        Recent Analyst Meeting - The date and time of the most recent analyst meeting. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :param _7688: The _7688 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7688 = _7688

    @property
    def _7689(self):
        """Gets the _7689 of this InlineResponse20030.  # noqa: E501

        Recent Earnings - The date and time of the most recent earnings/earning call event. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :return: The _7689 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7689

    @_7689.setter
    def _7689(self, _7689):
        """Sets the _7689 of this InlineResponse20030.

        Recent Earnings - The date and time of the most recent earnings/earning call event. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :param _7689: The _7689 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7689 = _7689

    @property
    def _7690(self):
        """Gets the _7690 of this InlineResponse20030.  # noqa: E501

        Recent Misc Event - The date and time of the most recent shareholder meeting, presentation or other event. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :return: The _7690 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7690

    @_7690.setter
    def _7690(self, _7690):
        """Sets the _7690 of this InlineResponse20030.

        Recent Misc Event - The date and time of the most recent shareholder meeting, presentation or other event. Requires [Wall Street Horizon](https://www.interactivebrokers.com/en/index.php?f=24674) subscription.  # noqa: E501

        :param _7690: The _7690 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7690 = _7690

    @property
    def _7694(self):
        """Gets the _7694 of this InlineResponse20030.  # noqa: E501

        Probability of Max Return - Customer implied probability of maximum potential gain.  # noqa: E501

        :return: The _7694 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7694

    @_7694.setter
    def _7694(self, _7694):
        """Sets the _7694 of this InlineResponse20030.

        Probability of Max Return - Customer implied probability of maximum potential gain.  # noqa: E501

        :param _7694: The _7694 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7694 = _7694

    @property
    def _7695(self):
        """Gets the _7695 of this InlineResponse20030.  # noqa: E501

        Break Even - Break even points  # noqa: E501

        :return: The _7695 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7695

    @_7695.setter
    def _7695(self, _7695):
        """Sets the _7695 of this InlineResponse20030.

        Break Even - Break even points  # noqa: E501

        :param _7695: The _7695 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7695 = _7695

    @property
    def _7696(self):
        """Gets the _7696 of this InlineResponse20030.  # noqa: E501

        SPX Delta - Beta Weighted Delta is calculated using the formula; Delta x dollar adjusted beta, where adjusted beta is adjusted by the ratio of the close price.  # noqa: E501

        :return: The _7696 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7696

    @_7696.setter
    def _7696(self, _7696):
        """Sets the _7696 of this InlineResponse20030.

        SPX Delta - Beta Weighted Delta is calculated using the formula; Delta x dollar adjusted beta, where adjusted beta is adjusted by the ratio of the close price.  # noqa: E501

        :param _7696: The _7696 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7696 = _7696

    @property
    def _7697(self):
        """Gets the _7697 of this InlineResponse20030.  # noqa: E501

        Futures Open Interest - Total number of outstanding futures contracts  # noqa: E501

        :return: The _7697 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7697

    @_7697.setter
    def _7697(self, _7697):
        """Sets the _7697 of this InlineResponse20030.

        Futures Open Interest - Total number of outstanding futures contracts  # noqa: E501

        :param _7697: The _7697 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7697 = _7697

    @property
    def _7698(self):
        """Gets the _7698 of this InlineResponse20030.  # noqa: E501

        Last Yield - Implied yield of the bond if it is purchased at the current last price. Last yield is calculated using the Last price on all possible call dates. It is assumed that prepayment occurs if the bond has call or put provisions and the issuer can offer a lower coupon rate based on current market rates. The yield to worst will be the lowest of the yield to maturity or yield to call (if the bond has prepayment provisions). Yield to worse may be the same as yield to maturity but never higher.   # noqa: E501

        :return: The _7698 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7698

    @_7698.setter
    def _7698(self, _7698):
        """Sets the _7698 of this InlineResponse20030.

        Last Yield - Implied yield of the bond if it is purchased at the current last price. Last yield is calculated using the Last price on all possible call dates. It is assumed that prepayment occurs if the bond has call or put provisions and the issuer can offer a lower coupon rate based on current market rates. The yield to worst will be the lowest of the yield to maturity or yield to call (if the bond has prepayment provisions). Yield to worse may be the same as yield to maturity but never higher.   # noqa: E501

        :param _7698: The _7698 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7698 = _7698

    @property
    def _7699(self):
        """Gets the _7699 of this InlineResponse20030.  # noqa: E501

        Bid Yield - Implied yield of the bond if it is purchased at the current bid price. Bid yield is calculated using the Ask on all possible call dates. It is assumed that prepayment occurs if the bond has call or put provisions and the issuer can offer a lower coupon rate based on current market rates. The yield to worst will be the lowest of the yield to maturity or yield to call (if the bond has prepayment provisions). Yield to worse may be the same as yield to maturity but never higher.   # noqa: E501

        :return: The _7699 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7699

    @_7699.setter
    def _7699(self, _7699):
        """Sets the _7699 of this InlineResponse20030.

        Bid Yield - Implied yield of the bond if it is purchased at the current bid price. Bid yield is calculated using the Ask on all possible call dates. It is assumed that prepayment occurs if the bond has call or put provisions and the issuer can offer a lower coupon rate based on current market rates. The yield to worst will be the lowest of the yield to maturity or yield to call (if the bond has prepayment provisions). Yield to worse may be the same as yield to maturity but never higher.   # noqa: E501

        :param _7699: The _7699 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7699 = _7699

    @property
    def _7700(self):
        """Gets the _7700 of this InlineResponse20030.  # noqa: E501

        Probability of Max Return - Customer implied probability of maximum potential gain.  # noqa: E501

        :return: The _7700 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7700

    @_7700.setter
    def _7700(self, _7700):
        """Sets the _7700 of this InlineResponse20030.

        Probability of Max Return - Customer implied probability of maximum potential gain.  # noqa: E501

        :param _7700: The _7700 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7700 = _7700

    @property
    def _7702(self):
        """Gets the _7702 of this InlineResponse20030.  # noqa: E501

        Probability of Max Loss - Customer implied probability of maximum potential loss.  # noqa: E501

        :return: The _7702 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7702

    @_7702.setter
    def _7702(self, _7702):
        """Sets the _7702 of this InlineResponse20030.

        Probability of Max Loss - Customer implied probability of maximum potential loss.  # noqa: E501

        :param _7702: The _7702 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7702 = _7702

    @property
    def _7703(self):
        """Gets the _7703 of this InlineResponse20030.  # noqa: E501

        Profit Probability - Customer implied probability of any gain.  # noqa: E501

        :return: The _7703 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7703

    @_7703.setter
    def _7703(self, _7703):
        """Sets the _7703 of this InlineResponse20030.

        Profit Probability - Customer implied probability of any gain.  # noqa: E501

        :param _7703: The _7703 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7703 = _7703

    @property
    def _7704(self):
        """Gets the _7704 of this InlineResponse20030.  # noqa: E501

        Organization Type  # noqa: E501

        :return: The _7704 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7704

    @_7704.setter
    def _7704(self, _7704):
        """Sets the _7704 of this InlineResponse20030.

        Organization Type  # noqa: E501

        :param _7704: The _7704 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7704 = _7704

    @property
    def _7705(self):
        """Gets the _7705 of this InlineResponse20030.  # noqa: E501

        Debt Class  # noqa: E501

        :return: The _7705 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7705

    @_7705.setter
    def _7705(self, _7705):
        """Sets the _7705 of this InlineResponse20030.

        Debt Class  # noqa: E501

        :param _7705: The _7705 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7705 = _7705

    @property
    def _7706(self):
        """Gets the _7706 of this InlineResponse20030.  # noqa: E501

        Ratings - Ratings issued for bond contract.  # noqa: E501

        :return: The _7706 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7706

    @_7706.setter
    def _7706(self, _7706):
        """Sets the _7706 of this InlineResponse20030.

        Ratings - Ratings issued for bond contract.  # noqa: E501

        :param _7706: The _7706 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7706 = _7706

    @property
    def _7707(self):
        """Gets the _7707 of this InlineResponse20030.  # noqa: E501

        Bond State Code  # noqa: E501

        :return: The _7707 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7707

    @_7707.setter
    def _7707(self, _7707):
        """Sets the _7707 of this InlineResponse20030.

        Bond State Code  # noqa: E501

        :param _7707: The _7707 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7707 = _7707

    @property
    def _7708(self):
        """Gets the _7708 of this InlineResponse20030.  # noqa: E501

        Bond Type  # noqa: E501

        :return: The _7708 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7708

    @_7708.setter
    def _7708(self, _7708):
        """Sets the _7708 of this InlineResponse20030.

        Bond Type  # noqa: E501

        :param _7708: The _7708 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7708 = _7708

    @property
    def _7714(self):
        """Gets the _7714 of this InlineResponse20030.  # noqa: E501

        Last Trading Date  # noqa: E501

        :return: The _7714 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7714

    @_7714.setter
    def _7714(self, _7714):
        """Sets the _7714 of this InlineResponse20030.

        Last Trading Date  # noqa: E501

        :param _7714: The _7714 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7714 = _7714

    @property
    def _7715(self):
        """Gets the _7715 of this InlineResponse20030.  # noqa: E501

        Issue Date  # noqa: E501

        :return: The _7715 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7715

    @_7715.setter
    def _7715(self, _7715):
        """Sets the _7715 of this InlineResponse20030.

        Issue Date  # noqa: E501

        :param _7715: The _7715 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7715 = _7715

    @property
    def _7718(self):
        """Gets the _7718 of this InlineResponse20030.  # noqa: E501

        Beta - Beta is against standard index.  # noqa: E501

        :return: The _7718 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7718

    @_7718.setter
    def _7718(self, _7718):
        """Sets the _7718 of this InlineResponse20030.

        Beta - Beta is against standard index.  # noqa: E501

        :param _7718: The _7718 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7718 = _7718

    @property
    def _7720(self):
        """Gets the _7720 of this InlineResponse20030.  # noqa: E501

        Ask Yield - Implied yield of the bond if it is purchased at the current offer. Ask yield is calculated using the Bid on all possible call dates. It is assumed that prepayment occurs if the bond has call or put provisions and the issuer can offer a lower coupon rate based on current market rates. The yield to worst will be the lowest of the yield to maturity or yield to call (if the bond has prepayment provisions). Yield to worse may be the same as yield to maturity but never higher.   # noqa: E501

        :return: The _7720 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7720

    @_7720.setter
    def _7720(self, _7720):
        """Sets the _7720 of this InlineResponse20030.

        Ask Yield - Implied yield of the bond if it is purchased at the current offer. Ask yield is calculated using the Bid on all possible call dates. It is assumed that prepayment occurs if the bond has call or put provisions and the issuer can offer a lower coupon rate based on current market rates. The yield to worst will be the lowest of the yield to maturity or yield to call (if the bond has prepayment provisions). Yield to worse may be the same as yield to maturity but never higher.   # noqa: E501

        :param _7720: The _7720 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7720 = _7720

    @property
    def _7741(self):
        """Gets the _7741 of this InlineResponse20030.  # noqa: E501

        Prior Close - Yesterday's closing price  # noqa: E501

        :return: The _7741 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7741

    @_7741.setter
    def _7741(self, _7741):
        """Sets the _7741 of this InlineResponse20030.

        Prior Close - Yesterday's closing price  # noqa: E501

        :param _7741: The _7741 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7741 = _7741

    @property
    def _7762(self):
        """Gets the _7762 of this InlineResponse20030.  # noqa: E501

        Volume Long - High precision volume for the day. For formatted volume refer to field 87.  # noqa: E501

        :return: The _7762 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7762

    @_7762.setter
    def _7762(self, _7762):
        """Sets the _7762 of this InlineResponse20030.

        Volume Long - High precision volume for the day. For formatted volume refer to field 87.  # noqa: E501

        :param _7762: The _7762 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7762 = _7762

    @property
    def _7768(self):
        """Gets the _7768 of this InlineResponse20030.  # noqa: E501

        hasTradingPermissions - if user has trading permissions for specified contract. Returns 1(true) or 0(false).  # noqa: E501

        :return: The _7768 of this InlineResponse20030.  # noqa: E501
        :rtype: str
        """
        return self.__7768

    @_7768.setter
    def _7768(self, _7768):
        """Sets the _7768 of this InlineResponse20030.

        hasTradingPermissions - if user has trading permissions for specified contract. Returns 1(true) or 0(false).  # noqa: E501

        :param _7768: The _7768 of this InlineResponse20030.  # noqa: E501
        :type: str
        """

        self.__7768 = _7768

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20030, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20030):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
